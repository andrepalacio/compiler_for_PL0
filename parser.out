Grammar:

Rule 0     S' -> program
Rule 1     program -> funcMain
Rule 2     program -> funcList
Rule 3     funcList -> func
Rule 4     funcList -> funcList func
Rule 5     func -> FUN ID LPAREN argList RPAREN varList statementList
Rule 6     funcMain -> FUN ID LPAREN RPAREN varList statementList
Rule 7     statementList -> statement
Rule 8     statementList -> statement SEMICOLON statementList
Rule 9     statement -> BEGIN statementList END
Rule 10    statement -> BREAK
Rule 11    statement -> SKIP
Rule 12    statement -> ID LPAREN exprList RPAREN
Rule 13    statement -> RETURN expr
Rule 14    statement -> READ LPAREN location RPAREN
Rule 15    statement -> WRITE LPAREN expr RPAREN
Rule 16    statement -> PRINT LPAREN STRING RPAREN
Rule 17    statement -> ID ASSIGN expr
Rule 18    statement -> IF relation THEN statement ELSE statement
Rule 19    statement -> IF relation THEN statement
Rule 20    statement -> WHILE relation DO statement
Rule 21    relation -> LPAREN relation RPAREN
Rule 22    relation -> NOT relation
Rule 23    relation -> relation OR relation
Rule 24    relation -> relation AND relation
Rule 25    relation -> expr NEQ expr
Rule 26    relation -> expr EQ expr
Rule 27    relation -> expr GT expr
Rule 28    relation -> expr GTE expr
Rule 29    relation -> expr LT expr
Rule 30    relation -> expr LTE expr
Rule 31    exprList -> expr
Rule 32    exprList -> expr COMMA exprList
Rule 33    expr -> TFLOAT LPAREN expr RPAREN
Rule 34    expr -> TINT LPAREN expr RPAREN
Rule 35    expr -> number
Rule 36    expr -> ID LBRACKET expr RBRACKET
Rule 37    expr -> ID
Rule 38    expr -> ID LPAREN exprList RPAREN
Rule 39    expr -> LPAREN expr RPAREN
Rule 40    expr -> PLUS expr
Rule 41    expr -> MINUS expr
Rule 42    expr -> expr DIVIDE expr
Rule 43    expr -> expr TIMES expr
Rule 44    expr -> expr MINUS expr
Rule 45    expr -> expr PLUS expr
Rule 46    argList -> var
Rule 47    argList -> var COMMA argList
Rule 48    varList -> var
Rule 49    varList -> var varList
Rule 50    var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
Rule 51    var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
Rule 52    var -> ID COLON TFLOAT SEMICOLON
Rule 53    var -> ID COLON TINT SEMICOLON
Rule 54    number -> MINUS FLOAT
Rule 55    number -> MINUS INT
Rule 56    number -> FLOAT
Rule 57    number -> INT
Rule 58    location -> ID LBRACKET ID RBRACKET
Rule 59    location -> ID LBRACKET INT RBRACKET
Rule 60    location -> ID

Unused terminals:

    RBRACE
    EOF
    LBRACE

Terminals, with rules where they appear:

AND                  : 24
ASSIGN               : 17
BEGIN                : 9
BREAK                : 10
COLON                : 50 51 52 53
COMMA                : 32 47
DIVIDE               : 42
DO                   : 20
ELSE                 : 18
END                  : 9
EOF                  : 
EQ                   : 26
FLOAT                : 54 56
FUN                  : 5 6
GT                   : 27
GTE                  : 28
ID                   : 5 6 12 17 36 37 38 50 51 52 53 58 58 59 60
IF                   : 18 19
INT                  : 50 51 55 57 59
LBRACE               : 
LBRACKET             : 36 50 51 58 59
LPAREN               : 5 6 12 14 15 16 21 33 34 38 39
LT                   : 29
LTE                  : 30
MINUS                : 41 44 54 55
NEQ                  : 25
NOT                  : 22
OR                   : 23
PLUS                 : 40 45
PRINT                : 16
RBRACE               : 
RBRACKET             : 36 50 51 58 59
READ                 : 14
RETURN               : 13
RPAREN               : 5 6 12 14 15 16 21 33 34 38 39
SEMICOLON            : 8 50 51 52 53
SKIP                 : 11
STRING               : 16
TFLOAT               : 33 50 52
THEN                 : 18 19
TIMES                : 43
TINT                 : 34 51 53
WHILE                : 20
WRITE                : 15
error                : 

Nonterminals, with rules where they appear:

argList              : 5 47
expr                 : 13 15 17 25 25 26 26 27 27 28 28 29 29 30 30 31 32 33 34 36 39 40 41 42 42 43 43 44 44 45 45
exprList             : 12 32 38
func                 : 3 4
funcList             : 2 4
funcMain             : 1
location             : 14
number               : 35
program              : 0
relation             : 18 19 20 21 22 23 23 24 24
statement            : 7 8 18 18 19 20
statementList        : 5 6 8 9
var                  : 46 47 48 49
varList              : 5 6 49


state 0

    (0) S' -> . program
    (1) program -> . funcMain
    (2) program -> . funcList
    (6) funcMain -> . FUN ID LPAREN RPAREN varList statementList
    (3) funcList -> . func
    (4) funcList -> . funcList func
    (5) func -> . FUN ID LPAREN argList RPAREN varList statementList
    FUN             shift and go to state 4

    program                        shift and go to state 1
    funcMain                       shift and go to state 2
    funcList                       shift and go to state 3
    func                           shift and go to state 5

state 1

    (0) S' -> program .


state 2

    (1) program -> funcMain .
    $end            reduce using rule 1 (program -> funcMain .)


state 3

    (2) program -> funcList .
    (4) funcList -> funcList . func
    (5) func -> . FUN ID LPAREN argList RPAREN varList statementList
    $end            reduce using rule 2 (program -> funcList .)
    FUN             shift and go to state 7

    func                           shift and go to state 6

state 4

    (6) funcMain -> FUN . ID LPAREN RPAREN varList statementList
    (5) func -> FUN . ID LPAREN argList RPAREN varList statementList
    ID              shift and go to state 8


state 5

    (3) funcList -> func .
    FUN             reduce using rule 3 (funcList -> func .)
    $end            reduce using rule 3 (funcList -> func .)


state 6

    (4) funcList -> funcList func .
    FUN             reduce using rule 4 (funcList -> funcList func .)
    $end            reduce using rule 4 (funcList -> funcList func .)


state 7

    (5) func -> FUN . ID LPAREN argList RPAREN varList statementList
    ID              shift and go to state 9


state 8

    (6) funcMain -> FUN ID . LPAREN RPAREN varList statementList
    (5) func -> FUN ID . LPAREN argList RPAREN varList statementList
    LPAREN          shift and go to state 10


state 9

    (5) func -> FUN ID . LPAREN argList RPAREN varList statementList
    LPAREN          shift and go to state 11


state 10

    (6) funcMain -> FUN ID LPAREN . RPAREN varList statementList
    (5) func -> FUN ID LPAREN . argList RPAREN varList statementList
    (46) argList -> . var
    (47) argList -> . var COMMA argList
    (50) var -> . ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> . ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> . ID COLON TFLOAT SEMICOLON
    (53) var -> . ID COLON TINT SEMICOLON
    RPAREN          shift and go to state 13
    ID              shift and go to state 12

    argList                        shift and go to state 14
    var                            shift and go to state 15

state 11

    (5) func -> FUN ID LPAREN . argList RPAREN varList statementList
    (46) argList -> . var
    (47) argList -> . var COMMA argList
    (50) var -> . ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> . ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> . ID COLON TFLOAT SEMICOLON
    (53) var -> . ID COLON TINT SEMICOLON
    ID              shift and go to state 12

    argList                        shift and go to state 14
    var                            shift and go to state 15

state 12

    (50) var -> ID . COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> ID . COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> ID . COLON TFLOAT SEMICOLON
    (53) var -> ID . COLON TINT SEMICOLON
    COLON           shift and go to state 16


state 13

    (6) funcMain -> FUN ID LPAREN RPAREN . varList statementList
    (48) varList -> . var
    (49) varList -> . var varList
    (50) var -> . ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> . ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> . ID COLON TFLOAT SEMICOLON
    (53) var -> . ID COLON TINT SEMICOLON
    ID              shift and go to state 12

    varList                        shift and go to state 17
    var                            shift and go to state 18

state 14

    (5) func -> FUN ID LPAREN argList . RPAREN varList statementList
    RPAREN          shift and go to state 19


state 15

    (46) argList -> var .
    (47) argList -> var . COMMA argList
    RPAREN          reduce using rule 46 (argList -> var .)
    COMMA           shift and go to state 20


state 16

    (50) var -> ID COLON . TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> ID COLON . TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> ID COLON . TFLOAT SEMICOLON
    (53) var -> ID COLON . TINT SEMICOLON
    TFLOAT          shift and go to state 21
    TINT            shift and go to state 22


state 17

    (6) funcMain -> FUN ID LPAREN RPAREN varList . statementList
    (7) statementList -> . statement
    (8) statementList -> . statement SEMICOLON statementList
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 24
    statement                      shift and go to state 25

state 18

    (48) varList -> var .
    (49) varList -> var . varList
    (48) varList -> . var
    (49) varList -> . var varList
    (50) var -> . ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> . ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> . ID COLON TFLOAT SEMICOLON
    (53) var -> . ID COLON TINT SEMICOLON
  ! shift/reduce conflict for ID resolved as shift
    BEGIN           reduce using rule 48 (varList -> var .)
    BREAK           reduce using rule 48 (varList -> var .)
    SKIP            reduce using rule 48 (varList -> var .)
    RETURN          reduce using rule 48 (varList -> var .)
    READ            reduce using rule 48 (varList -> var .)
    WRITE           reduce using rule 48 (varList -> var .)
    PRINT           reduce using rule 48 (varList -> var .)
    IF              reduce using rule 48 (varList -> var .)
    WHILE           reduce using rule 48 (varList -> var .)
    ID              shift and go to state 12

    var                            shift and go to state 18
    varList                        shift and go to state 35

state 19

    (5) func -> FUN ID LPAREN argList RPAREN . varList statementList
    (48) varList -> . var
    (49) varList -> . var varList
    (50) var -> . ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> . ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> . ID COLON TFLOAT SEMICOLON
    (53) var -> . ID COLON TINT SEMICOLON
    ID              shift and go to state 12

    varList                        shift and go to state 36
    var                            shift and go to state 18

state 20

    (47) argList -> var COMMA . argList
    (46) argList -> . var
    (47) argList -> . var COMMA argList
    (50) var -> . ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON
    (51) var -> . ID COLON TINT LBRACKET INT RBRACKET SEMICOLON
    (52) var -> . ID COLON TFLOAT SEMICOLON
    (53) var -> . ID COLON TINT SEMICOLON
    ID              shift and go to state 12

    var                            shift and go to state 15
    argList                        shift and go to state 37

state 21

    (50) var -> ID COLON TFLOAT . LBRACKET INT RBRACKET SEMICOLON
    (52) var -> ID COLON TFLOAT . SEMICOLON
    LBRACKET        shift and go to state 38
    SEMICOLON       shift and go to state 39


state 22

    (51) var -> ID COLON TINT . LBRACKET INT RBRACKET SEMICOLON
    (53) var -> ID COLON TINT . SEMICOLON
    LBRACKET        shift and go to state 40
    SEMICOLON       shift and go to state 41


state 23

    (12) statement -> ID . LPAREN exprList RPAREN
    (17) statement -> ID . ASSIGN expr
    LPAREN          shift and go to state 42
    ASSIGN          shift and go to state 43


state 24

    (6) funcMain -> FUN ID LPAREN RPAREN varList statementList .
    $end            reduce using rule 6 (funcMain -> FUN ID LPAREN RPAREN varList statementList .)


state 25

    (7) statementList -> statement .
    (8) statementList -> statement . SEMICOLON statementList
    $end            reduce using rule 7 (statementList -> statement .)
    END             reduce using rule 7 (statementList -> statement .)
    FUN             reduce using rule 7 (statementList -> statement .)
    SEMICOLON       shift and go to state 44


state 26

    (9) statement -> BEGIN . statementList END
    (7) statementList -> . statement
    (8) statementList -> . statement SEMICOLON statementList
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 45
    statement                      shift and go to state 25

state 27

    (10) statement -> BREAK .
    SEMICOLON       reduce using rule 10 (statement -> BREAK .)
    $end            reduce using rule 10 (statement -> BREAK .)
    END             reduce using rule 10 (statement -> BREAK .)
    FUN             reduce using rule 10 (statement -> BREAK .)
    ELSE            reduce using rule 10 (statement -> BREAK .)


state 28

    (11) statement -> SKIP .
    SEMICOLON       reduce using rule 11 (statement -> SKIP .)
    $end            reduce using rule 11 (statement -> SKIP .)
    END             reduce using rule 11 (statement -> SKIP .)
    FUN             reduce using rule 11 (statement -> SKIP .)
    ELSE            reduce using rule 11 (statement -> SKIP .)


state 29

    (13) statement -> RETURN . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 46
    number                         shift and go to state 50

state 30

    (14) statement -> READ . LPAREN location RPAREN
    LPAREN          shift and go to state 56


state 31

    (15) statement -> WRITE . LPAREN expr RPAREN
    LPAREN          shift and go to state 57


state 32

    (16) statement -> PRINT . LPAREN STRING RPAREN
    LPAREN          shift and go to state 58


state 33

    (18) statement -> IF . relation THEN statement ELSE statement
    (19) statement -> IF . relation THEN statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . relation OR relation
    (24) relation -> . relation AND relation
    (25) relation -> . expr NEQ expr
    (26) relation -> . expr EQ expr
    (27) relation -> . expr GT expr
    (28) relation -> . expr GTE expr
    (29) relation -> . expr LT expr
    (30) relation -> . expr LTE expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    LPAREN          shift and go to state 60
    NOT             shift and go to state 61
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 59
    expr                           shift and go to state 62
    number                         shift and go to state 50

state 34

    (20) statement -> WHILE . relation DO statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . relation OR relation
    (24) relation -> . relation AND relation
    (25) relation -> . expr NEQ expr
    (26) relation -> . expr EQ expr
    (27) relation -> . expr GT expr
    (28) relation -> . expr GTE expr
    (29) relation -> . expr LT expr
    (30) relation -> . expr LTE expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    LPAREN          shift and go to state 60
    NOT             shift and go to state 61
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 63
    expr                           shift and go to state 62
    number                         shift and go to state 50

state 35

    (49) varList -> var varList .
    BEGIN           reduce using rule 49 (varList -> var varList .)
    BREAK           reduce using rule 49 (varList -> var varList .)
    SKIP            reduce using rule 49 (varList -> var varList .)
    ID              reduce using rule 49 (varList -> var varList .)
    RETURN          reduce using rule 49 (varList -> var varList .)
    READ            reduce using rule 49 (varList -> var varList .)
    WRITE           reduce using rule 49 (varList -> var varList .)
    PRINT           reduce using rule 49 (varList -> var varList .)
    IF              reduce using rule 49 (varList -> var varList .)
    WHILE           reduce using rule 49 (varList -> var varList .)


state 36

    (5) func -> FUN ID LPAREN argList RPAREN varList . statementList
    (7) statementList -> . statement
    (8) statementList -> . statement SEMICOLON statementList
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 64
    statement                      shift and go to state 25

state 37

    (47) argList -> var COMMA argList .
    RPAREN          reduce using rule 47 (argList -> var COMMA argList .)


state 38

    (50) var -> ID COLON TFLOAT LBRACKET . INT RBRACKET SEMICOLON
    INT             shift and go to state 65


state 39

    (52) var -> ID COLON TFLOAT SEMICOLON .
    COMMA           reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    RPAREN          reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    ID              reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    BEGIN           reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    BREAK           reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    SKIP            reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    RETURN          reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    READ            reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    WRITE           reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    PRINT           reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    IF              reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)
    WHILE           reduce using rule 52 (var -> ID COLON TFLOAT SEMICOLON .)


state 40

    (51) var -> ID COLON TINT LBRACKET . INT RBRACKET SEMICOLON
    INT             shift and go to state 66


state 41

    (53) var -> ID COLON TINT SEMICOLON .
    COMMA           reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    RPAREN          reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    ID              reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    BEGIN           reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    BREAK           reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    SKIP            reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    RETURN          reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    READ            reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    WRITE           reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    PRINT           reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    IF              reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)
    WHILE           reduce using rule 53 (var -> ID COLON TINT SEMICOLON .)


state 42

    (12) statement -> ID LPAREN . exprList RPAREN
    (31) exprList -> . expr
    (32) exprList -> . expr COMMA exprList
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    exprList                       shift and go to state 67
    expr                           shift and go to state 68
    number                         shift and go to state 50

state 43

    (17) statement -> ID ASSIGN . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 69
    number                         shift and go to state 50

state 44

    (8) statementList -> statement SEMICOLON . statementList
    (7) statementList -> . statement
    (8) statementList -> . statement SEMICOLON statementList
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statement                      shift and go to state 25
    statementList                  shift and go to state 70

state 45

    (9) statement -> BEGIN statementList . END
    END             shift and go to state 71


state 46

    (13) statement -> RETURN expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 13 (statement -> RETURN expr .)
    $end            reduce using rule 13 (statement -> RETURN expr .)
    END             reduce using rule 13 (statement -> RETURN expr .)
    FUN             reduce using rule 13 (statement -> RETURN expr .)
    ELSE            reduce using rule 13 (statement -> RETURN expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 47

    (33) expr -> TFLOAT . LPAREN expr RPAREN
    LPAREN          shift and go to state 76


state 48

    (39) expr -> LPAREN . expr RPAREN
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 77
    number                         shift and go to state 50

state 49

    (34) expr -> TINT . LPAREN expr RPAREN
    LPAREN          shift and go to state 78


state 50

    (35) expr -> number .
    DIVIDE          reduce using rule 35 (expr -> number .)
    TIMES           reduce using rule 35 (expr -> number .)
    MINUS           reduce using rule 35 (expr -> number .)
    PLUS            reduce using rule 35 (expr -> number .)
    SEMICOLON       reduce using rule 35 (expr -> number .)
    $end            reduce using rule 35 (expr -> number .)
    END             reduce using rule 35 (expr -> number .)
    FUN             reduce using rule 35 (expr -> number .)
    ELSE            reduce using rule 35 (expr -> number .)
    NEQ             reduce using rule 35 (expr -> number .)
    EQ              reduce using rule 35 (expr -> number .)
    GT              reduce using rule 35 (expr -> number .)
    GTE             reduce using rule 35 (expr -> number .)
    LT              reduce using rule 35 (expr -> number .)
    LTE             reduce using rule 35 (expr -> number .)
    COMMA           reduce using rule 35 (expr -> number .)
    RPAREN          reduce using rule 35 (expr -> number .)
    RBRACKET        reduce using rule 35 (expr -> number .)
    THEN            reduce using rule 35 (expr -> number .)
    OR              reduce using rule 35 (expr -> number .)
    AND             reduce using rule 35 (expr -> number .)
    DO              reduce using rule 35 (expr -> number .)


state 51

    (36) expr -> ID . LBRACKET expr RBRACKET
    (37) expr -> ID .
    (38) expr -> ID . LPAREN exprList RPAREN
    LBRACKET        shift and go to state 79
    DIVIDE          reduce using rule 37 (expr -> ID .)
    TIMES           reduce using rule 37 (expr -> ID .)
    MINUS           reduce using rule 37 (expr -> ID .)
    PLUS            reduce using rule 37 (expr -> ID .)
    SEMICOLON       reduce using rule 37 (expr -> ID .)
    $end            reduce using rule 37 (expr -> ID .)
    END             reduce using rule 37 (expr -> ID .)
    FUN             reduce using rule 37 (expr -> ID .)
    ELSE            reduce using rule 37 (expr -> ID .)
    NEQ             reduce using rule 37 (expr -> ID .)
    EQ              reduce using rule 37 (expr -> ID .)
    GT              reduce using rule 37 (expr -> ID .)
    GTE             reduce using rule 37 (expr -> ID .)
    LT              reduce using rule 37 (expr -> ID .)
    LTE             reduce using rule 37 (expr -> ID .)
    COMMA           reduce using rule 37 (expr -> ID .)
    RPAREN          reduce using rule 37 (expr -> ID .)
    RBRACKET        reduce using rule 37 (expr -> ID .)
    THEN            reduce using rule 37 (expr -> ID .)
    OR              reduce using rule 37 (expr -> ID .)
    AND             reduce using rule 37 (expr -> ID .)
    DO              reduce using rule 37 (expr -> ID .)
    LPAREN          shift and go to state 80


state 52

    (40) expr -> PLUS . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 81
    number                         shift and go to state 50

state 53

    (41) expr -> MINUS . expr
    (54) number -> MINUS . FLOAT
    (55) number -> MINUS . INT
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    FLOAT           shift and go to state 83
    INT             shift and go to state 84
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53

    expr                           shift and go to state 82
    number                         shift and go to state 50

state 54

    (56) number -> FLOAT .
    DIVIDE          reduce using rule 56 (number -> FLOAT .)
    TIMES           reduce using rule 56 (number -> FLOAT .)
    MINUS           reduce using rule 56 (number -> FLOAT .)
    PLUS            reduce using rule 56 (number -> FLOAT .)
    SEMICOLON       reduce using rule 56 (number -> FLOAT .)
    $end            reduce using rule 56 (number -> FLOAT .)
    END             reduce using rule 56 (number -> FLOAT .)
    FUN             reduce using rule 56 (number -> FLOAT .)
    ELSE            reduce using rule 56 (number -> FLOAT .)
    NEQ             reduce using rule 56 (number -> FLOAT .)
    EQ              reduce using rule 56 (number -> FLOAT .)
    GT              reduce using rule 56 (number -> FLOAT .)
    GTE             reduce using rule 56 (number -> FLOAT .)
    LT              reduce using rule 56 (number -> FLOAT .)
    LTE             reduce using rule 56 (number -> FLOAT .)
    COMMA           reduce using rule 56 (number -> FLOAT .)
    RPAREN          reduce using rule 56 (number -> FLOAT .)
    RBRACKET        reduce using rule 56 (number -> FLOAT .)
    THEN            reduce using rule 56 (number -> FLOAT .)
    OR              reduce using rule 56 (number -> FLOAT .)
    AND             reduce using rule 56 (number -> FLOAT .)
    DO              reduce using rule 56 (number -> FLOAT .)


state 55

    (57) number -> INT .
    DIVIDE          reduce using rule 57 (number -> INT .)
    TIMES           reduce using rule 57 (number -> INT .)
    MINUS           reduce using rule 57 (number -> INT .)
    PLUS            reduce using rule 57 (number -> INT .)
    SEMICOLON       reduce using rule 57 (number -> INT .)
    $end            reduce using rule 57 (number -> INT .)
    END             reduce using rule 57 (number -> INT .)
    FUN             reduce using rule 57 (number -> INT .)
    ELSE            reduce using rule 57 (number -> INT .)
    NEQ             reduce using rule 57 (number -> INT .)
    EQ              reduce using rule 57 (number -> INT .)
    GT              reduce using rule 57 (number -> INT .)
    GTE             reduce using rule 57 (number -> INT .)
    LT              reduce using rule 57 (number -> INT .)
    LTE             reduce using rule 57 (number -> INT .)
    COMMA           reduce using rule 57 (number -> INT .)
    RPAREN          reduce using rule 57 (number -> INT .)
    RBRACKET        reduce using rule 57 (number -> INT .)
    THEN            reduce using rule 57 (number -> INT .)
    OR              reduce using rule 57 (number -> INT .)
    AND             reduce using rule 57 (number -> INT .)
    DO              reduce using rule 57 (number -> INT .)


state 56

    (14) statement -> READ LPAREN . location RPAREN
    (58) location -> . ID LBRACKET ID RBRACKET
    (59) location -> . ID LBRACKET INT RBRACKET
    (60) location -> . ID
    ID              shift and go to state 86

    location                       shift and go to state 85

state 57

    (15) statement -> WRITE LPAREN . expr RPAREN
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 87
    number                         shift and go to state 50

state 58

    (16) statement -> PRINT LPAREN . STRING RPAREN
    STRING          shift and go to state 88


state 59

    (18) statement -> IF relation . THEN statement ELSE statement
    (19) statement -> IF relation . THEN statement
    (23) relation -> relation . OR relation
    (24) relation -> relation . AND relation
    THEN            shift and go to state 89
    OR              shift and go to state 90
    AND             shift and go to state 91


state 60

    (21) relation -> LPAREN . relation RPAREN
    (39) expr -> LPAREN . expr RPAREN
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . relation OR relation
    (24) relation -> . relation AND relation
    (25) relation -> . expr NEQ expr
    (26) relation -> . expr EQ expr
    (27) relation -> . expr GT expr
    (28) relation -> . expr GTE expr
    (29) relation -> . expr LT expr
    (30) relation -> . expr LTE expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    LPAREN          shift and go to state 60
    NOT             shift and go to state 61
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 92
    expr                           shift and go to state 93
    number                         shift and go to state 50

state 61

    (22) relation -> NOT . relation
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . relation OR relation
    (24) relation -> . relation AND relation
    (25) relation -> . expr NEQ expr
    (26) relation -> . expr EQ expr
    (27) relation -> . expr GT expr
    (28) relation -> . expr GTE expr
    (29) relation -> . expr LT expr
    (30) relation -> . expr LTE expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    LPAREN          shift and go to state 60
    NOT             shift and go to state 61
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 94
    expr                           shift and go to state 62
    number                         shift and go to state 50

state 62

    (25) relation -> expr . NEQ expr
    (26) relation -> expr . EQ expr
    (27) relation -> expr . GT expr
    (28) relation -> expr . GTE expr
    (29) relation -> expr . LT expr
    (30) relation -> expr . LTE expr
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    NEQ             shift and go to state 95
    EQ              shift and go to state 96
    GT              shift and go to state 97
    GTE             shift and go to state 98
    LT              shift and go to state 99
    LTE             shift and go to state 100
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 63

    (20) statement -> WHILE relation . DO statement
    (23) relation -> relation . OR relation
    (24) relation -> relation . AND relation
    DO              shift and go to state 101
    OR              shift and go to state 90
    AND             shift and go to state 91


state 64

    (5) func -> FUN ID LPAREN argList RPAREN varList statementList .
    FUN             reduce using rule 5 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    $end            reduce using rule 5 (func -> FUN ID LPAREN argList RPAREN varList statementList .)


state 65

    (50) var -> ID COLON TFLOAT LBRACKET INT . RBRACKET SEMICOLON
    RBRACKET        shift and go to state 102


state 66

    (51) var -> ID COLON TINT LBRACKET INT . RBRACKET SEMICOLON
    RBRACKET        shift and go to state 103


state 67

    (12) statement -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 104


state 68

    (31) exprList -> expr .
    (32) exprList -> expr . COMMA exprList
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RPAREN          reduce using rule 31 (exprList -> expr .)
    COMMA           shift and go to state 105
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 69

    (17) statement -> ID ASSIGN expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 17 (statement -> ID ASSIGN expr .)
    $end            reduce using rule 17 (statement -> ID ASSIGN expr .)
    END             reduce using rule 17 (statement -> ID ASSIGN expr .)
    FUN             reduce using rule 17 (statement -> ID ASSIGN expr .)
    ELSE            reduce using rule 17 (statement -> ID ASSIGN expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 70

    (8) statementList -> statement SEMICOLON statementList .
    $end            reduce using rule 8 (statementList -> statement SEMICOLON statementList .)
    END             reduce using rule 8 (statementList -> statement SEMICOLON statementList .)
    FUN             reduce using rule 8 (statementList -> statement SEMICOLON statementList .)


state 71

    (9) statement -> BEGIN statementList END .
    SEMICOLON       reduce using rule 9 (statement -> BEGIN statementList END .)
    $end            reduce using rule 9 (statement -> BEGIN statementList END .)
    END             reduce using rule 9 (statement -> BEGIN statementList END .)
    FUN             reduce using rule 9 (statement -> BEGIN statementList END .)
    ELSE            reduce using rule 9 (statement -> BEGIN statementList END .)


state 72

    (42) expr -> expr DIVIDE . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 106
    number                         shift and go to state 50

state 73

    (43) expr -> expr TIMES . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 107
    number                         shift and go to state 50

state 74

    (44) expr -> expr MINUS . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 108
    number                         shift and go to state 50

state 75

    (45) expr -> expr PLUS . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 109
    number                         shift and go to state 50

state 76

    (33) expr -> TFLOAT LPAREN . expr RPAREN
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 110
    number                         shift and go to state 50

state 77

    (39) expr -> LPAREN expr . RPAREN
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RPAREN          shift and go to state 111
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 78

    (34) expr -> TINT LPAREN . expr RPAREN
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 112
    number                         shift and go to state 50

state 79

    (36) expr -> ID LBRACKET . expr RBRACKET
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 113
    number                         shift and go to state 50

state 80

    (38) expr -> ID LPAREN . exprList RPAREN
    (31) exprList -> . expr
    (32) exprList -> . expr COMMA exprList
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    exprList                       shift and go to state 114
    expr                           shift and go to state 68
    number                         shift and go to state 50

state 81

    (40) expr -> PLUS expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 40 (expr -> PLUS expr .)
    $end            reduce using rule 40 (expr -> PLUS expr .)
    END             reduce using rule 40 (expr -> PLUS expr .)
    FUN             reduce using rule 40 (expr -> PLUS expr .)
    ELSE            reduce using rule 40 (expr -> PLUS expr .)
    NEQ             reduce using rule 40 (expr -> PLUS expr .)
    EQ              reduce using rule 40 (expr -> PLUS expr .)
    GT              reduce using rule 40 (expr -> PLUS expr .)
    GTE             reduce using rule 40 (expr -> PLUS expr .)
    LT              reduce using rule 40 (expr -> PLUS expr .)
    LTE             reduce using rule 40 (expr -> PLUS expr .)
    COMMA           reduce using rule 40 (expr -> PLUS expr .)
    RPAREN          reduce using rule 40 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 40 (expr -> PLUS expr .)
    THEN            reduce using rule 40 (expr -> PLUS expr .)
    OR              reduce using rule 40 (expr -> PLUS expr .)
    AND             reduce using rule 40 (expr -> PLUS expr .)
    DO              reduce using rule 40 (expr -> PLUS expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 82

    (41) expr -> MINUS expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 41 (expr -> MINUS expr .)
    $end            reduce using rule 41 (expr -> MINUS expr .)
    END             reduce using rule 41 (expr -> MINUS expr .)
    FUN             reduce using rule 41 (expr -> MINUS expr .)
    ELSE            reduce using rule 41 (expr -> MINUS expr .)
    NEQ             reduce using rule 41 (expr -> MINUS expr .)
    EQ              reduce using rule 41 (expr -> MINUS expr .)
    GT              reduce using rule 41 (expr -> MINUS expr .)
    GTE             reduce using rule 41 (expr -> MINUS expr .)
    LT              reduce using rule 41 (expr -> MINUS expr .)
    LTE             reduce using rule 41 (expr -> MINUS expr .)
    COMMA           reduce using rule 41 (expr -> MINUS expr .)
    RPAREN          reduce using rule 41 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 41 (expr -> MINUS expr .)
    THEN            reduce using rule 41 (expr -> MINUS expr .)
    OR              reduce using rule 41 (expr -> MINUS expr .)
    AND             reduce using rule 41 (expr -> MINUS expr .)
    DO              reduce using rule 41 (expr -> MINUS expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 83

    (54) number -> MINUS FLOAT .
    (56) number -> FLOAT .
  ! reduce/reduce conflict for DIVIDE resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for TIMES resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for MINUS resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for PLUS resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for $end resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for FUN resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for NEQ resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for EQ resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for GT resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for GTE resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for LT resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for LTE resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for THEN resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for OR resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for AND resolved using rule 56 (number -> FLOAT .)
  ! reduce/reduce conflict for DO resolved using rule 56 (number -> FLOAT .)
    DIVIDE          reduce using rule 56 (number -> FLOAT .)
    TIMES           reduce using rule 56 (number -> FLOAT .)
    MINUS           reduce using rule 56 (number -> FLOAT .)
    PLUS            reduce using rule 56 (number -> FLOAT .)
    SEMICOLON       reduce using rule 56 (number -> FLOAT .)
    $end            reduce using rule 56 (number -> FLOAT .)
    END             reduce using rule 56 (number -> FLOAT .)
    FUN             reduce using rule 56 (number -> FLOAT .)
    ELSE            reduce using rule 56 (number -> FLOAT .)
    NEQ             reduce using rule 56 (number -> FLOAT .)
    EQ              reduce using rule 56 (number -> FLOAT .)
    GT              reduce using rule 56 (number -> FLOAT .)
    GTE             reduce using rule 56 (number -> FLOAT .)
    LT              reduce using rule 56 (number -> FLOAT .)
    LTE             reduce using rule 56 (number -> FLOAT .)
    COMMA           reduce using rule 56 (number -> FLOAT .)
    RPAREN          reduce using rule 56 (number -> FLOAT .)
    RBRACKET        reduce using rule 56 (number -> FLOAT .)
    THEN            reduce using rule 56 (number -> FLOAT .)
    OR              reduce using rule 56 (number -> FLOAT .)
    AND             reduce using rule 56 (number -> FLOAT .)
    DO              reduce using rule 56 (number -> FLOAT .)


state 84

    (55) number -> MINUS INT .
    (57) number -> INT .
  ! reduce/reduce conflict for DIVIDE resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for TIMES resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for MINUS resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for PLUS resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for $end resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for END resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for FUN resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for NEQ resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for EQ resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for GT resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for GTE resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for LT resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for LTE resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for COMMA resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for THEN resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for OR resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for AND resolved using rule 57 (number -> INT .)
  ! reduce/reduce conflict for DO resolved using rule 57 (number -> INT .)
    DIVIDE          reduce using rule 57 (number -> INT .)
    TIMES           reduce using rule 57 (number -> INT .)
    MINUS           reduce using rule 57 (number -> INT .)
    PLUS            reduce using rule 57 (number -> INT .)
    SEMICOLON       reduce using rule 57 (number -> INT .)
    $end            reduce using rule 57 (number -> INT .)
    END             reduce using rule 57 (number -> INT .)
    FUN             reduce using rule 57 (number -> INT .)
    ELSE            reduce using rule 57 (number -> INT .)
    NEQ             reduce using rule 57 (number -> INT .)
    EQ              reduce using rule 57 (number -> INT .)
    GT              reduce using rule 57 (number -> INT .)
    GTE             reduce using rule 57 (number -> INT .)
    LT              reduce using rule 57 (number -> INT .)
    LTE             reduce using rule 57 (number -> INT .)
    COMMA           reduce using rule 57 (number -> INT .)
    RPAREN          reduce using rule 57 (number -> INT .)
    RBRACKET        reduce using rule 57 (number -> INT .)
    THEN            reduce using rule 57 (number -> INT .)
    OR              reduce using rule 57 (number -> INT .)
    AND             reduce using rule 57 (number -> INT .)
    DO              reduce using rule 57 (number -> INT .)


state 85

    (14) statement -> READ LPAREN location . RPAREN
    RPAREN          shift and go to state 115


state 86

    (58) location -> ID . LBRACKET ID RBRACKET
    (59) location -> ID . LBRACKET INT RBRACKET
    (60) location -> ID .
    LBRACKET        shift and go to state 116
    RPAREN          reduce using rule 60 (location -> ID .)


state 87

    (15) statement -> WRITE LPAREN expr . RPAREN
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RPAREN          shift and go to state 117
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 88

    (16) statement -> PRINT LPAREN STRING . RPAREN
    RPAREN          shift and go to state 118


state 89

    (18) statement -> IF relation THEN . statement ELSE statement
    (19) statement -> IF relation THEN . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statement                      shift and go to state 119

state 90

    (23) relation -> relation OR . relation
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . relation OR relation
    (24) relation -> . relation AND relation
    (25) relation -> . expr NEQ expr
    (26) relation -> . expr EQ expr
    (27) relation -> . expr GT expr
    (28) relation -> . expr GTE expr
    (29) relation -> . expr LT expr
    (30) relation -> . expr LTE expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    LPAREN          shift and go to state 60
    NOT             shift and go to state 61
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 120
    expr                           shift and go to state 62
    number                         shift and go to state 50

state 91

    (24) relation -> relation AND . relation
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . relation OR relation
    (24) relation -> . relation AND relation
    (25) relation -> . expr NEQ expr
    (26) relation -> . expr EQ expr
    (27) relation -> . expr GT expr
    (28) relation -> . expr GTE expr
    (29) relation -> . expr LT expr
    (30) relation -> . expr LTE expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    LPAREN          shift and go to state 60
    NOT             shift and go to state 61
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 121
    expr                           shift and go to state 62
    number                         shift and go to state 50

state 92

    (21) relation -> LPAREN relation . RPAREN
    (23) relation -> relation . OR relation
    (24) relation -> relation . AND relation
    RPAREN          shift and go to state 122
    OR              shift and go to state 90
    AND             shift and go to state 91


state 93

    (39) expr -> LPAREN expr . RPAREN
    (25) relation -> expr . NEQ expr
    (26) relation -> expr . EQ expr
    (27) relation -> expr . GT expr
    (28) relation -> expr . GTE expr
    (29) relation -> expr . LT expr
    (30) relation -> expr . LTE expr
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RPAREN          shift and go to state 111
    NEQ             shift and go to state 95
    EQ              shift and go to state 96
    GT              shift and go to state 97
    GTE             shift and go to state 98
    LT              shift and go to state 99
    LTE             shift and go to state 100
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 94

    (22) relation -> NOT relation .
    (23) relation -> relation . OR relation
    (24) relation -> relation . AND relation
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 22 (relation -> NOT relation .)
    DO              reduce using rule 22 (relation -> NOT relation .)
    RPAREN          reduce using rule 22 (relation -> NOT relation .)
    OR              shift and go to state 90
    AND             shift and go to state 91


state 95

    (25) relation -> expr NEQ . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 123
    number                         shift and go to state 50

state 96

    (26) relation -> expr EQ . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 124
    number                         shift and go to state 50

state 97

    (27) relation -> expr GT . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 125
    number                         shift and go to state 50

state 98

    (28) relation -> expr GTE . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 126
    number                         shift and go to state 50

state 99

    (29) relation -> expr LT . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 127
    number                         shift and go to state 50

state 100

    (30) relation -> expr LTE . expr
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 128
    number                         shift and go to state 50

state 101

    (20) statement -> WHILE relation DO . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statement                      shift and go to state 129

state 102

    (50) var -> ID COLON TFLOAT LBRACKET INT RBRACKET . SEMICOLON
    SEMICOLON       shift and go to state 130


state 103

    (51) var -> ID COLON TINT LBRACKET INT RBRACKET . SEMICOLON
    SEMICOLON       shift and go to state 131


state 104

    (12) statement -> ID LPAREN exprList RPAREN .
    SEMICOLON       reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    $end            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    FUN             reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)


state 105

    (32) exprList -> expr COMMA . exprList
    (31) exprList -> . expr
    (32) exprList -> . expr COMMA exprList
    (33) expr -> . TFLOAT LPAREN expr RPAREN
    (34) expr -> . TINT LPAREN expr RPAREN
    (35) expr -> . number
    (36) expr -> . ID LBRACKET expr RBRACKET
    (37) expr -> . ID
    (38) expr -> . ID LPAREN exprList RPAREN
    (39) expr -> . LPAREN expr RPAREN
    (40) expr -> . PLUS expr
    (41) expr -> . MINUS expr
    (42) expr -> . expr DIVIDE expr
    (43) expr -> . expr TIMES expr
    (44) expr -> . expr MINUS expr
    (45) expr -> . expr PLUS expr
    (54) number -> . MINUS FLOAT
    (55) number -> . MINUS INT
    (56) number -> . FLOAT
    (57) number -> . INT
    TFLOAT          shift and go to state 47
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 48
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 68
    exprList                       shift and go to state 132
    number                         shift and go to state 50

state 106

    (42) expr -> expr DIVIDE expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 42 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 42 (expr -> expr DIVIDE expr .)
    END             reduce using rule 42 (expr -> expr DIVIDE expr .)
    FUN             reduce using rule 42 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 42 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 42 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 42 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 42 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 42 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 42 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 42 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 42 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 42 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 42 (expr -> expr DIVIDE expr .)
    THEN            reduce using rule 42 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 42 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 42 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 42 (expr -> expr DIVIDE expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 107

    (43) expr -> expr TIMES expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 43 (expr -> expr TIMES expr .)
    $end            reduce using rule 43 (expr -> expr TIMES expr .)
    END             reduce using rule 43 (expr -> expr TIMES expr .)
    FUN             reduce using rule 43 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 43 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 43 (expr -> expr TIMES expr .)
    EQ              reduce using rule 43 (expr -> expr TIMES expr .)
    GT              reduce using rule 43 (expr -> expr TIMES expr .)
    GTE             reduce using rule 43 (expr -> expr TIMES expr .)
    LT              reduce using rule 43 (expr -> expr TIMES expr .)
    LTE             reduce using rule 43 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 43 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 43 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 43 (expr -> expr TIMES expr .)
    THEN            reduce using rule 43 (expr -> expr TIMES expr .)
    OR              reduce using rule 43 (expr -> expr TIMES expr .)
    AND             reduce using rule 43 (expr -> expr TIMES expr .)
    DO              reduce using rule 43 (expr -> expr TIMES expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 108

    (44) expr -> expr MINUS expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 44 (expr -> expr MINUS expr .)
    $end            reduce using rule 44 (expr -> expr MINUS expr .)
    END             reduce using rule 44 (expr -> expr MINUS expr .)
    FUN             reduce using rule 44 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 44 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 44 (expr -> expr MINUS expr .)
    EQ              reduce using rule 44 (expr -> expr MINUS expr .)
    GT              reduce using rule 44 (expr -> expr MINUS expr .)
    GTE             reduce using rule 44 (expr -> expr MINUS expr .)
    LT              reduce using rule 44 (expr -> expr MINUS expr .)
    LTE             reduce using rule 44 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 44 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 44 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 44 (expr -> expr MINUS expr .)
    THEN            reduce using rule 44 (expr -> expr MINUS expr .)
    OR              reduce using rule 44 (expr -> expr MINUS expr .)
    AND             reduce using rule 44 (expr -> expr MINUS expr .)
    DO              reduce using rule 44 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 109

    (45) expr -> expr PLUS expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMICOLON       reduce using rule 45 (expr -> expr PLUS expr .)
    $end            reduce using rule 45 (expr -> expr PLUS expr .)
    END             reduce using rule 45 (expr -> expr PLUS expr .)
    FUN             reduce using rule 45 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 45 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 45 (expr -> expr PLUS expr .)
    EQ              reduce using rule 45 (expr -> expr PLUS expr .)
    GT              reduce using rule 45 (expr -> expr PLUS expr .)
    GTE             reduce using rule 45 (expr -> expr PLUS expr .)
    LT              reduce using rule 45 (expr -> expr PLUS expr .)
    LTE             reduce using rule 45 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 45 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 45 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 45 (expr -> expr PLUS expr .)
    THEN            reduce using rule 45 (expr -> expr PLUS expr .)
    OR              reduce using rule 45 (expr -> expr PLUS expr .)
    AND             reduce using rule 45 (expr -> expr PLUS expr .)
    DO              reduce using rule 45 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 110

    (33) expr -> TFLOAT LPAREN expr . RPAREN
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RPAREN          shift and go to state 133
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 111

    (39) expr -> LPAREN expr RPAREN .
    DIVIDE          reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    FUN             reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 39 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 39 (expr -> LPAREN expr RPAREN .)


state 112

    (34) expr -> TINT LPAREN expr . RPAREN
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RPAREN          shift and go to state 134
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 113

    (36) expr -> ID LBRACKET expr . RBRACKET
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 135
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 114

    (38) expr -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 136


state 115

    (14) statement -> READ LPAREN location RPAREN .
    SEMICOLON       reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    $end            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    END             reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    FUN             reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    ELSE            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)


state 116

    (58) location -> ID LBRACKET . ID RBRACKET
    (59) location -> ID LBRACKET . INT RBRACKET
    ID              shift and go to state 137
    INT             shift and go to state 138


state 117

    (15) statement -> WRITE LPAREN expr RPAREN .
    SEMICOLON       reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    $end            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    END             reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    FUN             reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    ELSE            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)


state 118

    (16) statement -> PRINT LPAREN STRING RPAREN .
    SEMICOLON       reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    END             reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    FUN             reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)


state 119

    (18) statement -> IF relation THEN statement . ELSE statement
    (19) statement -> IF relation THEN statement .
  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 139
    SEMICOLON       reduce using rule 19 (statement -> IF relation THEN statement .)
    $end            reduce using rule 19 (statement -> IF relation THEN statement .)
    END             reduce using rule 19 (statement -> IF relation THEN statement .)
    FUN             reduce using rule 19 (statement -> IF relation THEN statement .)


state 120

    (23) relation -> relation OR relation .
    (23) relation -> relation . OR relation
    (24) relation -> relation . AND relation
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 23 (relation -> relation OR relation .)
    DO              reduce using rule 23 (relation -> relation OR relation .)
    RPAREN          reduce using rule 23 (relation -> relation OR relation .)
    OR              shift and go to state 90
    AND             shift and go to state 91


state 121

    (24) relation -> relation AND relation .
    (23) relation -> relation . OR relation
    (24) relation -> relation . AND relation
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 24 (relation -> relation AND relation .)
    DO              reduce using rule 24 (relation -> relation AND relation .)
    RPAREN          reduce using rule 24 (relation -> relation AND relation .)
    OR              shift and go to state 90
    AND             shift and go to state 91


state 122

    (21) relation -> LPAREN relation RPAREN .
    THEN            reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    OR              reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    AND             reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    DO              reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 21 (relation -> LPAREN relation RPAREN .)


state 123

    (25) relation -> expr NEQ expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    THEN            reduce using rule 25 (relation -> expr NEQ expr .)
    OR              reduce using rule 25 (relation -> expr NEQ expr .)
    AND             reduce using rule 25 (relation -> expr NEQ expr .)
    DO              reduce using rule 25 (relation -> expr NEQ expr .)
    RPAREN          reduce using rule 25 (relation -> expr NEQ expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 124

    (26) relation -> expr EQ expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    THEN            reduce using rule 26 (relation -> expr EQ expr .)
    OR              reduce using rule 26 (relation -> expr EQ expr .)
    AND             reduce using rule 26 (relation -> expr EQ expr .)
    DO              reduce using rule 26 (relation -> expr EQ expr .)
    RPAREN          reduce using rule 26 (relation -> expr EQ expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 125

    (27) relation -> expr GT expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    THEN            reduce using rule 27 (relation -> expr GT expr .)
    OR              reduce using rule 27 (relation -> expr GT expr .)
    AND             reduce using rule 27 (relation -> expr GT expr .)
    DO              reduce using rule 27 (relation -> expr GT expr .)
    RPAREN          reduce using rule 27 (relation -> expr GT expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 126

    (28) relation -> expr GTE expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    THEN            reduce using rule 28 (relation -> expr GTE expr .)
    OR              reduce using rule 28 (relation -> expr GTE expr .)
    AND             reduce using rule 28 (relation -> expr GTE expr .)
    DO              reduce using rule 28 (relation -> expr GTE expr .)
    RPAREN          reduce using rule 28 (relation -> expr GTE expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 127

    (29) relation -> expr LT expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    THEN            reduce using rule 29 (relation -> expr LT expr .)
    OR              reduce using rule 29 (relation -> expr LT expr .)
    AND             reduce using rule 29 (relation -> expr LT expr .)
    DO              reduce using rule 29 (relation -> expr LT expr .)
    RPAREN          reduce using rule 29 (relation -> expr LT expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 128

    (30) relation -> expr LTE expr .
    (42) expr -> expr . DIVIDE expr
    (43) expr -> expr . TIMES expr
    (44) expr -> expr . MINUS expr
    (45) expr -> expr . PLUS expr
    THEN            reduce using rule 30 (relation -> expr LTE expr .)
    OR              reduce using rule 30 (relation -> expr LTE expr .)
    AND             reduce using rule 30 (relation -> expr LTE expr .)
    DO              reduce using rule 30 (relation -> expr LTE expr .)
    RPAREN          reduce using rule 30 (relation -> expr LTE expr .)
    DIVIDE          shift and go to state 72
    TIMES           shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 129

    (20) statement -> WHILE relation DO statement .
    SEMICOLON       reduce using rule 20 (statement -> WHILE relation DO statement .)
    $end            reduce using rule 20 (statement -> WHILE relation DO statement .)
    END             reduce using rule 20 (statement -> WHILE relation DO statement .)
    FUN             reduce using rule 20 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 20 (statement -> WHILE relation DO statement .)


state 130

    (50) var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .
    COMMA           reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    RPAREN          reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    ID              reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    BEGIN           reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    BREAK           reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    SKIP            reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    RETURN          reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    READ            reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    WRITE           reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    PRINT           reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    IF              reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)
    WHILE           reduce using rule 50 (var -> ID COLON TFLOAT LBRACKET INT RBRACKET SEMICOLON .)


state 131

    (51) var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .
    COMMA           reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    RPAREN          reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    ID              reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    BEGIN           reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    BREAK           reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    SKIP            reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    RETURN          reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    READ            reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    WRITE           reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    PRINT           reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    IF              reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)
    WHILE           reduce using rule 51 (var -> ID COLON TINT LBRACKET INT RBRACKET SEMICOLON .)


state 132

    (32) exprList -> expr COMMA exprList .
    RPAREN          reduce using rule 32 (exprList -> expr COMMA exprList .)


state 133

    (33) expr -> TFLOAT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    TIMES           reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    MINUS           reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    PLUS            reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    $end            reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    END             reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    FUN             reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    ELSE            reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    NEQ             reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    EQ              reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    GT              reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    GTE             reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    LT              reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    LTE             reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    COMMA           reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    THEN            reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    OR              reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    AND             reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)
    DO              reduce using rule 33 (expr -> TFLOAT LPAREN expr RPAREN .)


state 134

    (34) expr -> TINT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    TIMES           reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    MINUS           reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    PLUS            reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    $end            reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    END             reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    FUN             reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    ELSE            reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    NEQ             reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    EQ              reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    GT              reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    GTE             reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    LT              reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    LTE             reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    THEN            reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    OR              reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    AND             reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)
    DO              reduce using rule 34 (expr -> TINT LPAREN expr RPAREN .)


state 135

    (36) expr -> ID LBRACKET expr RBRACKET .
    DIVIDE          reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    $end            reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    END             reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    FUN             reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    ELSE            reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    NEQ             reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    EQ              reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    GT              reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    GTE             reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    LT              reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    LTE             reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    THEN            reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    OR              reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    AND             reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)
    DO              reduce using rule 36 (expr -> ID LBRACKET expr RBRACKET .)


state 136

    (38) expr -> ID LPAREN exprList RPAREN .
    DIVIDE          reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    TIMES           reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    MINUS           reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    PLUS            reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    SEMICOLON       reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    $end            reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    FUN             reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    NEQ             reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    EQ              reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    GT              reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    GTE             reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    LT              reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    LTE             reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    COMMA           reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    RPAREN          reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    RBRACKET        reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    THEN            reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    OR              reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    AND             reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)
    DO              reduce using rule 38 (expr -> ID LPAREN exprList RPAREN .)


state 137

    (58) location -> ID LBRACKET ID . RBRACKET
    RBRACKET        shift and go to state 140


state 138

    (59) location -> ID LBRACKET INT . RBRACKET
    RBRACKET        shift and go to state 141


state 139

    (18) statement -> IF relation THEN statement ELSE . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . IF relation THEN statement
    (20) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 26
    BREAK           shift and go to state 27
    SKIP            shift and go to state 28
    ID              shift and go to state 23
    RETURN          shift and go to state 29
    READ            shift and go to state 30
    WRITE           shift and go to state 31
    PRINT           shift and go to state 32
    IF              shift and go to state 33
    WHILE           shift and go to state 34

    statement                      shift and go to state 142

state 140

    (58) location -> ID LBRACKET ID RBRACKET .
    RPAREN          reduce using rule 58 (location -> ID LBRACKET ID RBRACKET .)


state 141

    (59) location -> ID LBRACKET INT RBRACKET .
    RPAREN          reduce using rule 59 (location -> ID LBRACKET INT RBRACKET .)


state 142

    (18) statement -> IF relation THEN statement ELSE statement .
    SEMICOLON       reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    $end            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    END             reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    FUN             reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    ELSE            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)


Conflicts:

shift/reduce conflict for ID in state 18 resolved as shift
shift/reduce conflict for DIVIDE in state 81 resolved as shift
shift/reduce conflict for TIMES in state 81 resolved as shift
shift/reduce conflict for MINUS in state 81 resolved as shift
shift/reduce conflict for PLUS in state 81 resolved as shift
shift/reduce conflict for DIVIDE in state 82 resolved as shift
shift/reduce conflict for TIMES in state 82 resolved as shift
shift/reduce conflict for MINUS in state 82 resolved as shift
shift/reduce conflict for PLUS in state 82 resolved as shift
shift/reduce conflict for OR in state 94 resolved as shift
shift/reduce conflict for AND in state 94 resolved as shift
shift/reduce conflict for DIVIDE in state 106 resolved as shift
shift/reduce conflict for TIMES in state 106 resolved as shift
shift/reduce conflict for MINUS in state 106 resolved as shift
shift/reduce conflict for PLUS in state 106 resolved as shift
shift/reduce conflict for DIVIDE in state 107 resolved as shift
shift/reduce conflict for TIMES in state 107 resolved as shift
shift/reduce conflict for MINUS in state 107 resolved as shift
shift/reduce conflict for PLUS in state 107 resolved as shift
shift/reduce conflict for DIVIDE in state 108 resolved as shift
shift/reduce conflict for TIMES in state 108 resolved as shift
shift/reduce conflict for MINUS in state 108 resolved as shift
shift/reduce conflict for PLUS in state 108 resolved as shift
shift/reduce conflict for DIVIDE in state 109 resolved as shift
shift/reduce conflict for TIMES in state 109 resolved as shift
shift/reduce conflict for MINUS in state 109 resolved as shift
shift/reduce conflict for PLUS in state 109 resolved as shift
shift/reduce conflict for ELSE in state 119 resolved as shift
shift/reduce conflict for OR in state 120 resolved as shift
shift/reduce conflict for AND in state 120 resolved as shift
shift/reduce conflict for OR in state 121 resolved as shift
shift/reduce conflict for AND in state 121 resolved as shift
reduce/reduce conflict in state 83 resolved using rule number -> FLOAT
rejected rule (number -> MINUS FLOAT) in state 83
reduce/reduce conflict in state 84 resolved using rule number -> INT
rejected rule (number -> MINUS INT) in state 84
Rule (number -> MINUS FLOAT) is never reduced
Rule (number -> MINUS INT) is never reduced