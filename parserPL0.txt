Grammar:

Rule 0     S' -> funcList
Rule 1     funcList -> func
Rule 2     funcList -> func funcList
Rule 3     func -> FUN ID LPAREN RPAREN varList statementList
Rule 4     func -> FUN ID LPAREN argList RPAREN varList statementList
Rule 5     statementList -> statements
Rule 6     statementList -> statements SEMICOLON statementList
Rule 7     statements -> noStatement
Rule 8     statements -> statement
Rule 9     statement -> BEGIN statementList END
Rule 10    statement -> BREAK
Rule 11    statement -> SKIP
Rule 12    statement -> ID LPAREN exprList RPAREN
Rule 13    statement -> RETURN expr
Rule 14    statement -> READ LPAREN location RPAREN
Rule 15    statement -> WRITE LPAREN expr RPAREN
Rule 16    statement -> PRINT LPAREN STRING RPAREN
Rule 17    statement -> ID ASSIGN expr
Rule 18    statement -> IF relation THEN statement ELSE statement
Rule 19    statement -> WHILE relation DO statement
Rule 20    noStatement -> IF relation THEN statement
Rule 21    relation -> LPAREN relation RPAREN
Rule 22    relation -> NOT relation
Rule 23    relation -> expr relExpr expr
Rule 24    relExpr -> OR
Rule 25    relExpr -> AND
Rule 26    relExpr -> NEQ
Rule 27    relExpr -> EQ
Rule 28    relExpr -> GT
Rule 29    relExpr -> GTE
Rule 30    relExpr -> LT
Rule 31    relExpr -> LTE
Rule 32    exprList -> expr
Rule 33    exprList -> expr COMMA exprList
Rule 34    expr -> TFLOAT LPAREN expr RPAREN
Rule 35    expr -> TINT LPAREN expr RPAREN
Rule 36    expr -> number
Rule 37    expr -> ID LBRACKET expr RBRACKET
Rule 38    expr -> ID
Rule 39    expr -> ID LPAREN exprList RPAREN
Rule 40    expr -> LPAREN expr RPAREN
Rule 41    expr -> PLUS expr  [precedence=left, level=1]
Rule 42    expr -> MINUS expr  [precedence=left, level=1]
Rule 43    expr -> expr DIVIDE expr  [precedence=left, level=2]
Rule 44    expr -> expr TIMES expr  [precedence=left, level=2]
Rule 45    expr -> expr MINUS expr  [precedence=left, level=1]
Rule 46    expr -> expr PLUS expr  [precedence=left, level=1]
Rule 47    argList -> varDecl
Rule 48    argList -> varDecl COMMA argList
Rule 49    varList -> func
Rule 50    varList -> varDecl
Rule 51    varList -> func SEMICOLON varList
Rule 52    varList -> varDecl SEMICOLON varList
Rule 53    varDecl -> ID COLON vectorType
Rule 54    varDecl -> ID COLON varType
Rule 55    varType -> TFLOAT
Rule 56    varType -> TINT
Rule 57    vectorType -> TFLOAT LBRACKET expr RBRACKET
Rule 58    vectorType -> TINT LBRACKET expr RBRACKET
Rule 59    number -> FLOAT
Rule 60    number -> INT
Rule 61    location -> ID LBRACKET ID RBRACKET
Rule 62    location -> ID LBRACKET INT RBRACKET
Rule 63    location -> ID

Terminals, with rules where they appear:

AND                  : 25
ASSIGN               : 17
BEGIN                : 9
BREAK                : 10
COLON                : 53 54
COMMA                : 33 48
DIVIDE               : 43
DO                   : 19
ELSE                 : 18
END                  : 9
EQ                   : 27
FLOAT                : 59
FUN                  : 3 4
GT                   : 28
GTE                  : 29
ID                   : 3 4 12 17 37 38 39 53 54 61 61 62 63
IF                   : 18 20
INT                  : 60 62
LBRACKET             : 37 57 58 61 62
LPAREN               : 3 4 12 14 15 16 21 34 35 39 40
LT                   : 30
LTE                  : 31
MINUS                : 42 45
NEQ                  : 26
NOT                  : 22
OR                   : 24
PLUS                 : 41 46
PRINT                : 16
RBRACKET             : 37 57 58 61 62
READ                 : 14
RETURN               : 13
RPAREN               : 3 4 12 14 15 16 21 34 35 39 40
SEMICOLON            : 6 51 52
SKIP                 : 11
STRING               : 16
TFLOAT               : 34 55 57
THEN                 : 18 20
TIMES                : 44
TINT                 : 35 56 58
WHILE                : 19
WRITE                : 15
error                : 

Nonterminals, with rules where they appear:

argList              : 4 48
expr                 : 13 15 17 23 23 32 33 34 35 37 40 41 42 43 43 44 44 45 45 46 46 57 58
exprList             : 12 33 39
func                 : 1 2 49 51
funcList             : 2 0
location             : 14
noStatement          : 7
number               : 36
relExpr              : 23
relation             : 18 19 20 21 22
statement            : 8 18 18 19 20
statementList        : 3 4 6 9
statements           : 5 6
varDecl              : 47 48 50 52
varList              : 3 4 51 52
varType              : 54
vectorType           : 53


state 0

    (0) S' -> . funcList
    (1) funcList -> . func
    (2) funcList -> . func funcList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    FUN             shift and go to state 3

    funcList                       shift and go to state 1
    func                           shift and go to state 2

state 1

    (0) S' -> funcList .


state 2

    (1) funcList -> func .
    (2) funcList -> func . funcList
    (1) funcList -> . func
    (2) funcList -> . func funcList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    $end            reduce using rule 1 (funcList -> func .)
    FUN             shift and go to state 3

    func                           shift and go to state 2
    funcList                       shift and go to state 4

state 3

    (3) func -> FUN . ID LPAREN RPAREN varList statementList
    (4) func -> FUN . ID LPAREN argList RPAREN varList statementList
    ID              shift and go to state 5


state 4

    (2) funcList -> func funcList .
    $end            reduce using rule 2 (funcList -> func funcList .)


state 5

    (3) func -> FUN ID . LPAREN RPAREN varList statementList
    (4) func -> FUN ID . LPAREN argList RPAREN varList statementList
    LPAREN          shift and go to state 6


state 6

    (3) func -> FUN ID LPAREN . RPAREN varList statementList
    (4) func -> FUN ID LPAREN . argList RPAREN varList statementList
    (47) argList -> . varDecl
    (48) argList -> . varDecl COMMA argList
    (53) varDecl -> . ID COLON vectorType
    (54) varDecl -> . ID COLON varType
    RPAREN          shift and go to state 8
    ID              shift and go to state 7

    argList                        shift and go to state 9
    varDecl                        shift and go to state 10

state 7

    (53) varDecl -> ID . COLON vectorType
    (54) varDecl -> ID . COLON varType
    COLON           shift and go to state 11


state 8

    (3) func -> FUN ID LPAREN RPAREN . varList statementList
    (49) varList -> . func
    (50) varList -> . varDecl
    (51) varList -> . func SEMICOLON varList
    (52) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType
    (54) varDecl -> . ID COLON varType
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varList                        shift and go to state 12
    func                           shift and go to state 13
    varDecl                        shift and go to state 14

state 9

    (4) func -> FUN ID LPAREN argList . RPAREN varList statementList
    RPAREN          shift and go to state 15


state 10

    (47) argList -> varDecl .
    (48) argList -> varDecl . COMMA argList
    RPAREN          reduce using rule 47 (argList -> varDecl .)
    COMMA           shift and go to state 16


state 11

    (53) varDecl -> ID COLON . vectorType
    (54) varDecl -> ID COLON . varType
    (57) vectorType -> . TFLOAT LBRACKET expr RBRACKET
    (58) vectorType -> . TINT LBRACKET expr RBRACKET
    (55) varType -> . TFLOAT
    (56) varType -> . TINT
    TFLOAT          shift and go to state 19
    TINT            shift and go to state 20

    vectorType                     shift and go to state 17
    varType                        shift and go to state 18

state 12

    (3) func -> FUN ID LPAREN RPAREN varList . statementList
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 22
    statements                     shift and go to state 23
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 13

    (49) varList -> func .
    (51) varList -> func . SEMICOLON varList
    IF              reduce using rule 49 (varList -> func .)
    BEGIN           reduce using rule 49 (varList -> func .)
    BREAK           reduce using rule 49 (varList -> func .)
    SKIP            reduce using rule 49 (varList -> func .)
    ID              reduce using rule 49 (varList -> func .)
    RETURN          reduce using rule 49 (varList -> func .)
    READ            reduce using rule 49 (varList -> func .)
    WRITE           reduce using rule 49 (varList -> func .)
    PRINT           reduce using rule 49 (varList -> func .)
    WHILE           reduce using rule 49 (varList -> func .)
    SEMICOLON       shift and go to state 35


state 14

    (50) varList -> varDecl .
    (52) varList -> varDecl . SEMICOLON varList
    IF              reduce using rule 50 (varList -> varDecl .)
    BEGIN           reduce using rule 50 (varList -> varDecl .)
    BREAK           reduce using rule 50 (varList -> varDecl .)
    SKIP            reduce using rule 50 (varList -> varDecl .)
    ID              reduce using rule 50 (varList -> varDecl .)
    RETURN          reduce using rule 50 (varList -> varDecl .)
    READ            reduce using rule 50 (varList -> varDecl .)
    WRITE           reduce using rule 50 (varList -> varDecl .)
    PRINT           reduce using rule 50 (varList -> varDecl .)
    WHILE           reduce using rule 50 (varList -> varDecl .)
    SEMICOLON       shift and go to state 36


state 15

    (4) func -> FUN ID LPAREN argList RPAREN . varList statementList
    (49) varList -> . func
    (50) varList -> . varDecl
    (51) varList -> . func SEMICOLON varList
    (52) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType
    (54) varDecl -> . ID COLON varType
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varList                        shift and go to state 37
    func                           shift and go to state 13
    varDecl                        shift and go to state 14

state 16

    (48) argList -> varDecl COMMA . argList
    (47) argList -> . varDecl
    (48) argList -> . varDecl COMMA argList
    (53) varDecl -> . ID COLON vectorType
    (54) varDecl -> . ID COLON varType
    ID              shift and go to state 7

    varDecl                        shift and go to state 10
    argList                        shift and go to state 38

state 17

    (53) varDecl -> ID COLON vectorType .
    COMMA           reduce using rule 53 (varDecl -> ID COLON vectorType .)
    RPAREN          reduce using rule 53 (varDecl -> ID COLON vectorType .)
    SEMICOLON       reduce using rule 53 (varDecl -> ID COLON vectorType .)
    IF              reduce using rule 53 (varDecl -> ID COLON vectorType .)
    BEGIN           reduce using rule 53 (varDecl -> ID COLON vectorType .)
    BREAK           reduce using rule 53 (varDecl -> ID COLON vectorType .)
    SKIP            reduce using rule 53 (varDecl -> ID COLON vectorType .)
    ID              reduce using rule 53 (varDecl -> ID COLON vectorType .)
    RETURN          reduce using rule 53 (varDecl -> ID COLON vectorType .)
    READ            reduce using rule 53 (varDecl -> ID COLON vectorType .)
    WRITE           reduce using rule 53 (varDecl -> ID COLON vectorType .)
    PRINT           reduce using rule 53 (varDecl -> ID COLON vectorType .)
    WHILE           reduce using rule 53 (varDecl -> ID COLON vectorType .)


state 18

    (54) varDecl -> ID COLON varType .
    COMMA           reduce using rule 54 (varDecl -> ID COLON varType .)
    RPAREN          reduce using rule 54 (varDecl -> ID COLON varType .)
    SEMICOLON       reduce using rule 54 (varDecl -> ID COLON varType .)
    IF              reduce using rule 54 (varDecl -> ID COLON varType .)
    BEGIN           reduce using rule 54 (varDecl -> ID COLON varType .)
    BREAK           reduce using rule 54 (varDecl -> ID COLON varType .)
    SKIP            reduce using rule 54 (varDecl -> ID COLON varType .)
    ID              reduce using rule 54 (varDecl -> ID COLON varType .)
    RETURN          reduce using rule 54 (varDecl -> ID COLON varType .)
    READ            reduce using rule 54 (varDecl -> ID COLON varType .)
    WRITE           reduce using rule 54 (varDecl -> ID COLON varType .)
    PRINT           reduce using rule 54 (varDecl -> ID COLON varType .)
    WHILE           reduce using rule 54 (varDecl -> ID COLON varType .)


state 19

    (57) vectorType -> TFLOAT . LBRACKET expr RBRACKET
    (55) varType -> TFLOAT .
    LBRACKET        shift and go to state 39
    COMMA           reduce using rule 55 (varType -> TFLOAT .)
    RPAREN          reduce using rule 55 (varType -> TFLOAT .)
    SEMICOLON       reduce using rule 55 (varType -> TFLOAT .)
    IF              reduce using rule 55 (varType -> TFLOAT .)
    BEGIN           reduce using rule 55 (varType -> TFLOAT .)
    BREAK           reduce using rule 55 (varType -> TFLOAT .)
    SKIP            reduce using rule 55 (varType -> TFLOAT .)
    ID              reduce using rule 55 (varType -> TFLOAT .)
    RETURN          reduce using rule 55 (varType -> TFLOAT .)
    READ            reduce using rule 55 (varType -> TFLOAT .)
    WRITE           reduce using rule 55 (varType -> TFLOAT .)
    PRINT           reduce using rule 55 (varType -> TFLOAT .)
    WHILE           reduce using rule 55 (varType -> TFLOAT .)


state 20

    (58) vectorType -> TINT . LBRACKET expr RBRACKET
    (56) varType -> TINT .
    LBRACKET        shift and go to state 40
    COMMA           reduce using rule 56 (varType -> TINT .)
    RPAREN          reduce using rule 56 (varType -> TINT .)
    SEMICOLON       reduce using rule 56 (varType -> TINT .)
    IF              reduce using rule 56 (varType -> TINT .)
    BEGIN           reduce using rule 56 (varType -> TINT .)
    BREAK           reduce using rule 56 (varType -> TINT .)
    SKIP            reduce using rule 56 (varType -> TINT .)
    ID              reduce using rule 56 (varType -> TINT .)
    RETURN          reduce using rule 56 (varType -> TINT .)
    READ            reduce using rule 56 (varType -> TINT .)
    WRITE           reduce using rule 56 (varType -> TINT .)
    PRINT           reduce using rule 56 (varType -> TINT .)
    WHILE           reduce using rule 56 (varType -> TINT .)


state 21

    (12) statement -> ID . LPAREN exprList RPAREN
    (17) statement -> ID . ASSIGN expr
    LPAREN          shift and go to state 41
    ASSIGN          shift and go to state 42


state 22

    (3) func -> FUN ID LPAREN RPAREN varList statementList .
    FUN             reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    $end            reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    SEMICOLON       reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    IF              reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    BEGIN           reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    BREAK           reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    SKIP            reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    ID              reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    RETURN          reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    READ            reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    WRITE           reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    PRINT           reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    WHILE           reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)


state 23

    (5) statementList -> statements .
    (6) statementList -> statements . SEMICOLON statementList
  ! shift/reduce conflict for SEMICOLON resolved as shift
    FUN             reduce using rule 5 (statementList -> statements .)
    $end            reduce using rule 5 (statementList -> statements .)
    IF              reduce using rule 5 (statementList -> statements .)
    BEGIN           reduce using rule 5 (statementList -> statements .)
    BREAK           reduce using rule 5 (statementList -> statements .)
    SKIP            reduce using rule 5 (statementList -> statements .)
    ID              reduce using rule 5 (statementList -> statements .)
    RETURN          reduce using rule 5 (statementList -> statements .)
    READ            reduce using rule 5 (statementList -> statements .)
    WRITE           reduce using rule 5 (statementList -> statements .)
    PRINT           reduce using rule 5 (statementList -> statements .)
    WHILE           reduce using rule 5 (statementList -> statements .)
    END             reduce using rule 5 (statementList -> statements .)
    SEMICOLON       shift and go to state 43


state 24

    (7) statements -> noStatement .
    SEMICOLON       reduce using rule 7 (statements -> noStatement .)
    FUN             reduce using rule 7 (statements -> noStatement .)
    $end            reduce using rule 7 (statements -> noStatement .)
    IF              reduce using rule 7 (statements -> noStatement .)
    BEGIN           reduce using rule 7 (statements -> noStatement .)
    BREAK           reduce using rule 7 (statements -> noStatement .)
    SKIP            reduce using rule 7 (statements -> noStatement .)
    ID              reduce using rule 7 (statements -> noStatement .)
    RETURN          reduce using rule 7 (statements -> noStatement .)
    READ            reduce using rule 7 (statements -> noStatement .)
    WRITE           reduce using rule 7 (statements -> noStatement .)
    PRINT           reduce using rule 7 (statements -> noStatement .)
    WHILE           reduce using rule 7 (statements -> noStatement .)
    END             reduce using rule 7 (statements -> noStatement .)


state 25

    (8) statements -> statement .
    SEMICOLON       reduce using rule 8 (statements -> statement .)
    FUN             reduce using rule 8 (statements -> statement .)
    $end            reduce using rule 8 (statements -> statement .)
    IF              reduce using rule 8 (statements -> statement .)
    BEGIN           reduce using rule 8 (statements -> statement .)
    BREAK           reduce using rule 8 (statements -> statement .)
    SKIP            reduce using rule 8 (statements -> statement .)
    ID              reduce using rule 8 (statements -> statement .)
    RETURN          reduce using rule 8 (statements -> statement .)
    READ            reduce using rule 8 (statements -> statement .)
    WRITE           reduce using rule 8 (statements -> statement .)
    PRINT           reduce using rule 8 (statements -> statement .)
    WHILE           reduce using rule 8 (statements -> statement .)
    END             reduce using rule 8 (statements -> statement .)


state 26

    (20) noStatement -> IF . relation THEN statement
    (18) statement -> IF . relation THEN statement ELSE statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 45
    NOT             shift and go to state 46
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 44
    expr                           shift and go to state 47
    number                         shift and go to state 50

state 27

    (9) statement -> BEGIN . statementList END
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 56
    statements                     shift and go to state 23
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 28

    (10) statement -> BREAK .
    SEMICOLON       reduce using rule 10 (statement -> BREAK .)
    FUN             reduce using rule 10 (statement -> BREAK .)
    $end            reduce using rule 10 (statement -> BREAK .)
    IF              reduce using rule 10 (statement -> BREAK .)
    BEGIN           reduce using rule 10 (statement -> BREAK .)
    BREAK           reduce using rule 10 (statement -> BREAK .)
    SKIP            reduce using rule 10 (statement -> BREAK .)
    ID              reduce using rule 10 (statement -> BREAK .)
    RETURN          reduce using rule 10 (statement -> BREAK .)
    READ            reduce using rule 10 (statement -> BREAK .)
    WRITE           reduce using rule 10 (statement -> BREAK .)
    PRINT           reduce using rule 10 (statement -> BREAK .)
    WHILE           reduce using rule 10 (statement -> BREAK .)
    END             reduce using rule 10 (statement -> BREAK .)
    ELSE            reduce using rule 10 (statement -> BREAK .)


state 29

    (11) statement -> SKIP .
    SEMICOLON       reduce using rule 11 (statement -> SKIP .)
    FUN             reduce using rule 11 (statement -> SKIP .)
    $end            reduce using rule 11 (statement -> SKIP .)
    IF              reduce using rule 11 (statement -> SKIP .)
    BEGIN           reduce using rule 11 (statement -> SKIP .)
    BREAK           reduce using rule 11 (statement -> SKIP .)
    SKIP            reduce using rule 11 (statement -> SKIP .)
    ID              reduce using rule 11 (statement -> SKIP .)
    RETURN          reduce using rule 11 (statement -> SKIP .)
    READ            reduce using rule 11 (statement -> SKIP .)
    WRITE           reduce using rule 11 (statement -> SKIP .)
    PRINT           reduce using rule 11 (statement -> SKIP .)
    WHILE           reduce using rule 11 (statement -> SKIP .)
    END             reduce using rule 11 (statement -> SKIP .)
    ELSE            reduce using rule 11 (statement -> SKIP .)


state 30

    (13) statement -> RETURN . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 57
    number                         shift and go to state 50

state 31

    (14) statement -> READ . LPAREN location RPAREN
    LPAREN          shift and go to state 59


state 32

    (15) statement -> WRITE . LPAREN expr RPAREN
    LPAREN          shift and go to state 60


state 33

    (16) statement -> PRINT . LPAREN STRING RPAREN
    LPAREN          shift and go to state 61


state 34

    (19) statement -> WHILE . relation DO statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 45
    NOT             shift and go to state 46
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 62
    expr                           shift and go to state 47
    number                         shift and go to state 50

state 35

    (51) varList -> func SEMICOLON . varList
    (49) varList -> . func
    (50) varList -> . varDecl
    (51) varList -> . func SEMICOLON varList
    (52) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType
    (54) varDecl -> . ID COLON varType
    FUN             shift and go to state 3
    ID              shift and go to state 7

    func                           shift and go to state 13
    varList                        shift and go to state 63
    varDecl                        shift and go to state 14

state 36

    (52) varList -> varDecl SEMICOLON . varList
    (49) varList -> . func
    (50) varList -> . varDecl
    (51) varList -> . func SEMICOLON varList
    (52) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType
    (54) varDecl -> . ID COLON varType
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varDecl                        shift and go to state 14
    varList                        shift and go to state 64
    func                           shift and go to state 13

state 37

    (4) func -> FUN ID LPAREN argList RPAREN varList . statementList
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 65
    statements                     shift and go to state 23
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 38

    (48) argList -> varDecl COMMA argList .
    RPAREN          reduce using rule 48 (argList -> varDecl COMMA argList .)


state 39

    (57) vectorType -> TFLOAT LBRACKET . expr RBRACKET
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 66
    number                         shift and go to state 50

state 40

    (58) vectorType -> TINT LBRACKET . expr RBRACKET
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 67
    number                         shift and go to state 50

state 41

    (12) statement -> ID LPAREN . exprList RPAREN
    (32) exprList -> . expr
    (33) exprList -> . expr COMMA exprList
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    exprList                       shift and go to state 68
    expr                           shift and go to state 69
    number                         shift and go to state 50

state 42

    (17) statement -> ID ASSIGN . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 70
    number                         shift and go to state 50

state 43

    (6) statementList -> statements SEMICOLON . statementList
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statements                     shift and go to state 23
    statementList                  shift and go to state 71
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 44

    (20) noStatement -> IF relation . THEN statement
    (18) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 72


state 45

    (21) relation -> LPAREN . relation RPAREN
    (40) expr -> LPAREN . expr RPAREN
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 45
    NOT             shift and go to state 46
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 73
    expr                           shift and go to state 74
    number                         shift and go to state 50

state 46

    (22) relation -> NOT . relation
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 45
    NOT             shift and go to state 46
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 75
    expr                           shift and go to state 47
    number                         shift and go to state 50

state 47

    (23) relation -> expr . relExpr expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    (24) relExpr -> . OR
    (25) relExpr -> . AND
    (26) relExpr -> . NEQ
    (27) relExpr -> . EQ
    (28) relExpr -> . GT
    (29) relExpr -> . GTE
    (30) relExpr -> . LT
    (31) relExpr -> . LTE
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82
    NEQ             shift and go to state 83
    EQ              shift and go to state 84
    GT              shift and go to state 85
    GTE             shift and go to state 86
    LT              shift and go to state 87
    LTE             shift and go to state 88

    relExpr                        shift and go to state 76

state 48

    (34) expr -> TFLOAT . LPAREN expr RPAREN
    LPAREN          shift and go to state 89


state 49

    (35) expr -> TINT . LPAREN expr RPAREN
    LPAREN          shift and go to state 90


state 50

    (36) expr -> number .
    DIVIDE          reduce using rule 36 (expr -> number .)
    TIMES           reduce using rule 36 (expr -> number .)
    MINUS           reduce using rule 36 (expr -> number .)
    PLUS            reduce using rule 36 (expr -> number .)
    OR              reduce using rule 36 (expr -> number .)
    AND             reduce using rule 36 (expr -> number .)
    NEQ             reduce using rule 36 (expr -> number .)
    EQ              reduce using rule 36 (expr -> number .)
    GT              reduce using rule 36 (expr -> number .)
    GTE             reduce using rule 36 (expr -> number .)
    LT              reduce using rule 36 (expr -> number .)
    LTE             reduce using rule 36 (expr -> number .)
    SEMICOLON       reduce using rule 36 (expr -> number .)
    FUN             reduce using rule 36 (expr -> number .)
    $end            reduce using rule 36 (expr -> number .)
    IF              reduce using rule 36 (expr -> number .)
    BEGIN           reduce using rule 36 (expr -> number .)
    BREAK           reduce using rule 36 (expr -> number .)
    SKIP            reduce using rule 36 (expr -> number .)
    ID              reduce using rule 36 (expr -> number .)
    RETURN          reduce using rule 36 (expr -> number .)
    READ            reduce using rule 36 (expr -> number .)
    WRITE           reduce using rule 36 (expr -> number .)
    PRINT           reduce using rule 36 (expr -> number .)
    WHILE           reduce using rule 36 (expr -> number .)
    END             reduce using rule 36 (expr -> number .)
    ELSE            reduce using rule 36 (expr -> number .)
    RBRACKET        reduce using rule 36 (expr -> number .)
    COMMA           reduce using rule 36 (expr -> number .)
    RPAREN          reduce using rule 36 (expr -> number .)
    THEN            reduce using rule 36 (expr -> number .)
    DO              reduce using rule 36 (expr -> number .)


state 51

    (37) expr -> ID . LBRACKET expr RBRACKET
    (38) expr -> ID .
    (39) expr -> ID . LPAREN exprList RPAREN
    LBRACKET        shift and go to state 91
    DIVIDE          reduce using rule 38 (expr -> ID .)
    TIMES           reduce using rule 38 (expr -> ID .)
    MINUS           reduce using rule 38 (expr -> ID .)
    PLUS            reduce using rule 38 (expr -> ID .)
    OR              reduce using rule 38 (expr -> ID .)
    AND             reduce using rule 38 (expr -> ID .)
    NEQ             reduce using rule 38 (expr -> ID .)
    EQ              reduce using rule 38 (expr -> ID .)
    GT              reduce using rule 38 (expr -> ID .)
    GTE             reduce using rule 38 (expr -> ID .)
    LT              reduce using rule 38 (expr -> ID .)
    LTE             reduce using rule 38 (expr -> ID .)
    SEMICOLON       reduce using rule 38 (expr -> ID .)
    FUN             reduce using rule 38 (expr -> ID .)
    $end            reduce using rule 38 (expr -> ID .)
    IF              reduce using rule 38 (expr -> ID .)
    BEGIN           reduce using rule 38 (expr -> ID .)
    BREAK           reduce using rule 38 (expr -> ID .)
    SKIP            reduce using rule 38 (expr -> ID .)
    ID              reduce using rule 38 (expr -> ID .)
    RETURN          reduce using rule 38 (expr -> ID .)
    READ            reduce using rule 38 (expr -> ID .)
    WRITE           reduce using rule 38 (expr -> ID .)
    PRINT           reduce using rule 38 (expr -> ID .)
    WHILE           reduce using rule 38 (expr -> ID .)
    END             reduce using rule 38 (expr -> ID .)
    ELSE            reduce using rule 38 (expr -> ID .)
    RBRACKET        reduce using rule 38 (expr -> ID .)
    COMMA           reduce using rule 38 (expr -> ID .)
    RPAREN          reduce using rule 38 (expr -> ID .)
    THEN            reduce using rule 38 (expr -> ID .)
    DO              reduce using rule 38 (expr -> ID .)
    LPAREN          shift and go to state 92


state 52

    (41) expr -> PLUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 93
    number                         shift and go to state 50

state 53

    (42) expr -> MINUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 94
    number                         shift and go to state 50

state 54

    (59) number -> FLOAT .
    DIVIDE          reduce using rule 59 (number -> FLOAT .)
    TIMES           reduce using rule 59 (number -> FLOAT .)
    MINUS           reduce using rule 59 (number -> FLOAT .)
    PLUS            reduce using rule 59 (number -> FLOAT .)
    OR              reduce using rule 59 (number -> FLOAT .)
    AND             reduce using rule 59 (number -> FLOAT .)
    NEQ             reduce using rule 59 (number -> FLOAT .)
    EQ              reduce using rule 59 (number -> FLOAT .)
    GT              reduce using rule 59 (number -> FLOAT .)
    GTE             reduce using rule 59 (number -> FLOAT .)
    LT              reduce using rule 59 (number -> FLOAT .)
    LTE             reduce using rule 59 (number -> FLOAT .)
    SEMICOLON       reduce using rule 59 (number -> FLOAT .)
    FUN             reduce using rule 59 (number -> FLOAT .)
    $end            reduce using rule 59 (number -> FLOAT .)
    IF              reduce using rule 59 (number -> FLOAT .)
    BEGIN           reduce using rule 59 (number -> FLOAT .)
    BREAK           reduce using rule 59 (number -> FLOAT .)
    SKIP            reduce using rule 59 (number -> FLOAT .)
    ID              reduce using rule 59 (number -> FLOAT .)
    RETURN          reduce using rule 59 (number -> FLOAT .)
    READ            reduce using rule 59 (number -> FLOAT .)
    WRITE           reduce using rule 59 (number -> FLOAT .)
    PRINT           reduce using rule 59 (number -> FLOAT .)
    WHILE           reduce using rule 59 (number -> FLOAT .)
    END             reduce using rule 59 (number -> FLOAT .)
    ELSE            reduce using rule 59 (number -> FLOAT .)
    RBRACKET        reduce using rule 59 (number -> FLOAT .)
    COMMA           reduce using rule 59 (number -> FLOAT .)
    RPAREN          reduce using rule 59 (number -> FLOAT .)
    THEN            reduce using rule 59 (number -> FLOAT .)
    DO              reduce using rule 59 (number -> FLOAT .)


state 55

    (60) number -> INT .
    DIVIDE          reduce using rule 60 (number -> INT .)
    TIMES           reduce using rule 60 (number -> INT .)
    MINUS           reduce using rule 60 (number -> INT .)
    PLUS            reduce using rule 60 (number -> INT .)
    OR              reduce using rule 60 (number -> INT .)
    AND             reduce using rule 60 (number -> INT .)
    NEQ             reduce using rule 60 (number -> INT .)
    EQ              reduce using rule 60 (number -> INT .)
    GT              reduce using rule 60 (number -> INT .)
    GTE             reduce using rule 60 (number -> INT .)
    LT              reduce using rule 60 (number -> INT .)
    LTE             reduce using rule 60 (number -> INT .)
    SEMICOLON       reduce using rule 60 (number -> INT .)
    FUN             reduce using rule 60 (number -> INT .)
    $end            reduce using rule 60 (number -> INT .)
    IF              reduce using rule 60 (number -> INT .)
    BEGIN           reduce using rule 60 (number -> INT .)
    BREAK           reduce using rule 60 (number -> INT .)
    SKIP            reduce using rule 60 (number -> INT .)
    ID              reduce using rule 60 (number -> INT .)
    RETURN          reduce using rule 60 (number -> INT .)
    READ            reduce using rule 60 (number -> INT .)
    WRITE           reduce using rule 60 (number -> INT .)
    PRINT           reduce using rule 60 (number -> INT .)
    WHILE           reduce using rule 60 (number -> INT .)
    END             reduce using rule 60 (number -> INT .)
    ELSE            reduce using rule 60 (number -> INT .)
    RBRACKET        reduce using rule 60 (number -> INT .)
    COMMA           reduce using rule 60 (number -> INT .)
    RPAREN          reduce using rule 60 (number -> INT .)
    THEN            reduce using rule 60 (number -> INT .)
    DO              reduce using rule 60 (number -> INT .)


state 56

    (9) statement -> BEGIN statementList . END
    END             shift and go to state 95


state 57

    (13) statement -> RETURN expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 13 (statement -> RETURN expr .)
    FUN             reduce using rule 13 (statement -> RETURN expr .)
    $end            reduce using rule 13 (statement -> RETURN expr .)
    IF              reduce using rule 13 (statement -> RETURN expr .)
    BEGIN           reduce using rule 13 (statement -> RETURN expr .)
    BREAK           reduce using rule 13 (statement -> RETURN expr .)
    SKIP            reduce using rule 13 (statement -> RETURN expr .)
    ID              reduce using rule 13 (statement -> RETURN expr .)
    RETURN          reduce using rule 13 (statement -> RETURN expr .)
    READ            reduce using rule 13 (statement -> RETURN expr .)
    WRITE           reduce using rule 13 (statement -> RETURN expr .)
    PRINT           reduce using rule 13 (statement -> RETURN expr .)
    WHILE           reduce using rule 13 (statement -> RETURN expr .)
    END             reduce using rule 13 (statement -> RETURN expr .)
    ELSE            reduce using rule 13 (statement -> RETURN expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 58

    (40) expr -> LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 96
    number                         shift and go to state 50

state 59

    (14) statement -> READ LPAREN . location RPAREN
    (61) location -> . ID LBRACKET ID RBRACKET
    (62) location -> . ID LBRACKET INT RBRACKET
    (63) location -> . ID
    ID              shift and go to state 98

    location                       shift and go to state 97

state 60

    (15) statement -> WRITE LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 99
    number                         shift and go to state 50

state 61

    (16) statement -> PRINT LPAREN . STRING RPAREN
    STRING          shift and go to state 100


state 62

    (19) statement -> WHILE relation . DO statement
    DO              shift and go to state 101


state 63

    (51) varList -> func SEMICOLON varList .
    IF              reduce using rule 51 (varList -> func SEMICOLON varList .)
    BEGIN           reduce using rule 51 (varList -> func SEMICOLON varList .)
    BREAK           reduce using rule 51 (varList -> func SEMICOLON varList .)
    SKIP            reduce using rule 51 (varList -> func SEMICOLON varList .)
    ID              reduce using rule 51 (varList -> func SEMICOLON varList .)
    RETURN          reduce using rule 51 (varList -> func SEMICOLON varList .)
    READ            reduce using rule 51 (varList -> func SEMICOLON varList .)
    WRITE           reduce using rule 51 (varList -> func SEMICOLON varList .)
    PRINT           reduce using rule 51 (varList -> func SEMICOLON varList .)
    WHILE           reduce using rule 51 (varList -> func SEMICOLON varList .)


state 64

    (52) varList -> varDecl SEMICOLON varList .
    IF              reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    BEGIN           reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    BREAK           reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    SKIP            reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    ID              reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    RETURN          reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    READ            reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    WRITE           reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    PRINT           reduce using rule 52 (varList -> varDecl SEMICOLON varList .)
    WHILE           reduce using rule 52 (varList -> varDecl SEMICOLON varList .)


state 65

    (4) func -> FUN ID LPAREN argList RPAREN varList statementList .
    FUN             reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    $end            reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    SEMICOLON       reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    IF              reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    BEGIN           reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    BREAK           reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    SKIP            reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    ID              reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    RETURN          reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    READ            reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    WRITE           reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    PRINT           reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    WHILE           reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)


state 66

    (57) vectorType -> TFLOAT LBRACKET expr . RBRACKET
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 102
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 67

    (58) vectorType -> TINT LBRACKET expr . RBRACKET
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 103
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 68

    (12) statement -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 104


state 69

    (32) exprList -> expr .
    (33) exprList -> expr . COMMA exprList
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          reduce using rule 32 (exprList -> expr .)
    COMMA           shift and go to state 105
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 70

    (17) statement -> ID ASSIGN expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 17 (statement -> ID ASSIGN expr .)
    FUN             reduce using rule 17 (statement -> ID ASSIGN expr .)
    $end            reduce using rule 17 (statement -> ID ASSIGN expr .)
    IF              reduce using rule 17 (statement -> ID ASSIGN expr .)
    BEGIN           reduce using rule 17 (statement -> ID ASSIGN expr .)
    BREAK           reduce using rule 17 (statement -> ID ASSIGN expr .)
    SKIP            reduce using rule 17 (statement -> ID ASSIGN expr .)
    ID              reduce using rule 17 (statement -> ID ASSIGN expr .)
    RETURN          reduce using rule 17 (statement -> ID ASSIGN expr .)
    READ            reduce using rule 17 (statement -> ID ASSIGN expr .)
    WRITE           reduce using rule 17 (statement -> ID ASSIGN expr .)
    PRINT           reduce using rule 17 (statement -> ID ASSIGN expr .)
    WHILE           reduce using rule 17 (statement -> ID ASSIGN expr .)
    END             reduce using rule 17 (statement -> ID ASSIGN expr .)
    ELSE            reduce using rule 17 (statement -> ID ASSIGN expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 71

    (6) statementList -> statements SEMICOLON statementList .
    FUN             reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    $end            reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    SEMICOLON       reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    IF              reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    BEGIN           reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    BREAK           reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    SKIP            reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    ID              reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    RETURN          reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    READ            reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    WRITE           reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    PRINT           reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    WHILE           reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    END             reduce using rule 6 (statementList -> statements SEMICOLON statementList .)


state 72

    (20) noStatement -> IF relation THEN . statement
    (18) statement -> IF relation THEN . statement ELSE statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 106
    WHILE           shift and go to state 34

    statement                      shift and go to state 107

state 73

    (21) relation -> LPAREN relation . RPAREN
    RPAREN          shift and go to state 108


state 74

    (40) expr -> LPAREN expr . RPAREN
    (23) relation -> expr . relExpr expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    (24) relExpr -> . OR
    (25) relExpr -> . AND
    (26) relExpr -> . NEQ
    (27) relExpr -> . EQ
    (28) relExpr -> . GT
    (29) relExpr -> . GTE
    (30) relExpr -> . LT
    (31) relExpr -> . LTE
    RPAREN          shift and go to state 109
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80
    OR              shift and go to state 81
    AND             shift and go to state 82
    NEQ             shift and go to state 83
    EQ              shift and go to state 84
    GT              shift and go to state 85
    GTE             shift and go to state 86
    LT              shift and go to state 87
    LTE             shift and go to state 88

    relExpr                        shift and go to state 76

state 75

    (22) relation -> NOT relation .
    THEN            reduce using rule 22 (relation -> NOT relation .)
    DO              reduce using rule 22 (relation -> NOT relation .)
    RPAREN          reduce using rule 22 (relation -> NOT relation .)


state 76

    (23) relation -> expr relExpr . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 110
    number                         shift and go to state 50

state 77

    (43) expr -> expr DIVIDE . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 111
    number                         shift and go to state 50

state 78

    (44) expr -> expr TIMES . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 112
    number                         shift and go to state 50

state 79

    (45) expr -> expr MINUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 113
    number                         shift and go to state 50

state 80

    (46) expr -> expr PLUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 114
    number                         shift and go to state 50

state 81

    (24) relExpr -> OR .
    TFLOAT          reduce using rule 24 (relExpr -> OR .)
    TINT            reduce using rule 24 (relExpr -> OR .)
    ID              reduce using rule 24 (relExpr -> OR .)
    LPAREN          reduce using rule 24 (relExpr -> OR .)
    PLUS            reduce using rule 24 (relExpr -> OR .)
    MINUS           reduce using rule 24 (relExpr -> OR .)
    FLOAT           reduce using rule 24 (relExpr -> OR .)
    INT             reduce using rule 24 (relExpr -> OR .)


state 82

    (25) relExpr -> AND .
    TFLOAT          reduce using rule 25 (relExpr -> AND .)
    TINT            reduce using rule 25 (relExpr -> AND .)
    ID              reduce using rule 25 (relExpr -> AND .)
    LPAREN          reduce using rule 25 (relExpr -> AND .)
    PLUS            reduce using rule 25 (relExpr -> AND .)
    MINUS           reduce using rule 25 (relExpr -> AND .)
    FLOAT           reduce using rule 25 (relExpr -> AND .)
    INT             reduce using rule 25 (relExpr -> AND .)


state 83

    (26) relExpr -> NEQ .
    TFLOAT          reduce using rule 26 (relExpr -> NEQ .)
    TINT            reduce using rule 26 (relExpr -> NEQ .)
    ID              reduce using rule 26 (relExpr -> NEQ .)
    LPAREN          reduce using rule 26 (relExpr -> NEQ .)
    PLUS            reduce using rule 26 (relExpr -> NEQ .)
    MINUS           reduce using rule 26 (relExpr -> NEQ .)
    FLOAT           reduce using rule 26 (relExpr -> NEQ .)
    INT             reduce using rule 26 (relExpr -> NEQ .)


state 84

    (27) relExpr -> EQ .
    TFLOAT          reduce using rule 27 (relExpr -> EQ .)
    TINT            reduce using rule 27 (relExpr -> EQ .)
    ID              reduce using rule 27 (relExpr -> EQ .)
    LPAREN          reduce using rule 27 (relExpr -> EQ .)
    PLUS            reduce using rule 27 (relExpr -> EQ .)
    MINUS           reduce using rule 27 (relExpr -> EQ .)
    FLOAT           reduce using rule 27 (relExpr -> EQ .)
    INT             reduce using rule 27 (relExpr -> EQ .)


state 85

    (28) relExpr -> GT .
    TFLOAT          reduce using rule 28 (relExpr -> GT .)
    TINT            reduce using rule 28 (relExpr -> GT .)
    ID              reduce using rule 28 (relExpr -> GT .)
    LPAREN          reduce using rule 28 (relExpr -> GT .)
    PLUS            reduce using rule 28 (relExpr -> GT .)
    MINUS           reduce using rule 28 (relExpr -> GT .)
    FLOAT           reduce using rule 28 (relExpr -> GT .)
    INT             reduce using rule 28 (relExpr -> GT .)


state 86

    (29) relExpr -> GTE .
    TFLOAT          reduce using rule 29 (relExpr -> GTE .)
    TINT            reduce using rule 29 (relExpr -> GTE .)
    ID              reduce using rule 29 (relExpr -> GTE .)
    LPAREN          reduce using rule 29 (relExpr -> GTE .)
    PLUS            reduce using rule 29 (relExpr -> GTE .)
    MINUS           reduce using rule 29 (relExpr -> GTE .)
    FLOAT           reduce using rule 29 (relExpr -> GTE .)
    INT             reduce using rule 29 (relExpr -> GTE .)


state 87

    (30) relExpr -> LT .
    TFLOAT          reduce using rule 30 (relExpr -> LT .)
    TINT            reduce using rule 30 (relExpr -> LT .)
    ID              reduce using rule 30 (relExpr -> LT .)
    LPAREN          reduce using rule 30 (relExpr -> LT .)
    PLUS            reduce using rule 30 (relExpr -> LT .)
    MINUS           reduce using rule 30 (relExpr -> LT .)
    FLOAT           reduce using rule 30 (relExpr -> LT .)
    INT             reduce using rule 30 (relExpr -> LT .)


state 88

    (31) relExpr -> LTE .
    TFLOAT          reduce using rule 31 (relExpr -> LTE .)
    TINT            reduce using rule 31 (relExpr -> LTE .)
    ID              reduce using rule 31 (relExpr -> LTE .)
    LPAREN          reduce using rule 31 (relExpr -> LTE .)
    PLUS            reduce using rule 31 (relExpr -> LTE .)
    MINUS           reduce using rule 31 (relExpr -> LTE .)
    FLOAT           reduce using rule 31 (relExpr -> LTE .)
    INT             reduce using rule 31 (relExpr -> LTE .)


state 89

    (34) expr -> TFLOAT LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 115
    number                         shift and go to state 50

state 90

    (35) expr -> TINT LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 116
    number                         shift and go to state 50

state 91

    (37) expr -> ID LBRACKET . expr RBRACKET
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 117
    number                         shift and go to state 50

state 92

    (39) expr -> ID LPAREN . exprList RPAREN
    (32) exprList -> . expr
    (33) exprList -> . expr COMMA exprList
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    exprList                       shift and go to state 118
    expr                           shift and go to state 69
    number                         shift and go to state 50

state 93

    (41) expr -> PLUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    MINUS           reduce using rule 41 (expr -> PLUS expr .)
    PLUS            reduce using rule 41 (expr -> PLUS expr .)
    OR              reduce using rule 41 (expr -> PLUS expr .)
    AND             reduce using rule 41 (expr -> PLUS expr .)
    NEQ             reduce using rule 41 (expr -> PLUS expr .)
    EQ              reduce using rule 41 (expr -> PLUS expr .)
    GT              reduce using rule 41 (expr -> PLUS expr .)
    GTE             reduce using rule 41 (expr -> PLUS expr .)
    LT              reduce using rule 41 (expr -> PLUS expr .)
    LTE             reduce using rule 41 (expr -> PLUS expr .)
    SEMICOLON       reduce using rule 41 (expr -> PLUS expr .)
    FUN             reduce using rule 41 (expr -> PLUS expr .)
    $end            reduce using rule 41 (expr -> PLUS expr .)
    IF              reduce using rule 41 (expr -> PLUS expr .)
    BEGIN           reduce using rule 41 (expr -> PLUS expr .)
    BREAK           reduce using rule 41 (expr -> PLUS expr .)
    SKIP            reduce using rule 41 (expr -> PLUS expr .)
    ID              reduce using rule 41 (expr -> PLUS expr .)
    RETURN          reduce using rule 41 (expr -> PLUS expr .)
    READ            reduce using rule 41 (expr -> PLUS expr .)
    WRITE           reduce using rule 41 (expr -> PLUS expr .)
    PRINT           reduce using rule 41 (expr -> PLUS expr .)
    WHILE           reduce using rule 41 (expr -> PLUS expr .)
    END             reduce using rule 41 (expr -> PLUS expr .)
    ELSE            reduce using rule 41 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 41 (expr -> PLUS expr .)
    COMMA           reduce using rule 41 (expr -> PLUS expr .)
    RPAREN          reduce using rule 41 (expr -> PLUS expr .)
    THEN            reduce using rule 41 (expr -> PLUS expr .)
    DO              reduce using rule 41 (expr -> PLUS expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78


state 94

    (42) expr -> MINUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    MINUS           reduce using rule 42 (expr -> MINUS expr .)
    PLUS            reduce using rule 42 (expr -> MINUS expr .)
    OR              reduce using rule 42 (expr -> MINUS expr .)
    AND             reduce using rule 42 (expr -> MINUS expr .)
    NEQ             reduce using rule 42 (expr -> MINUS expr .)
    EQ              reduce using rule 42 (expr -> MINUS expr .)
    GT              reduce using rule 42 (expr -> MINUS expr .)
    GTE             reduce using rule 42 (expr -> MINUS expr .)
    LT              reduce using rule 42 (expr -> MINUS expr .)
    LTE             reduce using rule 42 (expr -> MINUS expr .)
    SEMICOLON       reduce using rule 42 (expr -> MINUS expr .)
    FUN             reduce using rule 42 (expr -> MINUS expr .)
    $end            reduce using rule 42 (expr -> MINUS expr .)
    IF              reduce using rule 42 (expr -> MINUS expr .)
    BEGIN           reduce using rule 42 (expr -> MINUS expr .)
    BREAK           reduce using rule 42 (expr -> MINUS expr .)
    SKIP            reduce using rule 42 (expr -> MINUS expr .)
    ID              reduce using rule 42 (expr -> MINUS expr .)
    RETURN          reduce using rule 42 (expr -> MINUS expr .)
    READ            reduce using rule 42 (expr -> MINUS expr .)
    WRITE           reduce using rule 42 (expr -> MINUS expr .)
    PRINT           reduce using rule 42 (expr -> MINUS expr .)
    WHILE           reduce using rule 42 (expr -> MINUS expr .)
    END             reduce using rule 42 (expr -> MINUS expr .)
    ELSE            reduce using rule 42 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 42 (expr -> MINUS expr .)
    COMMA           reduce using rule 42 (expr -> MINUS expr .)
    RPAREN          reduce using rule 42 (expr -> MINUS expr .)
    THEN            reduce using rule 42 (expr -> MINUS expr .)
    DO              reduce using rule 42 (expr -> MINUS expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78


state 95

    (9) statement -> BEGIN statementList END .
    SEMICOLON       reduce using rule 9 (statement -> BEGIN statementList END .)
    FUN             reduce using rule 9 (statement -> BEGIN statementList END .)
    $end            reduce using rule 9 (statement -> BEGIN statementList END .)
    IF              reduce using rule 9 (statement -> BEGIN statementList END .)
    BEGIN           reduce using rule 9 (statement -> BEGIN statementList END .)
    BREAK           reduce using rule 9 (statement -> BEGIN statementList END .)
    SKIP            reduce using rule 9 (statement -> BEGIN statementList END .)
    ID              reduce using rule 9 (statement -> BEGIN statementList END .)
    RETURN          reduce using rule 9 (statement -> BEGIN statementList END .)
    READ            reduce using rule 9 (statement -> BEGIN statementList END .)
    WRITE           reduce using rule 9 (statement -> BEGIN statementList END .)
    PRINT           reduce using rule 9 (statement -> BEGIN statementList END .)
    WHILE           reduce using rule 9 (statement -> BEGIN statementList END .)
    END             reduce using rule 9 (statement -> BEGIN statementList END .)
    ELSE            reduce using rule 9 (statement -> BEGIN statementList END .)


state 96

    (40) expr -> LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 109
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 97

    (14) statement -> READ LPAREN location . RPAREN
    RPAREN          shift and go to state 119


state 98

    (61) location -> ID . LBRACKET ID RBRACKET
    (62) location -> ID . LBRACKET INT RBRACKET
    (63) location -> ID .
    LBRACKET        shift and go to state 120
    RPAREN          reduce using rule 63 (location -> ID .)


state 99

    (15) statement -> WRITE LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 121
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 100

    (16) statement -> PRINT LPAREN STRING . RPAREN
    RPAREN          shift and go to state 122


state 101

    (19) statement -> WHILE relation DO . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 106
    WHILE           shift and go to state 34

    statement                      shift and go to state 123

state 102

    (57) vectorType -> TFLOAT LBRACKET expr RBRACKET .
    COMMA           reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    IF              reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    BEGIN           reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    BREAK           reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    SKIP            reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    ID              reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    RETURN          reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    READ            reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    WRITE           reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    PRINT           reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    WHILE           reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)


state 103

    (58) vectorType -> TINT LBRACKET expr RBRACKET .
    COMMA           reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    IF              reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    BEGIN           reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    BREAK           reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    SKIP            reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    ID              reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    RETURN          reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    READ            reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    WRITE           reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    PRINT           reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)
    WHILE           reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)


state 104

    (12) statement -> ID LPAREN exprList RPAREN .
    SEMICOLON       reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    FUN             reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    $end            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    IF              reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    BEGIN           reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    BREAK           reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    SKIP            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    ID              reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    RETURN          reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    READ            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    WRITE           reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    PRINT           reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    WHILE           reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)


state 105

    (33) exprList -> expr COMMA . exprList
    (32) exprList -> . expr
    (33) exprList -> . expr COMMA exprList
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    LPAREN          shift and go to state 58
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    expr                           shift and go to state 69
    exprList                       shift and go to state 124
    number                         shift and go to state 50

state 106

    (18) statement -> IF . relation THEN statement ELSE statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 45
    NOT             shift and go to state 46
    TFLOAT          shift and go to state 48
    TINT            shift and go to state 49
    ID              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    FLOAT           shift and go to state 54
    INT             shift and go to state 55

    relation                       shift and go to state 125
    expr                           shift and go to state 47
    number                         shift and go to state 50

state 107

    (20) noStatement -> IF relation THEN statement .
    (18) statement -> IF relation THEN statement . ELSE statement
    SEMICOLON       reduce using rule 20 (noStatement -> IF relation THEN statement .)
    FUN             reduce using rule 20 (noStatement -> IF relation THEN statement .)
    $end            reduce using rule 20 (noStatement -> IF relation THEN statement .)
    IF              reduce using rule 20 (noStatement -> IF relation THEN statement .)
    BEGIN           reduce using rule 20 (noStatement -> IF relation THEN statement .)
    BREAK           reduce using rule 20 (noStatement -> IF relation THEN statement .)
    SKIP            reduce using rule 20 (noStatement -> IF relation THEN statement .)
    ID              reduce using rule 20 (noStatement -> IF relation THEN statement .)
    RETURN          reduce using rule 20 (noStatement -> IF relation THEN statement .)
    READ            reduce using rule 20 (noStatement -> IF relation THEN statement .)
    WRITE           reduce using rule 20 (noStatement -> IF relation THEN statement .)
    PRINT           reduce using rule 20 (noStatement -> IF relation THEN statement .)
    WHILE           reduce using rule 20 (noStatement -> IF relation THEN statement .)
    END             reduce using rule 20 (noStatement -> IF relation THEN statement .)
    ELSE            shift and go to state 126


state 108

    (21) relation -> LPAREN relation RPAREN .
    THEN            reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    DO              reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 21 (relation -> LPAREN relation RPAREN .)


state 109

    (40) expr -> LPAREN expr RPAREN .
    DIVIDE          reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    FUN             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    IF              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    BEGIN           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    BREAK           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    SKIP            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    ID              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    READ            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    WRITE           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    PRINT           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 40 (expr -> LPAREN expr RPAREN .)


state 110

    (23) relation -> expr relExpr expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    THEN            reduce using rule 23 (relation -> expr relExpr expr .)
    DO              reduce using rule 23 (relation -> expr relExpr expr .)
    RPAREN          reduce using rule 23 (relation -> expr relExpr expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 111

    (43) expr -> expr DIVIDE expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 43 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 43 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 43 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 43 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 43 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 43 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 43 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 43 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 43 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 43 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 43 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 43 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 43 (expr -> expr DIVIDE expr .)
    FUN             reduce using rule 43 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 43 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 43 (expr -> expr DIVIDE expr .)
    BEGIN           reduce using rule 43 (expr -> expr DIVIDE expr .)
    BREAK           reduce using rule 43 (expr -> expr DIVIDE expr .)
    SKIP            reduce using rule 43 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 43 (expr -> expr DIVIDE expr .)
    RETURN          reduce using rule 43 (expr -> expr DIVIDE expr .)
    READ            reduce using rule 43 (expr -> expr DIVIDE expr .)
    WRITE           reduce using rule 43 (expr -> expr DIVIDE expr .)
    PRINT           reduce using rule 43 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 43 (expr -> expr DIVIDE expr .)
    END             reduce using rule 43 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 43 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 43 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 43 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 43 (expr -> expr DIVIDE expr .)
    THEN            reduce using rule 43 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 43 (expr -> expr DIVIDE expr .)


state 112

    (44) expr -> expr TIMES expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 44 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 44 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 44 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 44 (expr -> expr TIMES expr .)
    OR              reduce using rule 44 (expr -> expr TIMES expr .)
    AND             reduce using rule 44 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 44 (expr -> expr TIMES expr .)
    EQ              reduce using rule 44 (expr -> expr TIMES expr .)
    GT              reduce using rule 44 (expr -> expr TIMES expr .)
    GTE             reduce using rule 44 (expr -> expr TIMES expr .)
    LT              reduce using rule 44 (expr -> expr TIMES expr .)
    LTE             reduce using rule 44 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 44 (expr -> expr TIMES expr .)
    FUN             reduce using rule 44 (expr -> expr TIMES expr .)
    $end            reduce using rule 44 (expr -> expr TIMES expr .)
    IF              reduce using rule 44 (expr -> expr TIMES expr .)
    BEGIN           reduce using rule 44 (expr -> expr TIMES expr .)
    BREAK           reduce using rule 44 (expr -> expr TIMES expr .)
    SKIP            reduce using rule 44 (expr -> expr TIMES expr .)
    ID              reduce using rule 44 (expr -> expr TIMES expr .)
    RETURN          reduce using rule 44 (expr -> expr TIMES expr .)
    READ            reduce using rule 44 (expr -> expr TIMES expr .)
    WRITE           reduce using rule 44 (expr -> expr TIMES expr .)
    PRINT           reduce using rule 44 (expr -> expr TIMES expr .)
    WHILE           reduce using rule 44 (expr -> expr TIMES expr .)
    END             reduce using rule 44 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 44 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 44 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 44 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 44 (expr -> expr TIMES expr .)
    THEN            reduce using rule 44 (expr -> expr TIMES expr .)
    DO              reduce using rule 44 (expr -> expr TIMES expr .)


state 113

    (45) expr -> expr MINUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    MINUS           reduce using rule 45 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 45 (expr -> expr MINUS expr .)
    OR              reduce using rule 45 (expr -> expr MINUS expr .)
    AND             reduce using rule 45 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 45 (expr -> expr MINUS expr .)
    EQ              reduce using rule 45 (expr -> expr MINUS expr .)
    GT              reduce using rule 45 (expr -> expr MINUS expr .)
    GTE             reduce using rule 45 (expr -> expr MINUS expr .)
    LT              reduce using rule 45 (expr -> expr MINUS expr .)
    LTE             reduce using rule 45 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 45 (expr -> expr MINUS expr .)
    FUN             reduce using rule 45 (expr -> expr MINUS expr .)
    $end            reduce using rule 45 (expr -> expr MINUS expr .)
    IF              reduce using rule 45 (expr -> expr MINUS expr .)
    BEGIN           reduce using rule 45 (expr -> expr MINUS expr .)
    BREAK           reduce using rule 45 (expr -> expr MINUS expr .)
    SKIP            reduce using rule 45 (expr -> expr MINUS expr .)
    ID              reduce using rule 45 (expr -> expr MINUS expr .)
    RETURN          reduce using rule 45 (expr -> expr MINUS expr .)
    READ            reduce using rule 45 (expr -> expr MINUS expr .)
    WRITE           reduce using rule 45 (expr -> expr MINUS expr .)
    PRINT           reduce using rule 45 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 45 (expr -> expr MINUS expr .)
    END             reduce using rule 45 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 45 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 45 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 45 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 45 (expr -> expr MINUS expr .)
    THEN            reduce using rule 45 (expr -> expr MINUS expr .)
    DO              reduce using rule 45 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78


state 114

    (46) expr -> expr PLUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    MINUS           reduce using rule 46 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 46 (expr -> expr PLUS expr .)
    OR              reduce using rule 46 (expr -> expr PLUS expr .)
    AND             reduce using rule 46 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 46 (expr -> expr PLUS expr .)
    EQ              reduce using rule 46 (expr -> expr PLUS expr .)
    GT              reduce using rule 46 (expr -> expr PLUS expr .)
    GTE             reduce using rule 46 (expr -> expr PLUS expr .)
    LT              reduce using rule 46 (expr -> expr PLUS expr .)
    LTE             reduce using rule 46 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 46 (expr -> expr PLUS expr .)
    FUN             reduce using rule 46 (expr -> expr PLUS expr .)
    $end            reduce using rule 46 (expr -> expr PLUS expr .)
    IF              reduce using rule 46 (expr -> expr PLUS expr .)
    BEGIN           reduce using rule 46 (expr -> expr PLUS expr .)
    BREAK           reduce using rule 46 (expr -> expr PLUS expr .)
    SKIP            reduce using rule 46 (expr -> expr PLUS expr .)
    ID              reduce using rule 46 (expr -> expr PLUS expr .)
    RETURN          reduce using rule 46 (expr -> expr PLUS expr .)
    READ            reduce using rule 46 (expr -> expr PLUS expr .)
    WRITE           reduce using rule 46 (expr -> expr PLUS expr .)
    PRINT           reduce using rule 46 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 46 (expr -> expr PLUS expr .)
    END             reduce using rule 46 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 46 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 46 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 46 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 46 (expr -> expr PLUS expr .)
    THEN            reduce using rule 46 (expr -> expr PLUS expr .)
    DO              reduce using rule 46 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78


state 115

    (34) expr -> TFLOAT LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 127
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 116

    (35) expr -> TINT LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 128
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 117

    (37) expr -> ID LBRACKET expr . RBRACKET
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 129
    DIVIDE          shift and go to state 77
    TIMES           shift and go to state 78
    MINUS           shift and go to state 79
    PLUS            shift and go to state 80


state 118

    (39) expr -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 130


state 119

    (14) statement -> READ LPAREN location RPAREN .
    SEMICOLON       reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    FUN             reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    $end            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    IF              reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    BEGIN           reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    BREAK           reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    SKIP            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    ID              reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    RETURN          reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    READ            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    WRITE           reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    PRINT           reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    WHILE           reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    END             reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    ELSE            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)


state 120

    (61) location -> ID LBRACKET . ID RBRACKET
    (62) location -> ID LBRACKET . INT RBRACKET
    ID              shift and go to state 131
    INT             shift and go to state 132


state 121

    (15) statement -> WRITE LPAREN expr RPAREN .
    SEMICOLON       reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    FUN             reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    $end            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    IF              reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    BEGIN           reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    BREAK           reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    SKIP            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    ID              reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    RETURN          reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    READ            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    WRITE           reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    PRINT           reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    WHILE           reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    END             reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    ELSE            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)


state 122

    (16) statement -> PRINT LPAREN STRING RPAREN .
    SEMICOLON       reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    FUN             reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    IF              reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    BEGIN           reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    BREAK           reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    SKIP            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    ID              reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    RETURN          reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    READ            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    WRITE           reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    PRINT           reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    WHILE           reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    END             reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)


state 123

    (19) statement -> WHILE relation DO statement .
    SEMICOLON       reduce using rule 19 (statement -> WHILE relation DO statement .)
    FUN             reduce using rule 19 (statement -> WHILE relation DO statement .)
    $end            reduce using rule 19 (statement -> WHILE relation DO statement .)
    IF              reduce using rule 19 (statement -> WHILE relation DO statement .)
    BEGIN           reduce using rule 19 (statement -> WHILE relation DO statement .)
    BREAK           reduce using rule 19 (statement -> WHILE relation DO statement .)
    SKIP            reduce using rule 19 (statement -> WHILE relation DO statement .)
    ID              reduce using rule 19 (statement -> WHILE relation DO statement .)
    RETURN          reduce using rule 19 (statement -> WHILE relation DO statement .)
    READ            reduce using rule 19 (statement -> WHILE relation DO statement .)
    WRITE           reduce using rule 19 (statement -> WHILE relation DO statement .)
    PRINT           reduce using rule 19 (statement -> WHILE relation DO statement .)
    WHILE           reduce using rule 19 (statement -> WHILE relation DO statement .)
    END             reduce using rule 19 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 19 (statement -> WHILE relation DO statement .)


state 124

    (33) exprList -> expr COMMA exprList .
    RPAREN          reduce using rule 33 (exprList -> expr COMMA exprList .)


state 125

    (18) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 133


state 126

    (18) statement -> IF relation THEN statement ELSE . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 106
    WHILE           shift and go to state 34

    statement                      shift and go to state 134

state 127

    (34) expr -> TFLOAT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    TIMES           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    MINUS           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    PLUS            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    OR              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    AND             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    NEQ             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    EQ              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    GT              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    GTE             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    LT              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    LTE             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    FUN             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    $end            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    IF              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    BEGIN           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    BREAK           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    SKIP            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    ID              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    RETURN          reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    READ            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    WRITE           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    PRINT           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    WHILE           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    END             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    ELSE            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    COMMA           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    THEN            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    DO              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)


state 128

    (35) expr -> TINT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    TIMES           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    MINUS           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    PLUS            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    OR              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    AND             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    NEQ             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    EQ              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    GT              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    GTE             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    LT              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    LTE             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    FUN             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    $end            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    IF              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    BEGIN           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    BREAK           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    SKIP            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    ID              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    RETURN          reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    READ            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    WRITE           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    PRINT           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    WHILE           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    END             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    ELSE            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    THEN            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    DO              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)


state 129

    (37) expr -> ID LBRACKET expr RBRACKET .
    DIVIDE          reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    OR              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    AND             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    NEQ             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    EQ              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    GT              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    GTE             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    LT              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    LTE             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    FUN             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    $end            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    IF              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    BEGIN           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    BREAK           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    SKIP            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    ID              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    RETURN          reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    READ            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    WRITE           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    PRINT           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    WHILE           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    END             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    ELSE            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    THEN            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    DO              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)


state 130

    (39) expr -> ID LPAREN exprList RPAREN .
    DIVIDE          reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    TIMES           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    MINUS           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    PLUS            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    OR              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    AND             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    NEQ             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    EQ              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    GT              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    GTE             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    LT              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    LTE             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    SEMICOLON       reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    FUN             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    $end            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    IF              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    BEGIN           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    BREAK           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    SKIP            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    ID              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    RETURN          reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    READ            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    WRITE           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    PRINT           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    WHILE           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    RBRACKET        reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    COMMA           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    RPAREN          reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    THEN            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    DO              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)


state 131

    (61) location -> ID LBRACKET ID . RBRACKET
    RBRACKET        shift and go to state 135


state 132

    (62) location -> ID LBRACKET INT . RBRACKET
    RBRACKET        shift and go to state 136


state 133

    (18) statement -> IF relation THEN . statement ELSE statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 106
    WHILE           shift and go to state 34

    statement                      shift and go to state 137

state 134

    (18) statement -> IF relation THEN statement ELSE statement .
    SEMICOLON       reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    FUN             reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    $end            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    IF              reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    BEGIN           reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    BREAK           reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    SKIP            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    ID              reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    RETURN          reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    READ            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    WRITE           reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    PRINT           reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    WHILE           reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    END             reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    ELSE            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)


state 135

    (61) location -> ID LBRACKET ID RBRACKET .
    RPAREN          reduce using rule 61 (location -> ID LBRACKET ID RBRACKET .)


state 136

    (62) location -> ID LBRACKET INT RBRACKET .
    RPAREN          reduce using rule 62 (location -> ID LBRACKET INT RBRACKET .)


state 137

    (18) statement -> IF relation THEN statement . ELSE statement
    ELSE            shift and go to state 126


Conflicts:

shift/reduce conflict for SEMICOLON in state 23 resolved as shift