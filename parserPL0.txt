Grammar:

Rule 0     S' -> funcList
Rule 1     funcList -> func
Rule 2     funcList -> func funcList
Rule 3     func -> FUN ID LPAREN RPAREN BEGIN statementList END
Rule 4     func -> FUN ID LPAREN argList RPAREN BEGIN statementList END
Rule 5     func -> FUN ID LPAREN RPAREN varList BEGIN statementList END
Rule 6     func -> FUN ID LPAREN argList RPAREN varList BEGIN statementList END
Rule 7     statementList -> statements
Rule 8     statementList -> statements SEMICOLON statementList
Rule 9     statements -> noStatement
Rule 10    statements -> statement
Rule 11    statement -> BEGIN statementList END
Rule 12    statement -> BREAK
Rule 13    statement -> SKIP
Rule 14    statement -> ID LPAREN RPAREN
Rule 15    statement -> ID LPAREN exprList RPAREN
Rule 16    statement -> RETURN expr
Rule 17    statement -> READ LPAREN location RPAREN
Rule 18    statement -> WRITE LPAREN expr RPAREN
Rule 19    statement -> PRINT LPAREN STRING RPAREN
Rule 20    statement -> location ASSIGN expr
Rule 21    statement -> IF relation THEN statement ELSE statement
Rule 22    statement -> WHILE relation DO statement
Rule 23    noStatement -> IF relation THEN statement
Rule 24    relation -> LPAREN relation RPAREN
Rule 25    relation -> NOT relation  [precedence=right, level=6]
Rule 26    relation -> expr relExpr expr
Rule 27    relation -> expr relExpr relation
Rule 28    relExpr -> OR  [precedence=left, level=1]
Rule 29    relExpr -> AND  [precedence=left, level=1]
Rule 30    relExpr -> NEQ  [precedence=left, level=2]
Rule 31    relExpr -> EQ  [precedence=left, level=2]
Rule 32    relExpr -> GT  [precedence=left, level=3]
Rule 33    relExpr -> GTE  [precedence=left, level=3]
Rule 34    relExpr -> LT  [precedence=left, level=3]
Rule 35    relExpr -> LTE  [precedence=left, level=3]
Rule 36    exprList -> expr
Rule 37    exprList -> expr COMMA exprList
Rule 38    expr -> TFLOAT LPAREN expr RPAREN
Rule 39    expr -> TINT LPAREN expr RPAREN
Rule 40    expr -> number
Rule 41    expr -> ID LBRACKET expr RBRACKET
Rule 42    expr -> ID
Rule 43    expr -> ID LPAREN RPAREN
Rule 44    expr -> ID LPAREN exprList RPAREN
Rule 45    expr -> LPAREN expr RPAREN
Rule 46    expr -> PLUS expr  [precedence=right, level=6]
Rule 47    expr -> MINUS expr  [precedence=right, level=6]
Rule 48    expr -> expr DIVIDE expr  [precedence=left, level=5]
Rule 49    expr -> expr TIMES expr  [precedence=left, level=5]
Rule 50    expr -> expr MINUS expr  [precedence=left, level=4]
Rule 51    expr -> expr PLUS expr  [precedence=left, level=4]
Rule 52    argList -> varDecl
Rule 53    argList -> varDecl COMMA argList
Rule 54    varList -> func SEMICOLON
Rule 55    varList -> varDecl SEMICOLON
Rule 56    varList -> func SEMICOLON varList
Rule 57    varList -> varDecl SEMICOLON varList
Rule 58    varDecl -> ID COLON vectorType
Rule 59    varDecl -> ID COLON varType
Rule 60    varType -> TFLOAT
Rule 61    varType -> TINT
Rule 62    vectorType -> TFLOAT LBRACKET expr RBRACKET
Rule 63    vectorType -> TINT LBRACKET expr RBRACKET
Rule 64    number -> FLOAT
Rule 65    number -> INT
Rule 66    location -> ID LBRACKET expr RBRACKET
Rule 67    location -> ID

Terminals, with rules where they appear:

AND                  : 29
ASSIGN               : 20
BEGIN                : 3 4 5 6 11
BREAK                : 12
COLON                : 58 59
COMMA                : 37 53
DIVIDE               : 48
DO                   : 22
ELSE                 : 21
END                  : 3 4 5 6 11
EQ                   : 31
FLOAT                : 64
FUN                  : 3 4 5 6
GT                   : 32
GTE                  : 33
ID                   : 3 4 5 6 14 15 41 42 43 44 58 59 66 67
IF                   : 21 23
INT                  : 65
LBRACKET             : 41 62 63 66
LPAREN               : 3 4 5 6 14 15 17 18 19 24 38 39 43 44 45
LT                   : 34
LTE                  : 35
MINUS                : 47 50
NEQ                  : 30
NOT                  : 25
OR                   : 28
PLUS                 : 46 51
PRINT                : 19
RBRACKET             : 41 62 63 66
READ                 : 17
RETURN               : 16
RPAREN               : 3 4 5 6 14 15 17 18 19 24 38 39 43 44 45
SEMICOLON            : 8 54 55 56 57
SKIP                 : 13
STRING               : 19
TFLOAT               : 38 60 62
THEN                 : 21 23
TIMES                : 49
TINT                 : 39 61 63
WHILE                : 22
WRITE                : 18
error                : 

Nonterminals, with rules where they appear:

argList              : 4 6 53
expr                 : 16 18 20 26 26 27 36 37 38 39 41 45 46 47 48 48 49 49 50 50 51 51 62 63 66
exprList             : 15 37 44
func                 : 1 2 54 56
funcList             : 2 0
location             : 17 20
noStatement          : 9
number               : 40
relExpr              : 26 27
relation             : 21 22 23 24 25 27
statement            : 10 21 21 22 23
statementList        : 3 4 5 6 8 11
statements           : 7 8
varDecl              : 52 53 55 57
varList              : 5 6 56 57
varType              : 59
vectorType           : 58


state 0

    (0) S' -> . funcList
    (1) funcList -> . func
    (2) funcList -> . func funcList
    (3) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (4) func -> . FUN ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> . FUN ID LPAREN argList RPAREN varList BEGIN statementList END
    FUN             shift and go to state 3

    funcList                       shift and go to state 1
    func                           shift and go to state 2

state 1

    (0) S' -> funcList .


state 2

    (1) funcList -> func .
    (2) funcList -> func . funcList
    (1) funcList -> . func
    (2) funcList -> . func funcList
    (3) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (4) func -> . FUN ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> . FUN ID LPAREN argList RPAREN varList BEGIN statementList END
    $end            reduce using rule 1 (funcList -> func .)
    FUN             shift and go to state 3

    func                           shift and go to state 2
    funcList                       shift and go to state 4

state 3

    (3) func -> FUN . ID LPAREN RPAREN BEGIN statementList END
    (4) func -> FUN . ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> FUN . ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> FUN . ID LPAREN argList RPAREN varList BEGIN statementList END
    ID              shift and go to state 5


state 4

    (2) funcList -> func funcList .
    $end            reduce using rule 2 (funcList -> func funcList .)


state 5

    (3) func -> FUN ID . LPAREN RPAREN BEGIN statementList END
    (4) func -> FUN ID . LPAREN argList RPAREN BEGIN statementList END
    (5) func -> FUN ID . LPAREN RPAREN varList BEGIN statementList END
    (6) func -> FUN ID . LPAREN argList RPAREN varList BEGIN statementList END
    LPAREN          shift and go to state 6


state 6

    (3) func -> FUN ID LPAREN . RPAREN BEGIN statementList END
    (4) func -> FUN ID LPAREN . argList RPAREN BEGIN statementList END
    (5) func -> FUN ID LPAREN . RPAREN varList BEGIN statementList END
    (6) func -> FUN ID LPAREN . argList RPAREN varList BEGIN statementList END
    (52) argList -> . varDecl
    (53) argList -> . varDecl COMMA argList
    (58) varDecl -> . ID COLON vectorType
    (59) varDecl -> . ID COLON varType
    RPAREN          shift and go to state 8
    ID              shift and go to state 7

    argList                        shift and go to state 9
    varDecl                        shift and go to state 10

state 7

    (58) varDecl -> ID . COLON vectorType
    (59) varDecl -> ID . COLON varType
    COLON           shift and go to state 11


state 8

    (3) func -> FUN ID LPAREN RPAREN . BEGIN statementList END
    (5) func -> FUN ID LPAREN RPAREN . varList BEGIN statementList END
    (54) varList -> . func SEMICOLON
    (55) varList -> . varDecl SEMICOLON
    (56) varList -> . func SEMICOLON varList
    (57) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (4) func -> . FUN ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> . FUN ID LPAREN argList RPAREN varList BEGIN statementList END
    (58) varDecl -> . ID COLON vectorType
    (59) varDecl -> . ID COLON varType
    BEGIN           shift and go to state 12
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varList                        shift and go to state 13
    func                           shift and go to state 14
    varDecl                        shift and go to state 15

state 9

    (4) func -> FUN ID LPAREN argList . RPAREN BEGIN statementList END
    (6) func -> FUN ID LPAREN argList . RPAREN varList BEGIN statementList END
    RPAREN          shift and go to state 16


state 10

    (52) argList -> varDecl .
    (53) argList -> varDecl . COMMA argList
    RPAREN          reduce using rule 52 (argList -> varDecl .)
    COMMA           shift and go to state 17


state 11

    (58) varDecl -> ID COLON . vectorType
    (59) varDecl -> ID COLON . varType
    (62) vectorType -> . TFLOAT LBRACKET expr RBRACKET
    (63) vectorType -> . TINT LBRACKET expr RBRACKET
    (60) varType -> . TFLOAT
    (61) varType -> . TINT
    TFLOAT          shift and go to state 20
    TINT            shift and go to state 21

    vectorType                     shift and go to state 18
    varType                        shift and go to state 19

state 12

    (3) func -> FUN ID LPAREN RPAREN BEGIN . statementList END
    (7) statementList -> . statements
    (8) statementList -> . statements SEMICOLON statementList
    (9) statements -> . noStatement
    (10) statements -> . statement
    (23) noStatement -> . IF relation THEN statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    IF              shift and go to state 28
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    WHILE           shift and go to state 36

    statementList                  shift and go to state 24
    statements                     shift and go to state 25
    noStatement                    shift and go to state 26
    statement                      shift and go to state 27
    location                       shift and go to state 33

state 13

    (5) func -> FUN ID LPAREN RPAREN varList . BEGIN statementList END
    BEGIN           shift and go to state 37


state 14

    (54) varList -> func . SEMICOLON
    (56) varList -> func . SEMICOLON varList
    SEMICOLON       shift and go to state 38


state 15

    (55) varList -> varDecl . SEMICOLON
    (57) varList -> varDecl . SEMICOLON varList
    SEMICOLON       shift and go to state 39


state 16

    (4) func -> FUN ID LPAREN argList RPAREN . BEGIN statementList END
    (6) func -> FUN ID LPAREN argList RPAREN . varList BEGIN statementList END
    (54) varList -> . func SEMICOLON
    (55) varList -> . varDecl SEMICOLON
    (56) varList -> . func SEMICOLON varList
    (57) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (4) func -> . FUN ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> . FUN ID LPAREN argList RPAREN varList BEGIN statementList END
    (58) varDecl -> . ID COLON vectorType
    (59) varDecl -> . ID COLON varType
    BEGIN           shift and go to state 40
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varList                        shift and go to state 41
    func                           shift and go to state 14
    varDecl                        shift and go to state 15

state 17

    (53) argList -> varDecl COMMA . argList
    (52) argList -> . varDecl
    (53) argList -> . varDecl COMMA argList
    (58) varDecl -> . ID COLON vectorType
    (59) varDecl -> . ID COLON varType
    ID              shift and go to state 7

    varDecl                        shift and go to state 10
    argList                        shift and go to state 42

state 18

    (58) varDecl -> ID COLON vectorType .
    COMMA           reduce using rule 58 (varDecl -> ID COLON vectorType .)
    RPAREN          reduce using rule 58 (varDecl -> ID COLON vectorType .)
    SEMICOLON       reduce using rule 58 (varDecl -> ID COLON vectorType .)


state 19

    (59) varDecl -> ID COLON varType .
    COMMA           reduce using rule 59 (varDecl -> ID COLON varType .)
    RPAREN          reduce using rule 59 (varDecl -> ID COLON varType .)
    SEMICOLON       reduce using rule 59 (varDecl -> ID COLON varType .)


state 20

    (62) vectorType -> TFLOAT . LBRACKET expr RBRACKET
    (60) varType -> TFLOAT .
    LBRACKET        shift and go to state 43
    COMMA           reduce using rule 60 (varType -> TFLOAT .)
    RPAREN          reduce using rule 60 (varType -> TFLOAT .)
    SEMICOLON       reduce using rule 60 (varType -> TFLOAT .)


state 21

    (63) vectorType -> TINT . LBRACKET expr RBRACKET
    (61) varType -> TINT .
    LBRACKET        shift and go to state 44
    COMMA           reduce using rule 61 (varType -> TINT .)
    RPAREN          reduce using rule 61 (varType -> TINT .)
    SEMICOLON       reduce using rule 61 (varType -> TINT .)


state 22

    (14) statement -> ID . LPAREN RPAREN
    (15) statement -> ID . LPAREN exprList RPAREN
    (66) location -> ID . LBRACKET expr RBRACKET
    (67) location -> ID .
    LPAREN          shift and go to state 45
    LBRACKET        shift and go to state 46
    ASSIGN          reduce using rule 67 (location -> ID .)


state 23

    (11) statement -> BEGIN . statementList END
    (7) statementList -> . statements
    (8) statementList -> . statements SEMICOLON statementList
    (9) statements -> . noStatement
    (10) statements -> . statement
    (23) noStatement -> . IF relation THEN statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    IF              shift and go to state 28
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    WHILE           shift and go to state 36

    statementList                  shift and go to state 47
    statements                     shift and go to state 25
    noStatement                    shift and go to state 26
    statement                      shift and go to state 27
    location                       shift and go to state 33

state 24

    (3) func -> FUN ID LPAREN RPAREN BEGIN statementList . END
    END             shift and go to state 48


state 25

    (7) statementList -> statements .
    (8) statementList -> statements . SEMICOLON statementList
    END             reduce using rule 7 (statementList -> statements .)
    SEMICOLON       shift and go to state 49


state 26

    (9) statements -> noStatement .
    SEMICOLON       reduce using rule 9 (statements -> noStatement .)
    END             reduce using rule 9 (statements -> noStatement .)


state 27

    (10) statements -> statement .
    SEMICOLON       reduce using rule 10 (statements -> statement .)
    END             reduce using rule 10 (statements -> statement .)


state 28

    (23) noStatement -> IF . relation THEN statement
    (21) statement -> IF . relation THEN statement ELSE statement
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    LPAREN          shift and go to state 51
    NOT             shift and go to state 52
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    relation                       shift and go to state 50
    expr                           shift and go to state 53
    number                         shift and go to state 56

state 29

    (12) statement -> BREAK .
    SEMICOLON       reduce using rule 12 (statement -> BREAK .)
    END             reduce using rule 12 (statement -> BREAK .)
    ELSE            reduce using rule 12 (statement -> BREAK .)


state 30

    (13) statement -> SKIP .
    SEMICOLON       reduce using rule 13 (statement -> SKIP .)
    END             reduce using rule 13 (statement -> SKIP .)
    ELSE            reduce using rule 13 (statement -> SKIP .)


state 31

    (16) statement -> RETURN . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 62
    number                         shift and go to state 56

state 32

    (17) statement -> READ . LPAREN location RPAREN
    LPAREN          shift and go to state 64


state 33

    (20) statement -> location . ASSIGN expr
    ASSIGN          shift and go to state 65


state 34

    (18) statement -> WRITE . LPAREN expr RPAREN
    LPAREN          shift and go to state 66


state 35

    (19) statement -> PRINT . LPAREN STRING RPAREN
    LPAREN          shift and go to state 67


state 36

    (22) statement -> WHILE . relation DO statement
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    LPAREN          shift and go to state 51
    NOT             shift and go to state 52
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    relation                       shift and go to state 68
    expr                           shift and go to state 53
    number                         shift and go to state 56

state 37

    (5) func -> FUN ID LPAREN RPAREN varList BEGIN . statementList END
    (7) statementList -> . statements
    (8) statementList -> . statements SEMICOLON statementList
    (9) statements -> . noStatement
    (10) statements -> . statement
    (23) noStatement -> . IF relation THEN statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    IF              shift and go to state 28
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    WHILE           shift and go to state 36

    statementList                  shift and go to state 69
    statements                     shift and go to state 25
    noStatement                    shift and go to state 26
    statement                      shift and go to state 27
    location                       shift and go to state 33

state 38

    (54) varList -> func SEMICOLON .
    (56) varList -> func SEMICOLON . varList
    (54) varList -> . func SEMICOLON
    (55) varList -> . varDecl SEMICOLON
    (56) varList -> . func SEMICOLON varList
    (57) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (4) func -> . FUN ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> . FUN ID LPAREN argList RPAREN varList BEGIN statementList END
    (58) varDecl -> . ID COLON vectorType
    (59) varDecl -> . ID COLON varType
    BEGIN           reduce using rule 54 (varList -> func SEMICOLON .)
    FUN             shift and go to state 3
    ID              shift and go to state 7

    func                           shift and go to state 14
    varList                        shift and go to state 70
    varDecl                        shift and go to state 15

state 39

    (55) varList -> varDecl SEMICOLON .
    (57) varList -> varDecl SEMICOLON . varList
    (54) varList -> . func SEMICOLON
    (55) varList -> . varDecl SEMICOLON
    (56) varList -> . func SEMICOLON varList
    (57) varList -> . varDecl SEMICOLON varList
    (3) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (4) func -> . FUN ID LPAREN argList RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (6) func -> . FUN ID LPAREN argList RPAREN varList BEGIN statementList END
    (58) varDecl -> . ID COLON vectorType
    (59) varDecl -> . ID COLON varType
    BEGIN           reduce using rule 55 (varList -> varDecl SEMICOLON .)
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varDecl                        shift and go to state 15
    varList                        shift and go to state 71
    func                           shift and go to state 14

state 40

    (4) func -> FUN ID LPAREN argList RPAREN BEGIN . statementList END
    (7) statementList -> . statements
    (8) statementList -> . statements SEMICOLON statementList
    (9) statements -> . noStatement
    (10) statements -> . statement
    (23) noStatement -> . IF relation THEN statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    IF              shift and go to state 28
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    WHILE           shift and go to state 36

    statementList                  shift and go to state 72
    statements                     shift and go to state 25
    noStatement                    shift and go to state 26
    statement                      shift and go to state 27
    location                       shift and go to state 33

state 41

    (6) func -> FUN ID LPAREN argList RPAREN varList . BEGIN statementList END
    BEGIN           shift and go to state 73


state 42

    (53) argList -> varDecl COMMA argList .
    RPAREN          reduce using rule 53 (argList -> varDecl COMMA argList .)


state 43

    (62) vectorType -> TFLOAT LBRACKET . expr RBRACKET
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 74
    number                         shift and go to state 56

state 44

    (63) vectorType -> TINT LBRACKET . expr RBRACKET
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 75
    number                         shift and go to state 56

state 45

    (14) statement -> ID LPAREN . RPAREN
    (15) statement -> ID LPAREN . exprList RPAREN
    (36) exprList -> . expr
    (37) exprList -> . expr COMMA exprList
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    RPAREN          shift and go to state 76
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    exprList                       shift and go to state 77
    expr                           shift and go to state 78
    number                         shift and go to state 56

state 46

    (66) location -> ID LBRACKET . expr RBRACKET
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 79
    number                         shift and go to state 56

state 47

    (11) statement -> BEGIN statementList . END
    END             shift and go to state 80


state 48

    (3) func -> FUN ID LPAREN RPAREN BEGIN statementList END .
    FUN             reduce using rule 3 (func -> FUN ID LPAREN RPAREN BEGIN statementList END .)
    $end            reduce using rule 3 (func -> FUN ID LPAREN RPAREN BEGIN statementList END .)
    SEMICOLON       reduce using rule 3 (func -> FUN ID LPAREN RPAREN BEGIN statementList END .)


state 49

    (8) statementList -> statements SEMICOLON . statementList
    (7) statementList -> . statements
    (8) statementList -> . statements SEMICOLON statementList
    (9) statements -> . noStatement
    (10) statements -> . statement
    (23) noStatement -> . IF relation THEN statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    IF              shift and go to state 28
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    WHILE           shift and go to state 36

    statements                     shift and go to state 25
    statementList                  shift and go to state 81
    noStatement                    shift and go to state 26
    statement                      shift and go to state 27
    location                       shift and go to state 33

state 50

    (23) noStatement -> IF relation . THEN statement
    (21) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 82


state 51

    (24) relation -> LPAREN . relation RPAREN
    (45) expr -> LPAREN . expr RPAREN
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    LPAREN          shift and go to state 51
    NOT             shift and go to state 52
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    relation                       shift and go to state 83
    expr                           shift and go to state 84
    number                         shift and go to state 56

state 52

    (25) relation -> NOT . relation
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    LPAREN          shift and go to state 51
    NOT             shift and go to state 52
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    relation                       shift and go to state 85
    expr                           shift and go to state 53
    number                         shift and go to state 56

state 53

    (26) relation -> expr . relExpr expr
    (27) relation -> expr . relExpr relation
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    (28) relExpr -> . OR
    (29) relExpr -> . AND
    (30) relExpr -> . NEQ
    (31) relExpr -> . EQ
    (32) relExpr -> . GT
    (33) relExpr -> . GTE
    (34) relExpr -> . LT
    (35) relExpr -> . LTE
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    OR              shift and go to state 91
    AND             shift and go to state 92
    NEQ             shift and go to state 93
    EQ              shift and go to state 94
    GT              shift and go to state 95
    GTE             shift and go to state 96
    LT              shift and go to state 97
    LTE             shift and go to state 98

    relExpr                        shift and go to state 86

state 54

    (38) expr -> TFLOAT . LPAREN expr RPAREN
    LPAREN          shift and go to state 99


state 55

    (39) expr -> TINT . LPAREN expr RPAREN
    LPAREN          shift and go to state 100


state 56

    (40) expr -> number .
    DIVIDE          reduce using rule 40 (expr -> number .)
    TIMES           reduce using rule 40 (expr -> number .)
    MINUS           reduce using rule 40 (expr -> number .)
    PLUS            reduce using rule 40 (expr -> number .)
    OR              reduce using rule 40 (expr -> number .)
    AND             reduce using rule 40 (expr -> number .)
    NEQ             reduce using rule 40 (expr -> number .)
    EQ              reduce using rule 40 (expr -> number .)
    GT              reduce using rule 40 (expr -> number .)
    GTE             reduce using rule 40 (expr -> number .)
    LT              reduce using rule 40 (expr -> number .)
    LTE             reduce using rule 40 (expr -> number .)
    SEMICOLON       reduce using rule 40 (expr -> number .)
    END             reduce using rule 40 (expr -> number .)
    ELSE            reduce using rule 40 (expr -> number .)
    RBRACKET        reduce using rule 40 (expr -> number .)
    COMMA           reduce using rule 40 (expr -> number .)
    RPAREN          reduce using rule 40 (expr -> number .)
    THEN            reduce using rule 40 (expr -> number .)
    DO              reduce using rule 40 (expr -> number .)


state 57

    (41) expr -> ID . LBRACKET expr RBRACKET
    (42) expr -> ID .
    (43) expr -> ID . LPAREN RPAREN
    (44) expr -> ID . LPAREN exprList RPAREN
    LBRACKET        shift and go to state 101
    DIVIDE          reduce using rule 42 (expr -> ID .)
    TIMES           reduce using rule 42 (expr -> ID .)
    MINUS           reduce using rule 42 (expr -> ID .)
    PLUS            reduce using rule 42 (expr -> ID .)
    OR              reduce using rule 42 (expr -> ID .)
    AND             reduce using rule 42 (expr -> ID .)
    NEQ             reduce using rule 42 (expr -> ID .)
    EQ              reduce using rule 42 (expr -> ID .)
    GT              reduce using rule 42 (expr -> ID .)
    GTE             reduce using rule 42 (expr -> ID .)
    LT              reduce using rule 42 (expr -> ID .)
    LTE             reduce using rule 42 (expr -> ID .)
    SEMICOLON       reduce using rule 42 (expr -> ID .)
    END             reduce using rule 42 (expr -> ID .)
    ELSE            reduce using rule 42 (expr -> ID .)
    RBRACKET        reduce using rule 42 (expr -> ID .)
    COMMA           reduce using rule 42 (expr -> ID .)
    RPAREN          reduce using rule 42 (expr -> ID .)
    THEN            reduce using rule 42 (expr -> ID .)
    DO              reduce using rule 42 (expr -> ID .)
    LPAREN          shift and go to state 102


state 58

    (46) expr -> PLUS . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 103
    number                         shift and go to state 56

state 59

    (47) expr -> MINUS . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 104
    number                         shift and go to state 56

state 60

    (64) number -> FLOAT .
    DIVIDE          reduce using rule 64 (number -> FLOAT .)
    TIMES           reduce using rule 64 (number -> FLOAT .)
    MINUS           reduce using rule 64 (number -> FLOAT .)
    PLUS            reduce using rule 64 (number -> FLOAT .)
    OR              reduce using rule 64 (number -> FLOAT .)
    AND             reduce using rule 64 (number -> FLOAT .)
    NEQ             reduce using rule 64 (number -> FLOAT .)
    EQ              reduce using rule 64 (number -> FLOAT .)
    GT              reduce using rule 64 (number -> FLOAT .)
    GTE             reduce using rule 64 (number -> FLOAT .)
    LT              reduce using rule 64 (number -> FLOAT .)
    LTE             reduce using rule 64 (number -> FLOAT .)
    SEMICOLON       reduce using rule 64 (number -> FLOAT .)
    END             reduce using rule 64 (number -> FLOAT .)
    ELSE            reduce using rule 64 (number -> FLOAT .)
    RBRACKET        reduce using rule 64 (number -> FLOAT .)
    COMMA           reduce using rule 64 (number -> FLOAT .)
    RPAREN          reduce using rule 64 (number -> FLOAT .)
    THEN            reduce using rule 64 (number -> FLOAT .)
    DO              reduce using rule 64 (number -> FLOAT .)


state 61

    (65) number -> INT .
    DIVIDE          reduce using rule 65 (number -> INT .)
    TIMES           reduce using rule 65 (number -> INT .)
    MINUS           reduce using rule 65 (number -> INT .)
    PLUS            reduce using rule 65 (number -> INT .)
    OR              reduce using rule 65 (number -> INT .)
    AND             reduce using rule 65 (number -> INT .)
    NEQ             reduce using rule 65 (number -> INT .)
    EQ              reduce using rule 65 (number -> INT .)
    GT              reduce using rule 65 (number -> INT .)
    GTE             reduce using rule 65 (number -> INT .)
    LT              reduce using rule 65 (number -> INT .)
    LTE             reduce using rule 65 (number -> INT .)
    SEMICOLON       reduce using rule 65 (number -> INT .)
    END             reduce using rule 65 (number -> INT .)
    ELSE            reduce using rule 65 (number -> INT .)
    RBRACKET        reduce using rule 65 (number -> INT .)
    COMMA           reduce using rule 65 (number -> INT .)
    RPAREN          reduce using rule 65 (number -> INT .)
    THEN            reduce using rule 65 (number -> INT .)
    DO              reduce using rule 65 (number -> INT .)


state 62

    (16) statement -> RETURN expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 16 (statement -> RETURN expr .)
    END             reduce using rule 16 (statement -> RETURN expr .)
    ELSE            reduce using rule 16 (statement -> RETURN expr .)
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 63

    (45) expr -> LPAREN . expr RPAREN
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 105
    number                         shift and go to state 56

state 64

    (17) statement -> READ LPAREN . location RPAREN
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    ID              shift and go to state 107

    location                       shift and go to state 106

state 65

    (20) statement -> location ASSIGN . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 108
    number                         shift and go to state 56

state 66

    (18) statement -> WRITE LPAREN . expr RPAREN
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 109
    number                         shift and go to state 56

state 67

    (19) statement -> PRINT LPAREN . STRING RPAREN
    STRING          shift and go to state 110


state 68

    (22) statement -> WHILE relation . DO statement
    DO              shift and go to state 111


state 69

    (5) func -> FUN ID LPAREN RPAREN varList BEGIN statementList . END
    END             shift and go to state 112


state 70

    (56) varList -> func SEMICOLON varList .
    BEGIN           reduce using rule 56 (varList -> func SEMICOLON varList .)


state 71

    (57) varList -> varDecl SEMICOLON varList .
    BEGIN           reduce using rule 57 (varList -> varDecl SEMICOLON varList .)


state 72

    (4) func -> FUN ID LPAREN argList RPAREN BEGIN statementList . END
    END             shift and go to state 113


state 73

    (6) func -> FUN ID LPAREN argList RPAREN varList BEGIN . statementList END
    (7) statementList -> . statements
    (8) statementList -> . statements SEMICOLON statementList
    (9) statements -> . noStatement
    (10) statements -> . statement
    (23) noStatement -> . IF relation THEN statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    IF              shift and go to state 28
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    WHILE           shift and go to state 36

    statementList                  shift and go to state 114
    statements                     shift and go to state 25
    noStatement                    shift and go to state 26
    statement                      shift and go to state 27
    location                       shift and go to state 33

state 74

    (62) vectorType -> TFLOAT LBRACKET expr . RBRACKET
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 115
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 75

    (63) vectorType -> TINT LBRACKET expr . RBRACKET
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 116
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 76

    (14) statement -> ID LPAREN RPAREN .
    SEMICOLON       reduce using rule 14 (statement -> ID LPAREN RPAREN .)
    END             reduce using rule 14 (statement -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 14 (statement -> ID LPAREN RPAREN .)


state 77

    (15) statement -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 117


state 78

    (36) exprList -> expr .
    (37) exprList -> expr . COMMA exprList
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RPAREN          reduce using rule 36 (exprList -> expr .)
    COMMA           shift and go to state 118
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 79

    (66) location -> ID LBRACKET expr . RBRACKET
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 119
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 80

    (11) statement -> BEGIN statementList END .
    SEMICOLON       reduce using rule 11 (statement -> BEGIN statementList END .)
    END             reduce using rule 11 (statement -> BEGIN statementList END .)
    ELSE            reduce using rule 11 (statement -> BEGIN statementList END .)


state 81

    (8) statementList -> statements SEMICOLON statementList .
    END             reduce using rule 8 (statementList -> statements SEMICOLON statementList .)


state 82

    (23) noStatement -> IF relation THEN . statement
    (21) statement -> IF relation THEN . statement ELSE statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    IF              shift and go to state 120
    WHILE           shift and go to state 36

    statement                      shift and go to state 121
    location                       shift and go to state 33

state 83

    (24) relation -> LPAREN relation . RPAREN
    RPAREN          shift and go to state 122


state 84

    (45) expr -> LPAREN expr . RPAREN
    (26) relation -> expr . relExpr expr
    (27) relation -> expr . relExpr relation
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    (28) relExpr -> . OR
    (29) relExpr -> . AND
    (30) relExpr -> . NEQ
    (31) relExpr -> . EQ
    (32) relExpr -> . GT
    (33) relExpr -> . GTE
    (34) relExpr -> . LT
    (35) relExpr -> . LTE
    RPAREN          shift and go to state 123
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    OR              shift and go to state 91
    AND             shift and go to state 92
    NEQ             shift and go to state 93
    EQ              shift and go to state 94
    GT              shift and go to state 95
    GTE             shift and go to state 96
    LT              shift and go to state 97
    LTE             shift and go to state 98

    relExpr                        shift and go to state 86

state 85

    (25) relation -> NOT relation .
    THEN            reduce using rule 25 (relation -> NOT relation .)
    DO              reduce using rule 25 (relation -> NOT relation .)
    RPAREN          reduce using rule 25 (relation -> NOT relation .)


state 86

    (26) relation -> expr relExpr . expr
    (27) relation -> expr relExpr . relation
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 126
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    NOT             shift and go to state 52
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 124
    relation                       shift and go to state 125
    number                         shift and go to state 56

state 87

    (48) expr -> expr DIVIDE . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 127
    number                         shift and go to state 56

state 88

    (49) expr -> expr TIMES . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 128
    number                         shift and go to state 56

state 89

    (50) expr -> expr MINUS . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 129
    number                         shift and go to state 56

state 90

    (51) expr -> expr PLUS . expr
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 130
    number                         shift and go to state 56

state 91

    (28) relExpr -> OR .
    TFLOAT          reduce using rule 28 (relExpr -> OR .)
    TINT            reduce using rule 28 (relExpr -> OR .)
    ID              reduce using rule 28 (relExpr -> OR .)
    LPAREN          reduce using rule 28 (relExpr -> OR .)
    PLUS            reduce using rule 28 (relExpr -> OR .)
    MINUS           reduce using rule 28 (relExpr -> OR .)
    NOT             reduce using rule 28 (relExpr -> OR .)
    FLOAT           reduce using rule 28 (relExpr -> OR .)
    INT             reduce using rule 28 (relExpr -> OR .)


state 92

    (29) relExpr -> AND .
    TFLOAT          reduce using rule 29 (relExpr -> AND .)
    TINT            reduce using rule 29 (relExpr -> AND .)
    ID              reduce using rule 29 (relExpr -> AND .)
    LPAREN          reduce using rule 29 (relExpr -> AND .)
    PLUS            reduce using rule 29 (relExpr -> AND .)
    MINUS           reduce using rule 29 (relExpr -> AND .)
    NOT             reduce using rule 29 (relExpr -> AND .)
    FLOAT           reduce using rule 29 (relExpr -> AND .)
    INT             reduce using rule 29 (relExpr -> AND .)


state 93

    (30) relExpr -> NEQ .
    TFLOAT          reduce using rule 30 (relExpr -> NEQ .)
    TINT            reduce using rule 30 (relExpr -> NEQ .)
    ID              reduce using rule 30 (relExpr -> NEQ .)
    LPAREN          reduce using rule 30 (relExpr -> NEQ .)
    PLUS            reduce using rule 30 (relExpr -> NEQ .)
    MINUS           reduce using rule 30 (relExpr -> NEQ .)
    NOT             reduce using rule 30 (relExpr -> NEQ .)
    FLOAT           reduce using rule 30 (relExpr -> NEQ .)
    INT             reduce using rule 30 (relExpr -> NEQ .)


state 94

    (31) relExpr -> EQ .
    TFLOAT          reduce using rule 31 (relExpr -> EQ .)
    TINT            reduce using rule 31 (relExpr -> EQ .)
    ID              reduce using rule 31 (relExpr -> EQ .)
    LPAREN          reduce using rule 31 (relExpr -> EQ .)
    PLUS            reduce using rule 31 (relExpr -> EQ .)
    MINUS           reduce using rule 31 (relExpr -> EQ .)
    NOT             reduce using rule 31 (relExpr -> EQ .)
    FLOAT           reduce using rule 31 (relExpr -> EQ .)
    INT             reduce using rule 31 (relExpr -> EQ .)


state 95

    (32) relExpr -> GT .
    TFLOAT          reduce using rule 32 (relExpr -> GT .)
    TINT            reduce using rule 32 (relExpr -> GT .)
    ID              reduce using rule 32 (relExpr -> GT .)
    LPAREN          reduce using rule 32 (relExpr -> GT .)
    PLUS            reduce using rule 32 (relExpr -> GT .)
    MINUS           reduce using rule 32 (relExpr -> GT .)
    NOT             reduce using rule 32 (relExpr -> GT .)
    FLOAT           reduce using rule 32 (relExpr -> GT .)
    INT             reduce using rule 32 (relExpr -> GT .)


state 96

    (33) relExpr -> GTE .
    TFLOAT          reduce using rule 33 (relExpr -> GTE .)
    TINT            reduce using rule 33 (relExpr -> GTE .)
    ID              reduce using rule 33 (relExpr -> GTE .)
    LPAREN          reduce using rule 33 (relExpr -> GTE .)
    PLUS            reduce using rule 33 (relExpr -> GTE .)
    MINUS           reduce using rule 33 (relExpr -> GTE .)
    NOT             reduce using rule 33 (relExpr -> GTE .)
    FLOAT           reduce using rule 33 (relExpr -> GTE .)
    INT             reduce using rule 33 (relExpr -> GTE .)


state 97

    (34) relExpr -> LT .
    TFLOAT          reduce using rule 34 (relExpr -> LT .)
    TINT            reduce using rule 34 (relExpr -> LT .)
    ID              reduce using rule 34 (relExpr -> LT .)
    LPAREN          reduce using rule 34 (relExpr -> LT .)
    PLUS            reduce using rule 34 (relExpr -> LT .)
    MINUS           reduce using rule 34 (relExpr -> LT .)
    NOT             reduce using rule 34 (relExpr -> LT .)
    FLOAT           reduce using rule 34 (relExpr -> LT .)
    INT             reduce using rule 34 (relExpr -> LT .)


state 98

    (35) relExpr -> LTE .
    TFLOAT          reduce using rule 35 (relExpr -> LTE .)
    TINT            reduce using rule 35 (relExpr -> LTE .)
    ID              reduce using rule 35 (relExpr -> LTE .)
    LPAREN          reduce using rule 35 (relExpr -> LTE .)
    PLUS            reduce using rule 35 (relExpr -> LTE .)
    MINUS           reduce using rule 35 (relExpr -> LTE .)
    NOT             reduce using rule 35 (relExpr -> LTE .)
    FLOAT           reduce using rule 35 (relExpr -> LTE .)
    INT             reduce using rule 35 (relExpr -> LTE .)


state 99

    (38) expr -> TFLOAT LPAREN . expr RPAREN
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 131
    number                         shift and go to state 56

state 100

    (39) expr -> TINT LPAREN . expr RPAREN
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 132
    number                         shift and go to state 56

state 101

    (41) expr -> ID LBRACKET . expr RBRACKET
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 133
    number                         shift and go to state 56

state 102

    (43) expr -> ID LPAREN . RPAREN
    (44) expr -> ID LPAREN . exprList RPAREN
    (36) exprList -> . expr
    (37) exprList -> . expr COMMA exprList
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    RPAREN          shift and go to state 134
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    exprList                       shift and go to state 135
    expr                           shift and go to state 78
    number                         shift and go to state 56

state 103

    (46) expr -> PLUS expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 46 (expr -> PLUS expr .)
    TIMES           reduce using rule 46 (expr -> PLUS expr .)
    MINUS           reduce using rule 46 (expr -> PLUS expr .)
    PLUS            reduce using rule 46 (expr -> PLUS expr .)
    OR              reduce using rule 46 (expr -> PLUS expr .)
    AND             reduce using rule 46 (expr -> PLUS expr .)
    NEQ             reduce using rule 46 (expr -> PLUS expr .)
    EQ              reduce using rule 46 (expr -> PLUS expr .)
    GT              reduce using rule 46 (expr -> PLUS expr .)
    GTE             reduce using rule 46 (expr -> PLUS expr .)
    LT              reduce using rule 46 (expr -> PLUS expr .)
    LTE             reduce using rule 46 (expr -> PLUS expr .)
    SEMICOLON       reduce using rule 46 (expr -> PLUS expr .)
    END             reduce using rule 46 (expr -> PLUS expr .)
    ELSE            reduce using rule 46 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 46 (expr -> PLUS expr .)
    COMMA           reduce using rule 46 (expr -> PLUS expr .)
    RPAREN          reduce using rule 46 (expr -> PLUS expr .)
    THEN            reduce using rule 46 (expr -> PLUS expr .)
    DO              reduce using rule 46 (expr -> PLUS expr .)


state 104

    (47) expr -> MINUS expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 47 (expr -> MINUS expr .)
    TIMES           reduce using rule 47 (expr -> MINUS expr .)
    MINUS           reduce using rule 47 (expr -> MINUS expr .)
    PLUS            reduce using rule 47 (expr -> MINUS expr .)
    OR              reduce using rule 47 (expr -> MINUS expr .)
    AND             reduce using rule 47 (expr -> MINUS expr .)
    NEQ             reduce using rule 47 (expr -> MINUS expr .)
    EQ              reduce using rule 47 (expr -> MINUS expr .)
    GT              reduce using rule 47 (expr -> MINUS expr .)
    GTE             reduce using rule 47 (expr -> MINUS expr .)
    LT              reduce using rule 47 (expr -> MINUS expr .)
    LTE             reduce using rule 47 (expr -> MINUS expr .)
    SEMICOLON       reduce using rule 47 (expr -> MINUS expr .)
    END             reduce using rule 47 (expr -> MINUS expr .)
    ELSE            reduce using rule 47 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 47 (expr -> MINUS expr .)
    COMMA           reduce using rule 47 (expr -> MINUS expr .)
    RPAREN          reduce using rule 47 (expr -> MINUS expr .)
    THEN            reduce using rule 47 (expr -> MINUS expr .)
    DO              reduce using rule 47 (expr -> MINUS expr .)


state 105

    (45) expr -> LPAREN expr . RPAREN
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RPAREN          shift and go to state 123
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 106

    (17) statement -> READ LPAREN location . RPAREN
    RPAREN          shift and go to state 136


state 107

    (66) location -> ID . LBRACKET expr RBRACKET
    (67) location -> ID .
    LBRACKET        shift and go to state 46
    RPAREN          reduce using rule 67 (location -> ID .)


state 108

    (20) statement -> location ASSIGN expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 20 (statement -> location ASSIGN expr .)
    END             reduce using rule 20 (statement -> location ASSIGN expr .)
    ELSE            reduce using rule 20 (statement -> location ASSIGN expr .)
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 109

    (18) statement -> WRITE LPAREN expr . RPAREN
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RPAREN          shift and go to state 137
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 110

    (19) statement -> PRINT LPAREN STRING . RPAREN
    RPAREN          shift and go to state 138


state 111

    (22) statement -> WHILE relation DO . statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    IF              shift and go to state 120
    WHILE           shift and go to state 36

    statement                      shift and go to state 139
    location                       shift and go to state 33

state 112

    (5) func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .
    FUN             reduce using rule 5 (func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .)
    $end            reduce using rule 5 (func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .)
    SEMICOLON       reduce using rule 5 (func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .)


state 113

    (4) func -> FUN ID LPAREN argList RPAREN BEGIN statementList END .
    FUN             reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN BEGIN statementList END .)
    $end            reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN BEGIN statementList END .)
    SEMICOLON       reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN BEGIN statementList END .)


state 114

    (6) func -> FUN ID LPAREN argList RPAREN varList BEGIN statementList . END
    END             shift and go to state 140


state 115

    (62) vectorType -> TFLOAT LBRACKET expr RBRACKET .
    COMMA           reduce using rule 62 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 62 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 62 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)


state 116

    (63) vectorType -> TINT LBRACKET expr RBRACKET .
    COMMA           reduce using rule 63 (vectorType -> TINT LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 63 (vectorType -> TINT LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 63 (vectorType -> TINT LBRACKET expr RBRACKET .)


state 117

    (15) statement -> ID LPAREN exprList RPAREN .
    SEMICOLON       reduce using rule 15 (statement -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 15 (statement -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 15 (statement -> ID LPAREN exprList RPAREN .)


state 118

    (37) exprList -> expr COMMA . exprList
    (36) exprList -> . expr
    (37) exprList -> . expr COMMA exprList
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 63
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 78
    exprList                       shift and go to state 141
    number                         shift and go to state 56

state 119

    (66) location -> ID LBRACKET expr RBRACKET .
    ASSIGN          reduce using rule 66 (location -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 66 (location -> ID LBRACKET expr RBRACKET .)


state 120

    (21) statement -> IF . relation THEN statement ELSE statement
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (64) number -> . FLOAT
    (65) number -> . INT
    LPAREN          shift and go to state 51
    NOT             shift and go to state 52
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    relation                       shift and go to state 142
    expr                           shift and go to state 53
    number                         shift and go to state 56

state 121

    (23) noStatement -> IF relation THEN statement .
    (21) statement -> IF relation THEN statement . ELSE statement
    SEMICOLON       reduce using rule 23 (noStatement -> IF relation THEN statement .)
    END             reduce using rule 23 (noStatement -> IF relation THEN statement .)
    ELSE            shift and go to state 143


state 122

    (24) relation -> LPAREN relation RPAREN .
    THEN            reduce using rule 24 (relation -> LPAREN relation RPAREN .)
    DO              reduce using rule 24 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 24 (relation -> LPAREN relation RPAREN .)


state 123

    (45) expr -> LPAREN expr RPAREN .
    DIVIDE          reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 45 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 45 (expr -> LPAREN expr RPAREN .)


state 124

    (26) relation -> expr relExpr expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    (26) relation -> expr . relExpr expr
    (27) relation -> expr . relExpr relation
    (28) relExpr -> . OR
    (29) relExpr -> . AND
    (30) relExpr -> . NEQ
    (31) relExpr -> . EQ
    (32) relExpr -> . GT
    (33) relExpr -> . GTE
    (34) relExpr -> . LT
    (35) relExpr -> . LTE
    THEN            reduce using rule 26 (relation -> expr relExpr expr .)
    DO              reduce using rule 26 (relation -> expr relExpr expr .)
    RPAREN          reduce using rule 26 (relation -> expr relExpr expr .)
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    OR              shift and go to state 91
    AND             shift and go to state 92
    NEQ             shift and go to state 93
    EQ              shift and go to state 94
    GT              shift and go to state 95
    GTE             shift and go to state 96
    LT              shift and go to state 97
    LTE             shift and go to state 98

    relExpr                        shift and go to state 86

state 125

    (27) relation -> expr relExpr relation .
    THEN            reduce using rule 27 (relation -> expr relExpr relation .)
    DO              reduce using rule 27 (relation -> expr relExpr relation .)
    RPAREN          reduce using rule 27 (relation -> expr relExpr relation .)


state 126

    (45) expr -> LPAREN . expr RPAREN
    (24) relation -> LPAREN . relation RPAREN
    (38) expr -> . TFLOAT LPAREN expr RPAREN
    (39) expr -> . TINT LPAREN expr RPAREN
    (40) expr -> . number
    (41) expr -> . ID LBRACKET expr RBRACKET
    (42) expr -> . ID
    (43) expr -> . ID LPAREN RPAREN
    (44) expr -> . ID LPAREN exprList RPAREN
    (45) expr -> . LPAREN expr RPAREN
    (46) expr -> . PLUS expr
    (47) expr -> . MINUS expr
    (48) expr -> . expr DIVIDE expr
    (49) expr -> . expr TIMES expr
    (50) expr -> . expr MINUS expr
    (51) expr -> . expr PLUS expr
    (24) relation -> . LPAREN relation RPAREN
    (25) relation -> . NOT relation
    (26) relation -> . expr relExpr expr
    (27) relation -> . expr relExpr relation
    (64) number -> . FLOAT
    (65) number -> . INT
    TFLOAT          shift and go to state 54
    TINT            shift and go to state 55
    ID              shift and go to state 57
    LPAREN          shift and go to state 126
    PLUS            shift and go to state 58
    MINUS           shift and go to state 59
    NOT             shift and go to state 52
    FLOAT           shift and go to state 60
    INT             shift and go to state 61

    expr                           shift and go to state 144
    relation                       shift and go to state 83
    number                         shift and go to state 56

state 127

    (48) expr -> expr DIVIDE expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 48 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 48 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 48 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 48 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 48 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 48 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 48 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 48 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 48 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 48 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 48 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 48 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 48 (expr -> expr DIVIDE expr .)
    END             reduce using rule 48 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 48 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 48 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 48 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 48 (expr -> expr DIVIDE expr .)
    THEN            reduce using rule 48 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 48 (expr -> expr DIVIDE expr .)


state 128

    (49) expr -> expr TIMES expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 49 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 49 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 49 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 49 (expr -> expr TIMES expr .)
    OR              reduce using rule 49 (expr -> expr TIMES expr .)
    AND             reduce using rule 49 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 49 (expr -> expr TIMES expr .)
    EQ              reduce using rule 49 (expr -> expr TIMES expr .)
    GT              reduce using rule 49 (expr -> expr TIMES expr .)
    GTE             reduce using rule 49 (expr -> expr TIMES expr .)
    LT              reduce using rule 49 (expr -> expr TIMES expr .)
    LTE             reduce using rule 49 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 49 (expr -> expr TIMES expr .)
    END             reduce using rule 49 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 49 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 49 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 49 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 49 (expr -> expr TIMES expr .)
    THEN            reduce using rule 49 (expr -> expr TIMES expr .)
    DO              reduce using rule 49 (expr -> expr TIMES expr .)


state 129

    (50) expr -> expr MINUS expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    MINUS           reduce using rule 50 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 50 (expr -> expr MINUS expr .)
    OR              reduce using rule 50 (expr -> expr MINUS expr .)
    AND             reduce using rule 50 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 50 (expr -> expr MINUS expr .)
    EQ              reduce using rule 50 (expr -> expr MINUS expr .)
    GT              reduce using rule 50 (expr -> expr MINUS expr .)
    GTE             reduce using rule 50 (expr -> expr MINUS expr .)
    LT              reduce using rule 50 (expr -> expr MINUS expr .)
    LTE             reduce using rule 50 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 50 (expr -> expr MINUS expr .)
    END             reduce using rule 50 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 50 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 50 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 50 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 50 (expr -> expr MINUS expr .)
    THEN            reduce using rule 50 (expr -> expr MINUS expr .)
    DO              reduce using rule 50 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88


state 130

    (51) expr -> expr PLUS expr .
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    MINUS           reduce using rule 51 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 51 (expr -> expr PLUS expr .)
    OR              reduce using rule 51 (expr -> expr PLUS expr .)
    AND             reduce using rule 51 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 51 (expr -> expr PLUS expr .)
    EQ              reduce using rule 51 (expr -> expr PLUS expr .)
    GT              reduce using rule 51 (expr -> expr PLUS expr .)
    GTE             reduce using rule 51 (expr -> expr PLUS expr .)
    LT              reduce using rule 51 (expr -> expr PLUS expr .)
    LTE             reduce using rule 51 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 51 (expr -> expr PLUS expr .)
    END             reduce using rule 51 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 51 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 51 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 51 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 51 (expr -> expr PLUS expr .)
    THEN            reduce using rule 51 (expr -> expr PLUS expr .)
    DO              reduce using rule 51 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88


state 131

    (38) expr -> TFLOAT LPAREN expr . RPAREN
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RPAREN          shift and go to state 145
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 132

    (39) expr -> TINT LPAREN expr . RPAREN
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RPAREN          shift and go to state 146
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 133

    (41) expr -> ID LBRACKET expr . RBRACKET
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 147
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90


state 134

    (43) expr -> ID LPAREN RPAREN .
    DIVIDE          reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    OR              reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    AND             reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    EQ              reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    GT              reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    GTE             reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    LT              reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    LTE             reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    END             reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    THEN            reduce using rule 43 (expr -> ID LPAREN RPAREN .)
    DO              reduce using rule 43 (expr -> ID LPAREN RPAREN .)


state 135

    (44) expr -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 148


state 136

    (17) statement -> READ LPAREN location RPAREN .
    SEMICOLON       reduce using rule 17 (statement -> READ LPAREN location RPAREN .)
    END             reduce using rule 17 (statement -> READ LPAREN location RPAREN .)
    ELSE            reduce using rule 17 (statement -> READ LPAREN location RPAREN .)


state 137

    (18) statement -> WRITE LPAREN expr RPAREN .
    SEMICOLON       reduce using rule 18 (statement -> WRITE LPAREN expr RPAREN .)
    END             reduce using rule 18 (statement -> WRITE LPAREN expr RPAREN .)
    ELSE            reduce using rule 18 (statement -> WRITE LPAREN expr RPAREN .)


state 138

    (19) statement -> PRINT LPAREN STRING RPAREN .
    SEMICOLON       reduce using rule 19 (statement -> PRINT LPAREN STRING RPAREN .)
    END             reduce using rule 19 (statement -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 19 (statement -> PRINT LPAREN STRING RPAREN .)


state 139

    (22) statement -> WHILE relation DO statement .
    SEMICOLON       reduce using rule 22 (statement -> WHILE relation DO statement .)
    END             reduce using rule 22 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 22 (statement -> WHILE relation DO statement .)


state 140

    (6) func -> FUN ID LPAREN argList RPAREN varList BEGIN statementList END .
    FUN             reduce using rule 6 (func -> FUN ID LPAREN argList RPAREN varList BEGIN statementList END .)
    $end            reduce using rule 6 (func -> FUN ID LPAREN argList RPAREN varList BEGIN statementList END .)
    SEMICOLON       reduce using rule 6 (func -> FUN ID LPAREN argList RPAREN varList BEGIN statementList END .)


state 141

    (37) exprList -> expr COMMA exprList .
    RPAREN          reduce using rule 37 (exprList -> expr COMMA exprList .)


state 142

    (21) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 149


state 143

    (21) statement -> IF relation THEN statement ELSE . statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    IF              shift and go to state 120
    WHILE           shift and go to state 36

    statement                      shift and go to state 150
    location                       shift and go to state 33

state 144

    (45) expr -> LPAREN expr . RPAREN
    (48) expr -> expr . DIVIDE expr
    (49) expr -> expr . TIMES expr
    (50) expr -> expr . MINUS expr
    (51) expr -> expr . PLUS expr
    (26) relation -> expr . relExpr expr
    (27) relation -> expr . relExpr relation
    (28) relExpr -> . OR
    (29) relExpr -> . AND
    (30) relExpr -> . NEQ
    (31) relExpr -> . EQ
    (32) relExpr -> . GT
    (33) relExpr -> . GTE
    (34) relExpr -> . LT
    (35) relExpr -> . LTE
    RPAREN          shift and go to state 123
    DIVIDE          shift and go to state 87
    TIMES           shift and go to state 88
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90
    OR              shift and go to state 91
    AND             shift and go to state 92
    NEQ             shift and go to state 93
    EQ              shift and go to state 94
    GT              shift and go to state 95
    GTE             shift and go to state 96
    LT              shift and go to state 97
    LTE             shift and go to state 98

    relExpr                        shift and go to state 86

state 145

    (38) expr -> TFLOAT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    TIMES           reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    MINUS           reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    PLUS            reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    OR              reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    AND             reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    NEQ             reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    EQ              reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    GT              reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    GTE             reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    LT              reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    LTE             reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    END             reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    ELSE            reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    COMMA           reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    THEN            reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)
    DO              reduce using rule 38 (expr -> TFLOAT LPAREN expr RPAREN .)


state 146

    (39) expr -> TINT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    TIMES           reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    MINUS           reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    PLUS            reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    OR              reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    AND             reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    NEQ             reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    EQ              reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    GT              reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    GTE             reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    LT              reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    LTE             reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    END             reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    ELSE            reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    THEN            reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)
    DO              reduce using rule 39 (expr -> TINT LPAREN expr RPAREN .)


state 147

    (41) expr -> ID LBRACKET expr RBRACKET .
    DIVIDE          reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    OR              reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    AND             reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    NEQ             reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    EQ              reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    GT              reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    GTE             reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    LT              reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    LTE             reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    END             reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    ELSE            reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    THEN            reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)
    DO              reduce using rule 41 (expr -> ID LBRACKET expr RBRACKET .)


state 148

    (44) expr -> ID LPAREN exprList RPAREN .
    DIVIDE          reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    TIMES           reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    MINUS           reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    PLUS            reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    OR              reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    AND             reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    NEQ             reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    EQ              reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    GT              reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    GTE             reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    LT              reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    LTE             reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    SEMICOLON       reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    RBRACKET        reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    COMMA           reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    RPAREN          reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    THEN            reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)
    DO              reduce using rule 44 (expr -> ID LPAREN exprList RPAREN .)


state 149

    (21) statement -> IF relation THEN . statement ELSE statement
    (11) statement -> . BEGIN statementList END
    (12) statement -> . BREAK
    (13) statement -> . SKIP
    (14) statement -> . ID LPAREN RPAREN
    (15) statement -> . ID LPAREN exprList RPAREN
    (16) statement -> . RETURN expr
    (17) statement -> . READ LPAREN location RPAREN
    (18) statement -> . WRITE LPAREN expr RPAREN
    (19) statement -> . PRINT LPAREN STRING RPAREN
    (20) statement -> . location ASSIGN expr
    (21) statement -> . IF relation THEN statement ELSE statement
    (22) statement -> . WHILE relation DO statement
    (66) location -> . ID LBRACKET expr RBRACKET
    (67) location -> . ID
    BEGIN           shift and go to state 23
    BREAK           shift and go to state 29
    SKIP            shift and go to state 30
    ID              shift and go to state 22
    RETURN          shift and go to state 31
    READ            shift and go to state 32
    WRITE           shift and go to state 34
    PRINT           shift and go to state 35
    IF              shift and go to state 120
    WHILE           shift and go to state 36

    statement                      shift and go to state 151
    location                       shift and go to state 33

state 150

    (21) statement -> IF relation THEN statement ELSE statement .
    SEMICOLON       reduce using rule 21 (statement -> IF relation THEN statement ELSE statement .)
    END             reduce using rule 21 (statement -> IF relation THEN statement ELSE statement .)
    ELSE            reduce using rule 21 (statement -> IF relation THEN statement ELSE statement .)


state 151

    (21) statement -> IF relation THEN statement . ELSE statement
    ELSE            shift and go to state 143
