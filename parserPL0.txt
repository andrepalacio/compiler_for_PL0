Grammar:

Rule 0     S' -> program
Rule 1     program -> funcList
Rule 2     funcList -> func
Rule 3     funcList -> func funcList
Rule 4     func -> FUN ID LPAREN RPAREN BEGIN statementList END
Rule 5     func -> FUN ID LPAREN paramList RPAREN BEGIN statementList END
Rule 6     func -> FUN ID LPAREN RPAREN varList BEGIN statementList END
Rule 7     func -> FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
Rule 8     statementList -> statements
Rule 9     statementList -> statements SEMICOLON statementList
Rule 10    statements -> noStatement
Rule 11    statements -> statement
Rule 12    statement -> BEGIN statementList END
Rule 13    statement -> BREAK
Rule 14    statement -> SKIP
Rule 15    statement -> ID LPAREN RPAREN
Rule 16    statement -> ID LPAREN exprList RPAREN
Rule 17    statement -> RETURN expr
Rule 18    statement -> READ LPAREN location RPAREN
Rule 19    statement -> WRITE LPAREN expr RPAREN
Rule 20    statement -> PRINT LPAREN STRING RPAREN
Rule 21    statement -> location ASSIGN expr
Rule 22    statement -> IF relation THEN statement ELSE statement
Rule 23    statement -> WHILE relation DO statement
Rule 24    noStatement -> IF relation THEN statement
Rule 25    relation -> LPAREN relation RPAREN
Rule 26    relation -> NOT relation  [precedence=right, level=6]
Rule 27    relation -> relExpr
Rule 28    relation -> relExpr OR relation  [precedence=left, level=1]
Rule 29    relation -> relExpr AND relation  [precedence=left, level=1]
Rule 30    relExpr -> expr relCon expr
Rule 31    relCon -> NEQ  [precedence=left, level=2]
Rule 32    relCon -> EQ  [precedence=left, level=2]
Rule 33    relCon -> GT  [precedence=left, level=3]
Rule 34    relCon -> GTE  [precedence=left, level=3]
Rule 35    relCon -> LT  [precedence=left, level=3]
Rule 36    relCon -> LTE  [precedence=left, level=3]
Rule 37    exprList -> expr
Rule 38    exprList -> expr COMMA exprList
Rule 39    expr -> TFLOAT LPAREN expr RPAREN
Rule 40    expr -> TINT LPAREN expr RPAREN
Rule 41    expr -> number
Rule 42    expr -> ID LBRACKET expr RBRACKET
Rule 43    expr -> ID
Rule 44    expr -> ID LPAREN RPAREN
Rule 45    expr -> ID LPAREN exprList RPAREN
Rule 46    expr -> LPAREN expr RPAREN
Rule 47    expr -> PLUS expr  [precedence=right, level=6]
Rule 48    expr -> MINUS expr  [precedence=right, level=6]
Rule 49    expr -> expr DIVIDE expr  [precedence=left, level=5]
Rule 50    expr -> expr TIMES expr  [precedence=left, level=5]
Rule 51    expr -> expr MINUS expr  [precedence=left, level=4]
Rule 52    expr -> expr PLUS expr  [precedence=left, level=4]
Rule 53    paramList -> varDecl
Rule 54    paramList -> varDecl COMMA paramList
Rule 55    varList -> func SEMICOLON
Rule 56    varList -> varDecl SEMICOLON
Rule 57    varList -> func SEMICOLON varList
Rule 58    varList -> varDecl SEMICOLON varList
Rule 59    varDecl -> ID COLON vectorType
Rule 60    varDecl -> ID COLON varType
Rule 61    varType -> TFLOAT
Rule 62    varType -> TINT
Rule 63    vectorType -> TFLOAT LBRACKET expr RBRACKET
Rule 64    vectorType -> TINT LBRACKET expr RBRACKET
Rule 65    number -> FLOAT
Rule 66    number -> INT
Rule 67    location -> ID LBRACKET expr RBRACKET
Rule 68    location -> ID

Terminals, with rules where they appear:

AND                  : 29
ASSIGN               : 21
BEGIN                : 4 5 6 7 12
BREAK                : 13
COLON                : 59 60
COMMA                : 38 54
DIVIDE               : 49
DO                   : 23
ELSE                 : 22
END                  : 4 5 6 7 12
EQ                   : 32
FLOAT                : 65
FUN                  : 4 5 6 7
GT                   : 33
GTE                  : 34
ID                   : 4 5 6 7 15 16 42 43 44 45 59 60 67 68
IF                   : 22 24
INT                  : 66
LBRACKET             : 42 63 64 67
LPAREN               : 4 5 6 7 15 16 18 19 20 25 39 40 44 45 46
LT                   : 35
LTE                  : 36
MINUS                : 48 51
NEQ                  : 31
NOT                  : 26
OR                   : 28
PLUS                 : 47 52
PRINT                : 20
RBRACKET             : 42 63 64 67
READ                 : 18
RETURN               : 17
RPAREN               : 4 5 6 7 15 16 18 19 20 25 39 40 44 45 46
SEMICOLON            : 9 55 56 57 58
SKIP                 : 14
STRING               : 20
TFLOAT               : 39 61 63
THEN                 : 22 24
TIMES                : 50
TINT                 : 40 62 64
WHILE                : 23
WRITE                : 19
error                : 

Nonterminals, with rules where they appear:

expr                 : 17 19 21 30 30 37 38 39 40 42 46 47 48 49 49 50 50 51 51 52 52 63 64 67
exprList             : 16 38 45
func                 : 2 3 55 57
funcList             : 1 3
location             : 18 21
noStatement          : 10
number               : 41
paramList            : 5 7 54
program              : 0
relCon               : 30
relExpr              : 27 28 29
relation             : 22 23 24 25 26 28 29
statement            : 11 22 22 23 24
statementList        : 4 5 6 7 9 12
statements           : 8 9
varDecl              : 53 54 56 58
varList              : 6 7 57 58
varType              : 60
vectorType           : 59


state 0

    (0) S' -> . program
    (1) program -> . funcList
    (2) funcList -> . func
    (3) funcList -> . func funcList
    (4) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> . FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
    FUN             shift and go to state 4

    program                        shift and go to state 1
    funcList                       shift and go to state 2
    func                           shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> funcList .
    $end            reduce using rule 1 (program -> funcList .)


state 3

    (2) funcList -> func .
    (3) funcList -> func . funcList
    (2) funcList -> . func
    (3) funcList -> . func funcList
    (4) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> . FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
    $end            reduce using rule 2 (funcList -> func .)
    FUN             shift and go to state 4

    func                           shift and go to state 3
    funcList                       shift and go to state 5

state 4

    (4) func -> FUN . ID LPAREN RPAREN BEGIN statementList END
    (5) func -> FUN . ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> FUN . ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> FUN . ID LPAREN paramList RPAREN varList BEGIN statementList END
    ID              shift and go to state 6


state 5

    (3) funcList -> func funcList .
    $end            reduce using rule 3 (funcList -> func funcList .)


state 6

    (4) func -> FUN ID . LPAREN RPAREN BEGIN statementList END
    (5) func -> FUN ID . LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> FUN ID . LPAREN RPAREN varList BEGIN statementList END
    (7) func -> FUN ID . LPAREN paramList RPAREN varList BEGIN statementList END
    LPAREN          shift and go to state 7


state 7

    (4) func -> FUN ID LPAREN . RPAREN BEGIN statementList END
    (5) func -> FUN ID LPAREN . paramList RPAREN BEGIN statementList END
    (6) func -> FUN ID LPAREN . RPAREN varList BEGIN statementList END
    (7) func -> FUN ID LPAREN . paramList RPAREN varList BEGIN statementList END
    (53) paramList -> . varDecl
    (54) paramList -> . varDecl COMMA paramList
    (59) varDecl -> . ID COLON vectorType
    (60) varDecl -> . ID COLON varType
    RPAREN          shift and go to state 9
    ID              shift and go to state 8

    paramList                      shift and go to state 10
    varDecl                        shift and go to state 11

state 8

    (59) varDecl -> ID . COLON vectorType
    (60) varDecl -> ID . COLON varType
    COLON           shift and go to state 12


state 9

    (4) func -> FUN ID LPAREN RPAREN . BEGIN statementList END
    (6) func -> FUN ID LPAREN RPAREN . varList BEGIN statementList END
    (55) varList -> . func SEMICOLON
    (56) varList -> . varDecl SEMICOLON
    (57) varList -> . func SEMICOLON varList
    (58) varList -> . varDecl SEMICOLON varList
    (4) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> . FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
    (59) varDecl -> . ID COLON vectorType
    (60) varDecl -> . ID COLON varType
    BEGIN           shift and go to state 13
    FUN             shift and go to state 4
    ID              shift and go to state 8

    varList                        shift and go to state 14
    func                           shift and go to state 15
    varDecl                        shift and go to state 16

state 10

    (5) func -> FUN ID LPAREN paramList . RPAREN BEGIN statementList END
    (7) func -> FUN ID LPAREN paramList . RPAREN varList BEGIN statementList END
    RPAREN          shift and go to state 17


state 11

    (53) paramList -> varDecl .
    (54) paramList -> varDecl . COMMA paramList
    RPAREN          reduce using rule 53 (paramList -> varDecl .)
    COMMA           shift and go to state 18


state 12

    (59) varDecl -> ID COLON . vectorType
    (60) varDecl -> ID COLON . varType
    (63) vectorType -> . TFLOAT LBRACKET expr RBRACKET
    (64) vectorType -> . TINT LBRACKET expr RBRACKET
    (61) varType -> . TFLOAT
    (62) varType -> . TINT
    TFLOAT          shift and go to state 21
    TINT            shift and go to state 22

    vectorType                     shift and go to state 19
    varType                        shift and go to state 20

state 13

    (4) func -> FUN ID LPAREN RPAREN BEGIN . statementList END
    (8) statementList -> . statements
    (9) statementList -> . statements SEMICOLON statementList
    (10) statements -> . noStatement
    (11) statements -> . statement
    (24) noStatement -> . IF relation THEN statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    IF              shift and go to state 29
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    WHILE           shift and go to state 37

    statementList                  shift and go to state 25
    statements                     shift and go to state 26
    noStatement                    shift and go to state 27
    statement                      shift and go to state 28
    location                       shift and go to state 34

state 14

    (6) func -> FUN ID LPAREN RPAREN varList . BEGIN statementList END
    BEGIN           shift and go to state 38


state 15

    (55) varList -> func . SEMICOLON
    (57) varList -> func . SEMICOLON varList
    SEMICOLON       shift and go to state 39


state 16

    (56) varList -> varDecl . SEMICOLON
    (58) varList -> varDecl . SEMICOLON varList
    SEMICOLON       shift and go to state 40


state 17

    (5) func -> FUN ID LPAREN paramList RPAREN . BEGIN statementList END
    (7) func -> FUN ID LPAREN paramList RPAREN . varList BEGIN statementList END
    (55) varList -> . func SEMICOLON
    (56) varList -> . varDecl SEMICOLON
    (57) varList -> . func SEMICOLON varList
    (58) varList -> . varDecl SEMICOLON varList
    (4) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> . FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
    (59) varDecl -> . ID COLON vectorType
    (60) varDecl -> . ID COLON varType
    BEGIN           shift and go to state 41
    FUN             shift and go to state 4
    ID              shift and go to state 8

    varList                        shift and go to state 42
    func                           shift and go to state 15
    varDecl                        shift and go to state 16

state 18

    (54) paramList -> varDecl COMMA . paramList
    (53) paramList -> . varDecl
    (54) paramList -> . varDecl COMMA paramList
    (59) varDecl -> . ID COLON vectorType
    (60) varDecl -> . ID COLON varType
    ID              shift and go to state 8

    varDecl                        shift and go to state 11
    paramList                      shift and go to state 43

state 19

    (59) varDecl -> ID COLON vectorType .
    COMMA           reduce using rule 59 (varDecl -> ID COLON vectorType .)
    RPAREN          reduce using rule 59 (varDecl -> ID COLON vectorType .)
    SEMICOLON       reduce using rule 59 (varDecl -> ID COLON vectorType .)


state 20

    (60) varDecl -> ID COLON varType .
    COMMA           reduce using rule 60 (varDecl -> ID COLON varType .)
    RPAREN          reduce using rule 60 (varDecl -> ID COLON varType .)
    SEMICOLON       reduce using rule 60 (varDecl -> ID COLON varType .)


state 21

    (63) vectorType -> TFLOAT . LBRACKET expr RBRACKET
    (61) varType -> TFLOAT .
    LBRACKET        shift and go to state 44
    COMMA           reduce using rule 61 (varType -> TFLOAT .)
    RPAREN          reduce using rule 61 (varType -> TFLOAT .)
    SEMICOLON       reduce using rule 61 (varType -> TFLOAT .)


state 22

    (64) vectorType -> TINT . LBRACKET expr RBRACKET
    (62) varType -> TINT .
    LBRACKET        shift and go to state 45
    COMMA           reduce using rule 62 (varType -> TINT .)
    RPAREN          reduce using rule 62 (varType -> TINT .)
    SEMICOLON       reduce using rule 62 (varType -> TINT .)


state 23

    (15) statement -> ID . LPAREN RPAREN
    (16) statement -> ID . LPAREN exprList RPAREN
    (67) location -> ID . LBRACKET expr RBRACKET
    (68) location -> ID .
    LPAREN          shift and go to state 46
    LBRACKET        shift and go to state 47
    ASSIGN          reduce using rule 68 (location -> ID .)


state 24

    (12) statement -> BEGIN . statementList END
    (8) statementList -> . statements
    (9) statementList -> . statements SEMICOLON statementList
    (10) statements -> . noStatement
    (11) statements -> . statement
    (24) noStatement -> . IF relation THEN statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    IF              shift and go to state 29
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    WHILE           shift and go to state 37

    statementList                  shift and go to state 48
    statements                     shift and go to state 26
    noStatement                    shift and go to state 27
    statement                      shift and go to state 28
    location                       shift and go to state 34

state 25

    (4) func -> FUN ID LPAREN RPAREN BEGIN statementList . END
    END             shift and go to state 49


state 26

    (8) statementList -> statements .
    (9) statementList -> statements . SEMICOLON statementList
    END             reduce using rule 8 (statementList -> statements .)
    SEMICOLON       shift and go to state 50


state 27

    (10) statements -> noStatement .
    SEMICOLON       reduce using rule 10 (statements -> noStatement .)
    END             reduce using rule 10 (statements -> noStatement .)


state 28

    (11) statements -> statement .
    SEMICOLON       reduce using rule 11 (statements -> statement .)
    END             reduce using rule 11 (statements -> statement .)


state 29

    (24) noStatement -> IF . relation THEN statement
    (22) statement -> IF . relation THEN statement ELSE statement
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (30) relExpr -> . expr relCon expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relation                       shift and go to state 51
    relExpr                        shift and go to state 54
    expr                           shift and go to state 55
    number                         shift and go to state 58

state 30

    (13) statement -> BREAK .
    SEMICOLON       reduce using rule 13 (statement -> BREAK .)
    END             reduce using rule 13 (statement -> BREAK .)
    ELSE            reduce using rule 13 (statement -> BREAK .)


state 31

    (14) statement -> SKIP .
    SEMICOLON       reduce using rule 14 (statement -> SKIP .)
    END             reduce using rule 14 (statement -> SKIP .)
    ELSE            reduce using rule 14 (statement -> SKIP .)


state 32

    (17) statement -> RETURN . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 64
    number                         shift and go to state 58

state 33

    (18) statement -> READ . LPAREN location RPAREN
    LPAREN          shift and go to state 66


state 34

    (21) statement -> location . ASSIGN expr
    ASSIGN          shift and go to state 67


state 35

    (19) statement -> WRITE . LPAREN expr RPAREN
    LPAREN          shift and go to state 68


state 36

    (20) statement -> PRINT . LPAREN STRING RPAREN
    LPAREN          shift and go to state 69


state 37

    (23) statement -> WHILE . relation DO statement
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (30) relExpr -> . expr relCon expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relation                       shift and go to state 70
    relExpr                        shift and go to state 54
    expr                           shift and go to state 55
    number                         shift and go to state 58

state 38

    (6) func -> FUN ID LPAREN RPAREN varList BEGIN . statementList END
    (8) statementList -> . statements
    (9) statementList -> . statements SEMICOLON statementList
    (10) statements -> . noStatement
    (11) statements -> . statement
    (24) noStatement -> . IF relation THEN statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    IF              shift and go to state 29
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    WHILE           shift and go to state 37

    statementList                  shift and go to state 71
    statements                     shift and go to state 26
    noStatement                    shift and go to state 27
    statement                      shift and go to state 28
    location                       shift and go to state 34

state 39

    (55) varList -> func SEMICOLON .
    (57) varList -> func SEMICOLON . varList
    (55) varList -> . func SEMICOLON
    (56) varList -> . varDecl SEMICOLON
    (57) varList -> . func SEMICOLON varList
    (58) varList -> . varDecl SEMICOLON varList
    (4) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> . FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
    (59) varDecl -> . ID COLON vectorType
    (60) varDecl -> . ID COLON varType
    BEGIN           reduce using rule 55 (varList -> func SEMICOLON .)
    FUN             shift and go to state 4
    ID              shift and go to state 8

    func                           shift and go to state 15
    varList                        shift and go to state 72
    varDecl                        shift and go to state 16

state 40

    (56) varList -> varDecl SEMICOLON .
    (58) varList -> varDecl SEMICOLON . varList
    (55) varList -> . func SEMICOLON
    (56) varList -> . varDecl SEMICOLON
    (57) varList -> . func SEMICOLON varList
    (58) varList -> . varDecl SEMICOLON varList
    (4) func -> . FUN ID LPAREN RPAREN BEGIN statementList END
    (5) func -> . FUN ID LPAREN paramList RPAREN BEGIN statementList END
    (6) func -> . FUN ID LPAREN RPAREN varList BEGIN statementList END
    (7) func -> . FUN ID LPAREN paramList RPAREN varList BEGIN statementList END
    (59) varDecl -> . ID COLON vectorType
    (60) varDecl -> . ID COLON varType
    BEGIN           reduce using rule 56 (varList -> varDecl SEMICOLON .)
    FUN             shift and go to state 4
    ID              shift and go to state 8

    varDecl                        shift and go to state 16
    varList                        shift and go to state 73
    func                           shift and go to state 15

state 41

    (5) func -> FUN ID LPAREN paramList RPAREN BEGIN . statementList END
    (8) statementList -> . statements
    (9) statementList -> . statements SEMICOLON statementList
    (10) statements -> . noStatement
    (11) statements -> . statement
    (24) noStatement -> . IF relation THEN statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    IF              shift and go to state 29
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    WHILE           shift and go to state 37

    statementList                  shift and go to state 74
    statements                     shift and go to state 26
    noStatement                    shift and go to state 27
    statement                      shift and go to state 28
    location                       shift and go to state 34

state 42

    (7) func -> FUN ID LPAREN paramList RPAREN varList . BEGIN statementList END
    BEGIN           shift and go to state 75


state 43

    (54) paramList -> varDecl COMMA paramList .
    RPAREN          reduce using rule 54 (paramList -> varDecl COMMA paramList .)


state 44

    (63) vectorType -> TFLOAT LBRACKET . expr RBRACKET
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 76
    number                         shift and go to state 58

state 45

    (64) vectorType -> TINT LBRACKET . expr RBRACKET
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 77
    number                         shift and go to state 58

state 46

    (15) statement -> ID LPAREN . RPAREN
    (16) statement -> ID LPAREN . exprList RPAREN
    (37) exprList -> . expr
    (38) exprList -> . expr COMMA exprList
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    RPAREN          shift and go to state 78
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    exprList                       shift and go to state 79
    expr                           shift and go to state 80
    number                         shift and go to state 58

state 47

    (67) location -> ID LBRACKET . expr RBRACKET
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 81
    number                         shift and go to state 58

state 48

    (12) statement -> BEGIN statementList . END
    END             shift and go to state 82


state 49

    (4) func -> FUN ID LPAREN RPAREN BEGIN statementList END .
    FUN             reduce using rule 4 (func -> FUN ID LPAREN RPAREN BEGIN statementList END .)
    $end            reduce using rule 4 (func -> FUN ID LPAREN RPAREN BEGIN statementList END .)
    SEMICOLON       reduce using rule 4 (func -> FUN ID LPAREN RPAREN BEGIN statementList END .)


state 50

    (9) statementList -> statements SEMICOLON . statementList
    (8) statementList -> . statements
    (9) statementList -> . statements SEMICOLON statementList
    (10) statements -> . noStatement
    (11) statements -> . statement
    (24) noStatement -> . IF relation THEN statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    IF              shift and go to state 29
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    WHILE           shift and go to state 37

    statements                     shift and go to state 26
    statementList                  shift and go to state 83
    noStatement                    shift and go to state 27
    statement                      shift and go to state 28
    location                       shift and go to state 34

state 51

    (24) noStatement -> IF relation . THEN statement
    (22) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 84


state 52

    (25) relation -> LPAREN . relation RPAREN
    (46) expr -> LPAREN . expr RPAREN
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (30) relExpr -> . expr relCon expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relation                       shift and go to state 85
    expr                           shift and go to state 86
    relExpr                        shift and go to state 54
    number                         shift and go to state 58

state 53

    (26) relation -> NOT . relation
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (30) relExpr -> . expr relCon expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relation                       shift and go to state 87
    relExpr                        shift and go to state 54
    expr                           shift and go to state 55
    number                         shift and go to state 58

state 54

    (27) relation -> relExpr .
    (28) relation -> relExpr . OR relation
    (29) relation -> relExpr . AND relation
    THEN            reduce using rule 27 (relation -> relExpr .)
    DO              reduce using rule 27 (relation -> relExpr .)
    RPAREN          reduce using rule 27 (relation -> relExpr .)
    OR              shift and go to state 88
    AND             shift and go to state 89


state 55

    (30) relExpr -> expr . relCon expr
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    (31) relCon -> . NEQ
    (32) relCon -> . EQ
    (33) relCon -> . GT
    (34) relCon -> . GTE
    (35) relCon -> . LT
    (36) relCon -> . LTE
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94
    NEQ             shift and go to state 95
    EQ              shift and go to state 96
    GT              shift and go to state 97
    GTE             shift and go to state 98
    LT              shift and go to state 99
    LTE             shift and go to state 100

    relCon                         shift and go to state 90

state 56

    (39) expr -> TFLOAT . LPAREN expr RPAREN
    LPAREN          shift and go to state 101


state 57

    (40) expr -> TINT . LPAREN expr RPAREN
    LPAREN          shift and go to state 102


state 58

    (41) expr -> number .
    DIVIDE          reduce using rule 41 (expr -> number .)
    TIMES           reduce using rule 41 (expr -> number .)
    MINUS           reduce using rule 41 (expr -> number .)
    PLUS            reduce using rule 41 (expr -> number .)
    NEQ             reduce using rule 41 (expr -> number .)
    EQ              reduce using rule 41 (expr -> number .)
    GT              reduce using rule 41 (expr -> number .)
    GTE             reduce using rule 41 (expr -> number .)
    LT              reduce using rule 41 (expr -> number .)
    LTE             reduce using rule 41 (expr -> number .)
    SEMICOLON       reduce using rule 41 (expr -> number .)
    END             reduce using rule 41 (expr -> number .)
    ELSE            reduce using rule 41 (expr -> number .)
    RBRACKET        reduce using rule 41 (expr -> number .)
    COMMA           reduce using rule 41 (expr -> number .)
    RPAREN          reduce using rule 41 (expr -> number .)
    OR              reduce using rule 41 (expr -> number .)
    AND             reduce using rule 41 (expr -> number .)
    THEN            reduce using rule 41 (expr -> number .)
    DO              reduce using rule 41 (expr -> number .)


state 59

    (42) expr -> ID . LBRACKET expr RBRACKET
    (43) expr -> ID .
    (44) expr -> ID . LPAREN RPAREN
    (45) expr -> ID . LPAREN exprList RPAREN
    LBRACKET        shift and go to state 103
    DIVIDE          reduce using rule 43 (expr -> ID .)
    TIMES           reduce using rule 43 (expr -> ID .)
    MINUS           reduce using rule 43 (expr -> ID .)
    PLUS            reduce using rule 43 (expr -> ID .)
    NEQ             reduce using rule 43 (expr -> ID .)
    EQ              reduce using rule 43 (expr -> ID .)
    GT              reduce using rule 43 (expr -> ID .)
    GTE             reduce using rule 43 (expr -> ID .)
    LT              reduce using rule 43 (expr -> ID .)
    LTE             reduce using rule 43 (expr -> ID .)
    SEMICOLON       reduce using rule 43 (expr -> ID .)
    END             reduce using rule 43 (expr -> ID .)
    ELSE            reduce using rule 43 (expr -> ID .)
    RBRACKET        reduce using rule 43 (expr -> ID .)
    COMMA           reduce using rule 43 (expr -> ID .)
    RPAREN          reduce using rule 43 (expr -> ID .)
    OR              reduce using rule 43 (expr -> ID .)
    AND             reduce using rule 43 (expr -> ID .)
    THEN            reduce using rule 43 (expr -> ID .)
    DO              reduce using rule 43 (expr -> ID .)
    LPAREN          shift and go to state 104


state 60

    (47) expr -> PLUS . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 105
    number                         shift and go to state 58

state 61

    (48) expr -> MINUS . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 106
    number                         shift and go to state 58

state 62

    (65) number -> FLOAT .
    DIVIDE          reduce using rule 65 (number -> FLOAT .)
    TIMES           reduce using rule 65 (number -> FLOAT .)
    MINUS           reduce using rule 65 (number -> FLOAT .)
    PLUS            reduce using rule 65 (number -> FLOAT .)
    NEQ             reduce using rule 65 (number -> FLOAT .)
    EQ              reduce using rule 65 (number -> FLOAT .)
    GT              reduce using rule 65 (number -> FLOAT .)
    GTE             reduce using rule 65 (number -> FLOAT .)
    LT              reduce using rule 65 (number -> FLOAT .)
    LTE             reduce using rule 65 (number -> FLOAT .)
    SEMICOLON       reduce using rule 65 (number -> FLOAT .)
    END             reduce using rule 65 (number -> FLOAT .)
    ELSE            reduce using rule 65 (number -> FLOAT .)
    RBRACKET        reduce using rule 65 (number -> FLOAT .)
    COMMA           reduce using rule 65 (number -> FLOAT .)
    RPAREN          reduce using rule 65 (number -> FLOAT .)
    OR              reduce using rule 65 (number -> FLOAT .)
    AND             reduce using rule 65 (number -> FLOAT .)
    THEN            reduce using rule 65 (number -> FLOAT .)
    DO              reduce using rule 65 (number -> FLOAT .)


state 63

    (66) number -> INT .
    DIVIDE          reduce using rule 66 (number -> INT .)
    TIMES           reduce using rule 66 (number -> INT .)
    MINUS           reduce using rule 66 (number -> INT .)
    PLUS            reduce using rule 66 (number -> INT .)
    NEQ             reduce using rule 66 (number -> INT .)
    EQ              reduce using rule 66 (number -> INT .)
    GT              reduce using rule 66 (number -> INT .)
    GTE             reduce using rule 66 (number -> INT .)
    LT              reduce using rule 66 (number -> INT .)
    LTE             reduce using rule 66 (number -> INT .)
    SEMICOLON       reduce using rule 66 (number -> INT .)
    END             reduce using rule 66 (number -> INT .)
    ELSE            reduce using rule 66 (number -> INT .)
    RBRACKET        reduce using rule 66 (number -> INT .)
    COMMA           reduce using rule 66 (number -> INT .)
    RPAREN          reduce using rule 66 (number -> INT .)
    OR              reduce using rule 66 (number -> INT .)
    AND             reduce using rule 66 (number -> INT .)
    THEN            reduce using rule 66 (number -> INT .)
    DO              reduce using rule 66 (number -> INT .)


state 64

    (17) statement -> RETURN expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 17 (statement -> RETURN expr .)
    END             reduce using rule 17 (statement -> RETURN expr .)
    ELSE            reduce using rule 17 (statement -> RETURN expr .)
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 65

    (46) expr -> LPAREN . expr RPAREN
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 107
    number                         shift and go to state 58

state 66

    (18) statement -> READ LPAREN . location RPAREN
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    ID              shift and go to state 109

    location                       shift and go to state 108

state 67

    (21) statement -> location ASSIGN . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 110
    number                         shift and go to state 58

state 68

    (19) statement -> WRITE LPAREN . expr RPAREN
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 111
    number                         shift and go to state 58

state 69

    (20) statement -> PRINT LPAREN . STRING RPAREN
    STRING          shift and go to state 112


state 70

    (23) statement -> WHILE relation . DO statement
    DO              shift and go to state 113


state 71

    (6) func -> FUN ID LPAREN RPAREN varList BEGIN statementList . END
    END             shift and go to state 114


state 72

    (57) varList -> func SEMICOLON varList .
    BEGIN           reduce using rule 57 (varList -> func SEMICOLON varList .)


state 73

    (58) varList -> varDecl SEMICOLON varList .
    BEGIN           reduce using rule 58 (varList -> varDecl SEMICOLON varList .)


state 74

    (5) func -> FUN ID LPAREN paramList RPAREN BEGIN statementList . END
    END             shift and go to state 115


state 75

    (7) func -> FUN ID LPAREN paramList RPAREN varList BEGIN . statementList END
    (8) statementList -> . statements
    (9) statementList -> . statements SEMICOLON statementList
    (10) statements -> . noStatement
    (11) statements -> . statement
    (24) noStatement -> . IF relation THEN statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    IF              shift and go to state 29
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    WHILE           shift and go to state 37

    statementList                  shift and go to state 116
    statements                     shift and go to state 26
    noStatement                    shift and go to state 27
    statement                      shift and go to state 28
    location                       shift and go to state 34

state 76

    (63) vectorType -> TFLOAT LBRACKET expr . RBRACKET
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 117
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 77

    (64) vectorType -> TINT LBRACKET expr . RBRACKET
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 118
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 78

    (15) statement -> ID LPAREN RPAREN .
    SEMICOLON       reduce using rule 15 (statement -> ID LPAREN RPAREN .)
    END             reduce using rule 15 (statement -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 15 (statement -> ID LPAREN RPAREN .)


state 79

    (16) statement -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 119


state 80

    (37) exprList -> expr .
    (38) exprList -> expr . COMMA exprList
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RPAREN          reduce using rule 37 (exprList -> expr .)
    COMMA           shift and go to state 120
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 81

    (67) location -> ID LBRACKET expr . RBRACKET
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 121
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 82

    (12) statement -> BEGIN statementList END .
    SEMICOLON       reduce using rule 12 (statement -> BEGIN statementList END .)
    END             reduce using rule 12 (statement -> BEGIN statementList END .)
    ELSE            reduce using rule 12 (statement -> BEGIN statementList END .)


state 83

    (9) statementList -> statements SEMICOLON statementList .
    END             reduce using rule 9 (statementList -> statements SEMICOLON statementList .)


state 84

    (24) noStatement -> IF relation THEN . statement
    (22) statement -> IF relation THEN . statement ELSE statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    IF              shift and go to state 122
    WHILE           shift and go to state 37

    statement                      shift and go to state 123
    location                       shift and go to state 34

state 85

    (25) relation -> LPAREN relation . RPAREN
    RPAREN          shift and go to state 124


state 86

    (46) expr -> LPAREN expr . RPAREN
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    (30) relExpr -> expr . relCon expr
    (31) relCon -> . NEQ
    (32) relCon -> . EQ
    (33) relCon -> . GT
    (34) relCon -> . GTE
    (35) relCon -> . LT
    (36) relCon -> . LTE
    RPAREN          shift and go to state 125
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94
    NEQ             shift and go to state 95
    EQ              shift and go to state 96
    GT              shift and go to state 97
    GTE             shift and go to state 98
    LT              shift and go to state 99
    LTE             shift and go to state 100

    relCon                         shift and go to state 90

state 87

    (26) relation -> NOT relation .
    THEN            reduce using rule 26 (relation -> NOT relation .)
    DO              reduce using rule 26 (relation -> NOT relation .)
    RPAREN          reduce using rule 26 (relation -> NOT relation .)


state 88

    (28) relation -> relExpr OR . relation
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (30) relExpr -> . expr relCon expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relExpr                        shift and go to state 54
    relation                       shift and go to state 126
    expr                           shift and go to state 55
    number                         shift and go to state 58

state 89

    (29) relation -> relExpr AND . relation
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (30) relExpr -> . expr relCon expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relExpr                        shift and go to state 54
    relation                       shift and go to state 127
    expr                           shift and go to state 55
    number                         shift and go to state 58

state 90

    (30) relExpr -> expr relCon . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 128
    number                         shift and go to state 58

state 91

    (49) expr -> expr DIVIDE . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 129
    number                         shift and go to state 58

state 92

    (50) expr -> expr TIMES . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 130
    number                         shift and go to state 58

state 93

    (51) expr -> expr MINUS . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 131
    number                         shift and go to state 58

state 94

    (52) expr -> expr PLUS . expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 132
    number                         shift and go to state 58

state 95

    (31) relCon -> NEQ .
    TFLOAT          reduce using rule 31 (relCon -> NEQ .)
    TINT            reduce using rule 31 (relCon -> NEQ .)
    ID              reduce using rule 31 (relCon -> NEQ .)
    LPAREN          reduce using rule 31 (relCon -> NEQ .)
    PLUS            reduce using rule 31 (relCon -> NEQ .)
    MINUS           reduce using rule 31 (relCon -> NEQ .)
    FLOAT           reduce using rule 31 (relCon -> NEQ .)
    INT             reduce using rule 31 (relCon -> NEQ .)


state 96

    (32) relCon -> EQ .
    TFLOAT          reduce using rule 32 (relCon -> EQ .)
    TINT            reduce using rule 32 (relCon -> EQ .)
    ID              reduce using rule 32 (relCon -> EQ .)
    LPAREN          reduce using rule 32 (relCon -> EQ .)
    PLUS            reduce using rule 32 (relCon -> EQ .)
    MINUS           reduce using rule 32 (relCon -> EQ .)
    FLOAT           reduce using rule 32 (relCon -> EQ .)
    INT             reduce using rule 32 (relCon -> EQ .)


state 97

    (33) relCon -> GT .
    TFLOAT          reduce using rule 33 (relCon -> GT .)
    TINT            reduce using rule 33 (relCon -> GT .)
    ID              reduce using rule 33 (relCon -> GT .)
    LPAREN          reduce using rule 33 (relCon -> GT .)
    PLUS            reduce using rule 33 (relCon -> GT .)
    MINUS           reduce using rule 33 (relCon -> GT .)
    FLOAT           reduce using rule 33 (relCon -> GT .)
    INT             reduce using rule 33 (relCon -> GT .)


state 98

    (34) relCon -> GTE .
    TFLOAT          reduce using rule 34 (relCon -> GTE .)
    TINT            reduce using rule 34 (relCon -> GTE .)
    ID              reduce using rule 34 (relCon -> GTE .)
    LPAREN          reduce using rule 34 (relCon -> GTE .)
    PLUS            reduce using rule 34 (relCon -> GTE .)
    MINUS           reduce using rule 34 (relCon -> GTE .)
    FLOAT           reduce using rule 34 (relCon -> GTE .)
    INT             reduce using rule 34 (relCon -> GTE .)


state 99

    (35) relCon -> LT .
    TFLOAT          reduce using rule 35 (relCon -> LT .)
    TINT            reduce using rule 35 (relCon -> LT .)
    ID              reduce using rule 35 (relCon -> LT .)
    LPAREN          reduce using rule 35 (relCon -> LT .)
    PLUS            reduce using rule 35 (relCon -> LT .)
    MINUS           reduce using rule 35 (relCon -> LT .)
    FLOAT           reduce using rule 35 (relCon -> LT .)
    INT             reduce using rule 35 (relCon -> LT .)


state 100

    (36) relCon -> LTE .
    TFLOAT          reduce using rule 36 (relCon -> LTE .)
    TINT            reduce using rule 36 (relCon -> LTE .)
    ID              reduce using rule 36 (relCon -> LTE .)
    LPAREN          reduce using rule 36 (relCon -> LTE .)
    PLUS            reduce using rule 36 (relCon -> LTE .)
    MINUS           reduce using rule 36 (relCon -> LTE .)
    FLOAT           reduce using rule 36 (relCon -> LTE .)
    INT             reduce using rule 36 (relCon -> LTE .)


state 101

    (39) expr -> TFLOAT LPAREN . expr RPAREN
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 133
    number                         shift and go to state 58

state 102

    (40) expr -> TINT LPAREN . expr RPAREN
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 134
    number                         shift and go to state 58

state 103

    (42) expr -> ID LBRACKET . expr RBRACKET
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 135
    number                         shift and go to state 58

state 104

    (44) expr -> ID LPAREN . RPAREN
    (45) expr -> ID LPAREN . exprList RPAREN
    (37) exprList -> . expr
    (38) exprList -> . expr COMMA exprList
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    RPAREN          shift and go to state 136
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    exprList                       shift and go to state 137
    expr                           shift and go to state 80
    number                         shift and go to state 58

state 105

    (47) expr -> PLUS expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 47 (expr -> PLUS expr .)
    TIMES           reduce using rule 47 (expr -> PLUS expr .)
    MINUS           reduce using rule 47 (expr -> PLUS expr .)
    PLUS            reduce using rule 47 (expr -> PLUS expr .)
    NEQ             reduce using rule 47 (expr -> PLUS expr .)
    EQ              reduce using rule 47 (expr -> PLUS expr .)
    GT              reduce using rule 47 (expr -> PLUS expr .)
    GTE             reduce using rule 47 (expr -> PLUS expr .)
    LT              reduce using rule 47 (expr -> PLUS expr .)
    LTE             reduce using rule 47 (expr -> PLUS expr .)
    SEMICOLON       reduce using rule 47 (expr -> PLUS expr .)
    END             reduce using rule 47 (expr -> PLUS expr .)
    ELSE            reduce using rule 47 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 47 (expr -> PLUS expr .)
    COMMA           reduce using rule 47 (expr -> PLUS expr .)
    RPAREN          reduce using rule 47 (expr -> PLUS expr .)
    OR              reduce using rule 47 (expr -> PLUS expr .)
    AND             reduce using rule 47 (expr -> PLUS expr .)
    THEN            reduce using rule 47 (expr -> PLUS expr .)
    DO              reduce using rule 47 (expr -> PLUS expr .)


state 106

    (48) expr -> MINUS expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 48 (expr -> MINUS expr .)
    TIMES           reduce using rule 48 (expr -> MINUS expr .)
    MINUS           reduce using rule 48 (expr -> MINUS expr .)
    PLUS            reduce using rule 48 (expr -> MINUS expr .)
    NEQ             reduce using rule 48 (expr -> MINUS expr .)
    EQ              reduce using rule 48 (expr -> MINUS expr .)
    GT              reduce using rule 48 (expr -> MINUS expr .)
    GTE             reduce using rule 48 (expr -> MINUS expr .)
    LT              reduce using rule 48 (expr -> MINUS expr .)
    LTE             reduce using rule 48 (expr -> MINUS expr .)
    SEMICOLON       reduce using rule 48 (expr -> MINUS expr .)
    END             reduce using rule 48 (expr -> MINUS expr .)
    ELSE            reduce using rule 48 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 48 (expr -> MINUS expr .)
    COMMA           reduce using rule 48 (expr -> MINUS expr .)
    RPAREN          reduce using rule 48 (expr -> MINUS expr .)
    OR              reduce using rule 48 (expr -> MINUS expr .)
    AND             reduce using rule 48 (expr -> MINUS expr .)
    THEN            reduce using rule 48 (expr -> MINUS expr .)
    DO              reduce using rule 48 (expr -> MINUS expr .)


state 107

    (46) expr -> LPAREN expr . RPAREN
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RPAREN          shift and go to state 125
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 108

    (18) statement -> READ LPAREN location . RPAREN
    RPAREN          shift and go to state 138


state 109

    (67) location -> ID . LBRACKET expr RBRACKET
    (68) location -> ID .
    LBRACKET        shift and go to state 47
    RPAREN          reduce using rule 68 (location -> ID .)


state 110

    (21) statement -> location ASSIGN expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 21 (statement -> location ASSIGN expr .)
    END             reduce using rule 21 (statement -> location ASSIGN expr .)
    ELSE            reduce using rule 21 (statement -> location ASSIGN expr .)
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 111

    (19) statement -> WRITE LPAREN expr . RPAREN
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RPAREN          shift and go to state 139
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 112

    (20) statement -> PRINT LPAREN STRING . RPAREN
    RPAREN          shift and go to state 140


state 113

    (23) statement -> WHILE relation DO . statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    IF              shift and go to state 122
    WHILE           shift and go to state 37

    statement                      shift and go to state 141
    location                       shift and go to state 34

state 114

    (6) func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .
    FUN             reduce using rule 6 (func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .)
    $end            reduce using rule 6 (func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .)
    SEMICOLON       reduce using rule 6 (func -> FUN ID LPAREN RPAREN varList BEGIN statementList END .)


state 115

    (5) func -> FUN ID LPAREN paramList RPAREN BEGIN statementList END .
    FUN             reduce using rule 5 (func -> FUN ID LPAREN paramList RPAREN BEGIN statementList END .)
    $end            reduce using rule 5 (func -> FUN ID LPAREN paramList RPAREN BEGIN statementList END .)
    SEMICOLON       reduce using rule 5 (func -> FUN ID LPAREN paramList RPAREN BEGIN statementList END .)


state 116

    (7) func -> FUN ID LPAREN paramList RPAREN varList BEGIN statementList . END
    END             shift and go to state 142


state 117

    (63) vectorType -> TFLOAT LBRACKET expr RBRACKET .
    COMMA           reduce using rule 63 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 63 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 63 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)


state 118

    (64) vectorType -> TINT LBRACKET expr RBRACKET .
    COMMA           reduce using rule 64 (vectorType -> TINT LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 64 (vectorType -> TINT LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 64 (vectorType -> TINT LBRACKET expr RBRACKET .)


state 119

    (16) statement -> ID LPAREN exprList RPAREN .
    SEMICOLON       reduce using rule 16 (statement -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 16 (statement -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 16 (statement -> ID LPAREN exprList RPAREN .)


state 120

    (38) exprList -> expr COMMA . exprList
    (37) exprList -> . expr
    (38) exprList -> . expr COMMA exprList
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    LPAREN          shift and go to state 65
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    expr                           shift and go to state 80
    exprList                       shift and go to state 143
    number                         shift and go to state 58

state 121

    (67) location -> ID LBRACKET expr RBRACKET .
    ASSIGN          reduce using rule 67 (location -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 67 (location -> ID LBRACKET expr RBRACKET .)


state 122

    (22) statement -> IF . relation THEN statement ELSE statement
    (25) relation -> . LPAREN relation RPAREN
    (26) relation -> . NOT relation
    (27) relation -> . relExpr
    (28) relation -> . relExpr OR relation
    (29) relation -> . relExpr AND relation
    (30) relExpr -> . expr relCon expr
    (39) expr -> . TFLOAT LPAREN expr RPAREN
    (40) expr -> . TINT LPAREN expr RPAREN
    (41) expr -> . number
    (42) expr -> . ID LBRACKET expr RBRACKET
    (43) expr -> . ID
    (44) expr -> . ID LPAREN RPAREN
    (45) expr -> . ID LPAREN exprList RPAREN
    (46) expr -> . LPAREN expr RPAREN
    (47) expr -> . PLUS expr
    (48) expr -> . MINUS expr
    (49) expr -> . expr DIVIDE expr
    (50) expr -> . expr TIMES expr
    (51) expr -> . expr MINUS expr
    (52) expr -> . expr PLUS expr
    (65) number -> . FLOAT
    (66) number -> . INT
    LPAREN          shift and go to state 52
    NOT             shift and go to state 53
    TFLOAT          shift and go to state 56
    TINT            shift and go to state 57
    ID              shift and go to state 59
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    FLOAT           shift and go to state 62
    INT             shift and go to state 63

    relation                       shift and go to state 144
    relExpr                        shift and go to state 54
    expr                           shift and go to state 55
    number                         shift and go to state 58

state 123

    (24) noStatement -> IF relation THEN statement .
    (22) statement -> IF relation THEN statement . ELSE statement
    SEMICOLON       reduce using rule 24 (noStatement -> IF relation THEN statement .)
    END             reduce using rule 24 (noStatement -> IF relation THEN statement .)
    ELSE            shift and go to state 145


state 124

    (25) relation -> LPAREN relation RPAREN .
    THEN            reduce using rule 25 (relation -> LPAREN relation RPAREN .)
    DO              reduce using rule 25 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 25 (relation -> LPAREN relation RPAREN .)


state 125

    (46) expr -> LPAREN expr RPAREN .
    DIVIDE          reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 46 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 46 (expr -> LPAREN expr RPAREN .)


state 126

    (28) relation -> relExpr OR relation .
    THEN            reduce using rule 28 (relation -> relExpr OR relation .)
    DO              reduce using rule 28 (relation -> relExpr OR relation .)
    RPAREN          reduce using rule 28 (relation -> relExpr OR relation .)


state 127

    (29) relation -> relExpr AND relation .
    THEN            reduce using rule 29 (relation -> relExpr AND relation .)
    DO              reduce using rule 29 (relation -> relExpr AND relation .)
    RPAREN          reduce using rule 29 (relation -> relExpr AND relation .)


state 128

    (30) relExpr -> expr relCon expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    OR              reduce using rule 30 (relExpr -> expr relCon expr .)
    AND             reduce using rule 30 (relExpr -> expr relCon expr .)
    THEN            reduce using rule 30 (relExpr -> expr relCon expr .)
    DO              reduce using rule 30 (relExpr -> expr relCon expr .)
    RPAREN          reduce using rule 30 (relExpr -> expr relCon expr .)
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 129

    (49) expr -> expr DIVIDE expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 49 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 49 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 49 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 49 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 49 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 49 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 49 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 49 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 49 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 49 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 49 (expr -> expr DIVIDE expr .)
    END             reduce using rule 49 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 49 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 49 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 49 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 49 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 49 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 49 (expr -> expr DIVIDE expr .)
    THEN            reduce using rule 49 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 49 (expr -> expr DIVIDE expr .)


state 130

    (50) expr -> expr TIMES expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 50 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 50 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 50 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 50 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 50 (expr -> expr TIMES expr .)
    EQ              reduce using rule 50 (expr -> expr TIMES expr .)
    GT              reduce using rule 50 (expr -> expr TIMES expr .)
    GTE             reduce using rule 50 (expr -> expr TIMES expr .)
    LT              reduce using rule 50 (expr -> expr TIMES expr .)
    LTE             reduce using rule 50 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 50 (expr -> expr TIMES expr .)
    END             reduce using rule 50 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 50 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 50 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 50 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 50 (expr -> expr TIMES expr .)
    OR              reduce using rule 50 (expr -> expr TIMES expr .)
    AND             reduce using rule 50 (expr -> expr TIMES expr .)
    THEN            reduce using rule 50 (expr -> expr TIMES expr .)
    DO              reduce using rule 50 (expr -> expr TIMES expr .)


state 131

    (51) expr -> expr MINUS expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    MINUS           reduce using rule 51 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 51 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 51 (expr -> expr MINUS expr .)
    EQ              reduce using rule 51 (expr -> expr MINUS expr .)
    GT              reduce using rule 51 (expr -> expr MINUS expr .)
    GTE             reduce using rule 51 (expr -> expr MINUS expr .)
    LT              reduce using rule 51 (expr -> expr MINUS expr .)
    LTE             reduce using rule 51 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 51 (expr -> expr MINUS expr .)
    END             reduce using rule 51 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 51 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 51 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 51 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 51 (expr -> expr MINUS expr .)
    OR              reduce using rule 51 (expr -> expr MINUS expr .)
    AND             reduce using rule 51 (expr -> expr MINUS expr .)
    THEN            reduce using rule 51 (expr -> expr MINUS expr .)
    DO              reduce using rule 51 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92


state 132

    (52) expr -> expr PLUS expr .
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    MINUS           reduce using rule 52 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 52 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 52 (expr -> expr PLUS expr .)
    EQ              reduce using rule 52 (expr -> expr PLUS expr .)
    GT              reduce using rule 52 (expr -> expr PLUS expr .)
    GTE             reduce using rule 52 (expr -> expr PLUS expr .)
    LT              reduce using rule 52 (expr -> expr PLUS expr .)
    LTE             reduce using rule 52 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 52 (expr -> expr PLUS expr .)
    END             reduce using rule 52 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 52 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 52 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 52 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 52 (expr -> expr PLUS expr .)
    OR              reduce using rule 52 (expr -> expr PLUS expr .)
    AND             reduce using rule 52 (expr -> expr PLUS expr .)
    THEN            reduce using rule 52 (expr -> expr PLUS expr .)
    DO              reduce using rule 52 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92


state 133

    (39) expr -> TFLOAT LPAREN expr . RPAREN
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RPAREN          shift and go to state 146
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 134

    (40) expr -> TINT LPAREN expr . RPAREN
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RPAREN          shift and go to state 147
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 135

    (42) expr -> ID LBRACKET expr . RBRACKET
    (49) expr -> expr . DIVIDE expr
    (50) expr -> expr . TIMES expr
    (51) expr -> expr . MINUS expr
    (52) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 148
    DIVIDE          shift and go to state 91
    TIMES           shift and go to state 92
    MINUS           shift and go to state 93
    PLUS            shift and go to state 94


state 136

    (44) expr -> ID LPAREN RPAREN .
    DIVIDE          reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    NEQ             reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    EQ              reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    GT              reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    GTE             reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    LT              reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    LTE             reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    END             reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    OR              reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    AND             reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    THEN            reduce using rule 44 (expr -> ID LPAREN RPAREN .)
    DO              reduce using rule 44 (expr -> ID LPAREN RPAREN .)


state 137

    (45) expr -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 149


state 138

    (18) statement -> READ LPAREN location RPAREN .
    SEMICOLON       reduce using rule 18 (statement -> READ LPAREN location RPAREN .)
    END             reduce using rule 18 (statement -> READ LPAREN location RPAREN .)
    ELSE            reduce using rule 18 (statement -> READ LPAREN location RPAREN .)


state 139

    (19) statement -> WRITE LPAREN expr RPAREN .
    SEMICOLON       reduce using rule 19 (statement -> WRITE LPAREN expr RPAREN .)
    END             reduce using rule 19 (statement -> WRITE LPAREN expr RPAREN .)
    ELSE            reduce using rule 19 (statement -> WRITE LPAREN expr RPAREN .)


state 140

    (20) statement -> PRINT LPAREN STRING RPAREN .
    SEMICOLON       reduce using rule 20 (statement -> PRINT LPAREN STRING RPAREN .)
    END             reduce using rule 20 (statement -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 20 (statement -> PRINT LPAREN STRING RPAREN .)


state 141

    (23) statement -> WHILE relation DO statement .
    SEMICOLON       reduce using rule 23 (statement -> WHILE relation DO statement .)
    END             reduce using rule 23 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 23 (statement -> WHILE relation DO statement .)


state 142

    (7) func -> FUN ID LPAREN paramList RPAREN varList BEGIN statementList END .
    FUN             reduce using rule 7 (func -> FUN ID LPAREN paramList RPAREN varList BEGIN statementList END .)
    $end            reduce using rule 7 (func -> FUN ID LPAREN paramList RPAREN varList BEGIN statementList END .)
    SEMICOLON       reduce using rule 7 (func -> FUN ID LPAREN paramList RPAREN varList BEGIN statementList END .)


state 143

    (38) exprList -> expr COMMA exprList .
    RPAREN          reduce using rule 38 (exprList -> expr COMMA exprList .)


state 144

    (22) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 150


state 145

    (22) statement -> IF relation THEN statement ELSE . statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    IF              shift and go to state 122
    WHILE           shift and go to state 37

    statement                      shift and go to state 151
    location                       shift and go to state 34

state 146

    (39) expr -> TFLOAT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    TIMES           reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    MINUS           reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    PLUS            reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    NEQ             reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    EQ              reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    GT              reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    GTE             reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    LT              reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    LTE             reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    END             reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    ELSE            reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    COMMA           reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    OR              reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    AND             reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    THEN            reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)
    DO              reduce using rule 39 (expr -> TFLOAT LPAREN expr RPAREN .)


state 147

    (40) expr -> TINT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    TIMES           reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    MINUS           reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    PLUS            reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    NEQ             reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    EQ              reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    GT              reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    GTE             reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    LT              reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    LTE             reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    END             reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    ELSE            reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    OR              reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    AND             reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    THEN            reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)
    DO              reduce using rule 40 (expr -> TINT LPAREN expr RPAREN .)


state 148

    (42) expr -> ID LBRACKET expr RBRACKET .
    DIVIDE          reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    NEQ             reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    EQ              reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    GT              reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    GTE             reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    LT              reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    LTE             reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    END             reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    ELSE            reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    OR              reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    AND             reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    THEN            reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)
    DO              reduce using rule 42 (expr -> ID LBRACKET expr RBRACKET .)


state 149

    (45) expr -> ID LPAREN exprList RPAREN .
    DIVIDE          reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    TIMES           reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    MINUS           reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    PLUS            reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    NEQ             reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    EQ              reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    GT              reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    GTE             reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    LT              reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    LTE             reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    SEMICOLON       reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    RBRACKET        reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    COMMA           reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    RPAREN          reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    OR              reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    AND             reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    THEN            reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)
    DO              reduce using rule 45 (expr -> ID LPAREN exprList RPAREN .)


state 150

    (22) statement -> IF relation THEN . statement ELSE statement
    (12) statement -> . BEGIN statementList END
    (13) statement -> . BREAK
    (14) statement -> . SKIP
    (15) statement -> . ID LPAREN RPAREN
    (16) statement -> . ID LPAREN exprList RPAREN
    (17) statement -> . RETURN expr
    (18) statement -> . READ LPAREN location RPAREN
    (19) statement -> . WRITE LPAREN expr RPAREN
    (20) statement -> . PRINT LPAREN STRING RPAREN
    (21) statement -> . location ASSIGN expr
    (22) statement -> . IF relation THEN statement ELSE statement
    (23) statement -> . WHILE relation DO statement
    (67) location -> . ID LBRACKET expr RBRACKET
    (68) location -> . ID
    BEGIN           shift and go to state 24
    BREAK           shift and go to state 30
    SKIP            shift and go to state 31
    ID              shift and go to state 23
    RETURN          shift and go to state 32
    READ            shift and go to state 33
    WRITE           shift and go to state 35
    PRINT           shift and go to state 36
    IF              shift and go to state 122
    WHILE           shift and go to state 37

    statement                      shift and go to state 152
    location                       shift and go to state 34

state 151

    (22) statement -> IF relation THEN statement ELSE statement .
    SEMICOLON       reduce using rule 22 (statement -> IF relation THEN statement ELSE statement .)
    END             reduce using rule 22 (statement -> IF relation THEN statement ELSE statement .)
    ELSE            reduce using rule 22 (statement -> IF relation THEN statement ELSE statement .)


state 152

    (22) statement -> IF relation THEN statement . ELSE statement
    ELSE            shift and go to state 145
