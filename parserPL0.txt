Grammar:

Rule 0     S' -> funcList
Rule 1     funcList -> func
Rule 2     funcList -> func funcList
Rule 3     func -> FUN ID LPAREN RPAREN varList statementList
Rule 4     func -> FUN ID LPAREN argList RPAREN varList statementList
Rule 5     statementList -> statements
Rule 6     statementList -> statements SEMICOLON statementList
Rule 7     statements -> noStatement
Rule 8     statements -> statement
Rule 9     statement -> BEGIN statementList END
Rule 10    statement -> BREAK
Rule 11    statement -> SKIP
Rule 12    statement -> ID LPAREN exprList RPAREN
Rule 13    statement -> RETURN expr
Rule 14    statement -> READ LPAREN location RPAREN
Rule 15    statement -> WRITE LPAREN expr RPAREN
Rule 16    statement -> PRINT LPAREN STRING RPAREN
Rule 17    statement -> ID ASSIGN expr
Rule 18    statement -> IF relation THEN statement ELSE statement
Rule 19    statement -> WHILE relation DO statement
Rule 20    noStatement -> IF relation THEN statement
Rule 21    relation -> LPAREN relation RPAREN
Rule 22    relation -> NOT relation  [precedence=right, level=6]
Rule 23    relation -> expr relExpr expr
Rule 24    relExpr -> OR  [precedence=left, level=1]
Rule 25    relExpr -> AND  [precedence=left, level=1]
Rule 26    relExpr -> NEQ  [precedence=left, level=2]
Rule 27    relExpr -> EQ  [precedence=left, level=2]
Rule 28    relExpr -> GT  [precedence=left, level=3]
Rule 29    relExpr -> GTE  [precedence=left, level=3]
Rule 30    relExpr -> LT  [precedence=left, level=3]
Rule 31    relExpr -> LTE  [precedence=left, level=3]
Rule 32    exprList -> expr
Rule 33    exprList -> expr COMMA exprList
Rule 34    expr -> TFLOAT LPAREN expr RPAREN
Rule 35    expr -> TINT LPAREN expr RPAREN
Rule 36    expr -> number
Rule 37    expr -> ID LBRACKET expr RBRACKET
Rule 38    expr -> ID
Rule 39    expr -> ID LPAREN exprList RPAREN
Rule 40    expr -> LPAREN expr RPAREN
Rule 41    expr -> PLUS expr  [precedence=right, level=6]
Rule 42    expr -> MINUS expr  [precedence=right, level=6]
Rule 43    expr -> expr DIVIDE expr  [precedence=left, level=5]
Rule 44    expr -> expr TIMES expr  [precedence=left, level=5]
Rule 45    expr -> expr MINUS expr  [precedence=left, level=4]
Rule 46    expr -> expr PLUS expr  [precedence=left, level=4]
Rule 47    argList -> varDecl
Rule 48    argList -> varDecl COMMA argList
Rule 49    varList -> func SEMICOLON
Rule 50    varList -> varDecl
Rule 51    varList -> func varList
Rule 52    varList -> varDecl varList
Rule 53    varDecl -> ID COLON vectorType SEMICOLON
Rule 54    varDecl -> ID COLON varType SEMICOLON
Rule 55    varType -> TFLOAT
Rule 56    varType -> TINT
Rule 57    vectorType -> TFLOAT LBRACKET expr RBRACKET
Rule 58    vectorType -> TINT LBRACKET expr RBRACKET
Rule 59    number -> FLOAT
Rule 60    number -> INT
Rule 61    location -> ID LBRACKET ID RBRACKET
Rule 62    location -> ID LBRACKET INT RBRACKET
Rule 63    location -> ID

Terminals, with rules where they appear:

AND                  : 25
ASSIGN               : 17
BEGIN                : 9
BREAK                : 10
COLON                : 53 54
COMMA                : 33 48
DIVIDE               : 43
DO                   : 19
ELSE                 : 18
END                  : 9
EQ                   : 27
FLOAT                : 59
FUN                  : 3 4
GT                   : 28
GTE                  : 29
ID                   : 3 4 12 17 37 38 39 53 54 61 61 62 63
IF                   : 18 20
INT                  : 60 62
LBRACKET             : 37 57 58 61 62
LPAREN               : 3 4 12 14 15 16 21 34 35 39 40
LT                   : 30
LTE                  : 31
MINUS                : 42 45
NEQ                  : 26
NOT                  : 22
OR                   : 24
PLUS                 : 41 46
PRINT                : 16
RBRACKET             : 37 57 58 61 62
READ                 : 14
RETURN               : 13
RPAREN               : 3 4 12 14 15 16 21 34 35 39 40
SEMICOLON            : 6 49 53 54
SKIP                 : 11
STRING               : 16
TFLOAT               : 34 55 57
THEN                 : 18 20
TIMES                : 44
TINT                 : 35 56 58
WHILE                : 19
WRITE                : 15
error                : 

Nonterminals, with rules where they appear:

argList              : 4 48
expr                 : 13 15 17 23 23 32 33 34 35 37 40 41 42 43 43 44 44 45 45 46 46 57 58
exprList             : 12 33 39
func                 : 1 2 49 51
funcList             : 2 0
location             : 14
noStatement          : 7
number               : 36
relExpr              : 23
relation             : 18 19 20 21 22
statement            : 8 18 18 19 20
statementList        : 3 4 6 9
statements           : 5 6
varDecl              : 47 48 50 52
varList              : 3 4 51 52
varType              : 54
vectorType           : 53


state 0

    (0) S' -> . funcList
    (1) funcList -> . func
    (2) funcList -> . func funcList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    FUN             shift and go to state 3

    funcList                       shift and go to state 1
    func                           shift and go to state 2

state 1

    (0) S' -> funcList .


state 2

    (1) funcList -> func .
    (2) funcList -> func . funcList
    (1) funcList -> . func
    (2) funcList -> . func funcList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    $end            reduce using rule 1 (funcList -> func .)
    FUN             shift and go to state 3

    func                           shift and go to state 2
    funcList                       shift and go to state 4

state 3

    (3) func -> FUN . ID LPAREN RPAREN varList statementList
    (4) func -> FUN . ID LPAREN argList RPAREN varList statementList
    ID              shift and go to state 5


state 4

    (2) funcList -> func funcList .
    $end            reduce using rule 2 (funcList -> func funcList .)


state 5

    (3) func -> FUN ID . LPAREN RPAREN varList statementList
    (4) func -> FUN ID . LPAREN argList RPAREN varList statementList
    LPAREN          shift and go to state 6


state 6

    (3) func -> FUN ID LPAREN . RPAREN varList statementList
    (4) func -> FUN ID LPAREN . argList RPAREN varList statementList
    (47) argList -> . varDecl
    (48) argList -> . varDecl COMMA argList
    (53) varDecl -> . ID COLON vectorType SEMICOLON
    (54) varDecl -> . ID COLON varType SEMICOLON
    RPAREN          shift and go to state 8
    ID              shift and go to state 7

    argList                        shift and go to state 9
    varDecl                        shift and go to state 10

state 7

    (53) varDecl -> ID . COLON vectorType SEMICOLON
    (54) varDecl -> ID . COLON varType SEMICOLON
    COLON           shift and go to state 11


state 8

    (3) func -> FUN ID LPAREN RPAREN . varList statementList
    (49) varList -> . func SEMICOLON
    (50) varList -> . varDecl
    (51) varList -> . func varList
    (52) varList -> . varDecl varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType SEMICOLON
    (54) varDecl -> . ID COLON varType SEMICOLON
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varList                        shift and go to state 12
    func                           shift and go to state 13
    varDecl                        shift and go to state 14

state 9

    (4) func -> FUN ID LPAREN argList . RPAREN varList statementList
    RPAREN          shift and go to state 15


state 10

    (47) argList -> varDecl .
    (48) argList -> varDecl . COMMA argList
    RPAREN          reduce using rule 47 (argList -> varDecl .)
    COMMA           shift and go to state 16


state 11

    (53) varDecl -> ID COLON . vectorType SEMICOLON
    (54) varDecl -> ID COLON . varType SEMICOLON
    (57) vectorType -> . TFLOAT LBRACKET expr RBRACKET
    (58) vectorType -> . TINT LBRACKET expr RBRACKET
    (55) varType -> . TFLOAT
    (56) varType -> . TINT
    TFLOAT          shift and go to state 19
    TINT            shift and go to state 20

    vectorType                     shift and go to state 17
    varType                        shift and go to state 18

state 12

    (3) func -> FUN ID LPAREN RPAREN varList . statementList
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 22
    statements                     shift and go to state 23
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 13

    (49) varList -> func . SEMICOLON
    (51) varList -> func . varList
    (49) varList -> . func SEMICOLON
    (50) varList -> . varDecl
    (51) varList -> . func varList
    (52) varList -> . varDecl varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType SEMICOLON
    (54) varDecl -> . ID COLON varType SEMICOLON
    SEMICOLON       shift and go to state 35
    FUN             shift and go to state 3
    ID              shift and go to state 7

    func                           shift and go to state 13
    varList                        shift and go to state 36
    varDecl                        shift and go to state 14

state 14

    (50) varList -> varDecl .
    (52) varList -> varDecl . varList
    (49) varList -> . func SEMICOLON
    (50) varList -> . varDecl
    (51) varList -> . func varList
    (52) varList -> . varDecl varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType SEMICOLON
    (54) varDecl -> . ID COLON varType SEMICOLON
  ! shift/reduce conflict for ID resolved as shift
    IF              reduce using rule 50 (varList -> varDecl .)
    BEGIN           reduce using rule 50 (varList -> varDecl .)
    BREAK           reduce using rule 50 (varList -> varDecl .)
    SKIP            reduce using rule 50 (varList -> varDecl .)
    RETURN          reduce using rule 50 (varList -> varDecl .)
    READ            reduce using rule 50 (varList -> varDecl .)
    WRITE           reduce using rule 50 (varList -> varDecl .)
    PRINT           reduce using rule 50 (varList -> varDecl .)
    WHILE           reduce using rule 50 (varList -> varDecl .)
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varDecl                        shift and go to state 14
    varList                        shift and go to state 37
    func                           shift and go to state 13

state 15

    (4) func -> FUN ID LPAREN argList RPAREN . varList statementList
    (49) varList -> . func SEMICOLON
    (50) varList -> . varDecl
    (51) varList -> . func varList
    (52) varList -> . varDecl varList
    (3) func -> . FUN ID LPAREN RPAREN varList statementList
    (4) func -> . FUN ID LPAREN argList RPAREN varList statementList
    (53) varDecl -> . ID COLON vectorType SEMICOLON
    (54) varDecl -> . ID COLON varType SEMICOLON
    FUN             shift and go to state 3
    ID              shift and go to state 7

    varList                        shift and go to state 38
    func                           shift and go to state 13
    varDecl                        shift and go to state 14

state 16

    (48) argList -> varDecl COMMA . argList
    (47) argList -> . varDecl
    (48) argList -> . varDecl COMMA argList
    (53) varDecl -> . ID COLON vectorType SEMICOLON
    (54) varDecl -> . ID COLON varType SEMICOLON
    ID              shift and go to state 7

    varDecl                        shift and go to state 10
    argList                        shift and go to state 39

state 17

    (53) varDecl -> ID COLON vectorType . SEMICOLON
    SEMICOLON       shift and go to state 40


state 18

    (54) varDecl -> ID COLON varType . SEMICOLON
    SEMICOLON       shift and go to state 41


state 19

    (57) vectorType -> TFLOAT . LBRACKET expr RBRACKET
    (55) varType -> TFLOAT .
    LBRACKET        shift and go to state 42
    SEMICOLON       reduce using rule 55 (varType -> TFLOAT .)


state 20

    (58) vectorType -> TINT . LBRACKET expr RBRACKET
    (56) varType -> TINT .
    LBRACKET        shift and go to state 43
    SEMICOLON       reduce using rule 56 (varType -> TINT .)


state 21

    (12) statement -> ID . LPAREN exprList RPAREN
    (17) statement -> ID . ASSIGN expr
    LPAREN          shift and go to state 44
    ASSIGN          shift and go to state 45


state 22

    (3) func -> FUN ID LPAREN RPAREN varList statementList .
    FUN             reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    $end            reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    SEMICOLON       reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)
    ID              reduce using rule 3 (func -> FUN ID LPAREN RPAREN varList statementList .)


state 23

    (5) statementList -> statements .
    (6) statementList -> statements . SEMICOLON statementList
  ! shift/reduce conflict for SEMICOLON resolved as shift
    FUN             reduce using rule 5 (statementList -> statements .)
    $end            reduce using rule 5 (statementList -> statements .)
    ID              reduce using rule 5 (statementList -> statements .)
    END             reduce using rule 5 (statementList -> statements .)
    SEMICOLON       shift and go to state 46


state 24

    (7) statements -> noStatement .
    SEMICOLON       reduce using rule 7 (statements -> noStatement .)
    FUN             reduce using rule 7 (statements -> noStatement .)
    $end            reduce using rule 7 (statements -> noStatement .)
    ID              reduce using rule 7 (statements -> noStatement .)
    END             reduce using rule 7 (statements -> noStatement .)


state 25

    (8) statements -> statement .
    SEMICOLON       reduce using rule 8 (statements -> statement .)
    FUN             reduce using rule 8 (statements -> statement .)
    $end            reduce using rule 8 (statements -> statement .)
    ID              reduce using rule 8 (statements -> statement .)
    END             reduce using rule 8 (statements -> statement .)


state 26

    (20) noStatement -> IF . relation THEN statement
    (18) statement -> IF . relation THEN statement ELSE statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 48
    NOT             shift and go to state 49
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    relation                       shift and go to state 47
    expr                           shift and go to state 50
    number                         shift and go to state 53

state 27

    (9) statement -> BEGIN . statementList END
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 59
    statements                     shift and go to state 23
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 28

    (10) statement -> BREAK .
    SEMICOLON       reduce using rule 10 (statement -> BREAK .)
    FUN             reduce using rule 10 (statement -> BREAK .)
    $end            reduce using rule 10 (statement -> BREAK .)
    ID              reduce using rule 10 (statement -> BREAK .)
    END             reduce using rule 10 (statement -> BREAK .)
    ELSE            reduce using rule 10 (statement -> BREAK .)


state 29

    (11) statement -> SKIP .
    SEMICOLON       reduce using rule 11 (statement -> SKIP .)
    FUN             reduce using rule 11 (statement -> SKIP .)
    $end            reduce using rule 11 (statement -> SKIP .)
    ID              reduce using rule 11 (statement -> SKIP .)
    END             reduce using rule 11 (statement -> SKIP .)
    ELSE            reduce using rule 11 (statement -> SKIP .)


state 30

    (13) statement -> RETURN . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 60
    number                         shift and go to state 53

state 31

    (14) statement -> READ . LPAREN location RPAREN
    LPAREN          shift and go to state 62


state 32

    (15) statement -> WRITE . LPAREN expr RPAREN
    LPAREN          shift and go to state 63


state 33

    (16) statement -> PRINT . LPAREN STRING RPAREN
    LPAREN          shift and go to state 64


state 34

    (19) statement -> WHILE . relation DO statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 48
    NOT             shift and go to state 49
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    relation                       shift and go to state 65
    expr                           shift and go to state 50
    number                         shift and go to state 53

state 35

    (49) varList -> func SEMICOLON .
    IF              reduce using rule 49 (varList -> func SEMICOLON .)
    BEGIN           reduce using rule 49 (varList -> func SEMICOLON .)
    BREAK           reduce using rule 49 (varList -> func SEMICOLON .)
    SKIP            reduce using rule 49 (varList -> func SEMICOLON .)
    ID              reduce using rule 49 (varList -> func SEMICOLON .)
    RETURN          reduce using rule 49 (varList -> func SEMICOLON .)
    READ            reduce using rule 49 (varList -> func SEMICOLON .)
    WRITE           reduce using rule 49 (varList -> func SEMICOLON .)
    PRINT           reduce using rule 49 (varList -> func SEMICOLON .)
    WHILE           reduce using rule 49 (varList -> func SEMICOLON .)


state 36

    (51) varList -> func varList .
    IF              reduce using rule 51 (varList -> func varList .)
    BEGIN           reduce using rule 51 (varList -> func varList .)
    BREAK           reduce using rule 51 (varList -> func varList .)
    SKIP            reduce using rule 51 (varList -> func varList .)
    ID              reduce using rule 51 (varList -> func varList .)
    RETURN          reduce using rule 51 (varList -> func varList .)
    READ            reduce using rule 51 (varList -> func varList .)
    WRITE           reduce using rule 51 (varList -> func varList .)
    PRINT           reduce using rule 51 (varList -> func varList .)
    WHILE           reduce using rule 51 (varList -> func varList .)


state 37

    (52) varList -> varDecl varList .
    IF              reduce using rule 52 (varList -> varDecl varList .)
    BEGIN           reduce using rule 52 (varList -> varDecl varList .)
    BREAK           reduce using rule 52 (varList -> varDecl varList .)
    SKIP            reduce using rule 52 (varList -> varDecl varList .)
    ID              reduce using rule 52 (varList -> varDecl varList .)
    RETURN          reduce using rule 52 (varList -> varDecl varList .)
    READ            reduce using rule 52 (varList -> varDecl varList .)
    WRITE           reduce using rule 52 (varList -> varDecl varList .)
    PRINT           reduce using rule 52 (varList -> varDecl varList .)
    WHILE           reduce using rule 52 (varList -> varDecl varList .)


state 38

    (4) func -> FUN ID LPAREN argList RPAREN varList . statementList
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statementList                  shift and go to state 66
    statements                     shift and go to state 23
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 39

    (48) argList -> varDecl COMMA argList .
    RPAREN          reduce using rule 48 (argList -> varDecl COMMA argList .)


state 40

    (53) varDecl -> ID COLON vectorType SEMICOLON .
    COMMA           reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    RPAREN          reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    FUN             reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    ID              reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    IF              reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    BEGIN           reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    BREAK           reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    SKIP            reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    RETURN          reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    READ            reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    WRITE           reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    PRINT           reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)
    WHILE           reduce using rule 53 (varDecl -> ID COLON vectorType SEMICOLON .)


state 41

    (54) varDecl -> ID COLON varType SEMICOLON .
    COMMA           reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    RPAREN          reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    FUN             reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    ID              reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    IF              reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    BEGIN           reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    BREAK           reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    SKIP            reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    RETURN          reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    READ            reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    WRITE           reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    PRINT           reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)
    WHILE           reduce using rule 54 (varDecl -> ID COLON varType SEMICOLON .)


state 42

    (57) vectorType -> TFLOAT LBRACKET . expr RBRACKET
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 67
    number                         shift and go to state 53

state 43

    (58) vectorType -> TINT LBRACKET . expr RBRACKET
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 68
    number                         shift and go to state 53

state 44

    (12) statement -> ID LPAREN . exprList RPAREN
    (32) exprList -> . expr
    (33) exprList -> . expr COMMA exprList
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    exprList                       shift and go to state 69
    expr                           shift and go to state 70
    number                         shift and go to state 53

state 45

    (17) statement -> ID ASSIGN . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 71
    number                         shift and go to state 53

state 46

    (6) statementList -> statements SEMICOLON . statementList
    (5) statementList -> . statements
    (6) statementList -> . statements SEMICOLON statementList
    (7) statements -> . noStatement
    (8) statements -> . statement
    (20) noStatement -> . IF relation THEN statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    IF              shift and go to state 26
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    WHILE           shift and go to state 34

    statements                     shift and go to state 23
    statementList                  shift and go to state 72
    noStatement                    shift and go to state 24
    statement                      shift and go to state 25

state 47

    (20) noStatement -> IF relation . THEN statement
    (18) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 73


state 48

    (21) relation -> LPAREN . relation RPAREN
    (40) expr -> LPAREN . expr RPAREN
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 48
    NOT             shift and go to state 49
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    relation                       shift and go to state 74
    expr                           shift and go to state 75
    number                         shift and go to state 53

state 49

    (22) relation -> NOT . relation
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 48
    NOT             shift and go to state 49
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    relation                       shift and go to state 76
    expr                           shift and go to state 50
    number                         shift and go to state 53

state 50

    (23) relation -> expr . relExpr expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    (24) relExpr -> . OR
    (25) relExpr -> . AND
    (26) relExpr -> . NEQ
    (27) relExpr -> . EQ
    (28) relExpr -> . GT
    (29) relExpr -> . GTE
    (30) relExpr -> . LT
    (31) relExpr -> . LTE
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81
    OR              shift and go to state 82
    AND             shift and go to state 83
    NEQ             shift and go to state 84
    EQ              shift and go to state 85
    GT              shift and go to state 86
    GTE             shift and go to state 87
    LT              shift and go to state 88
    LTE             shift and go to state 89

    relExpr                        shift and go to state 77

state 51

    (34) expr -> TFLOAT . LPAREN expr RPAREN
    LPAREN          shift and go to state 90


state 52

    (35) expr -> TINT . LPAREN expr RPAREN
    LPAREN          shift and go to state 91


state 53

    (36) expr -> number .
    DIVIDE          reduce using rule 36 (expr -> number .)
    TIMES           reduce using rule 36 (expr -> number .)
    MINUS           reduce using rule 36 (expr -> number .)
    PLUS            reduce using rule 36 (expr -> number .)
    OR              reduce using rule 36 (expr -> number .)
    AND             reduce using rule 36 (expr -> number .)
    NEQ             reduce using rule 36 (expr -> number .)
    EQ              reduce using rule 36 (expr -> number .)
    GT              reduce using rule 36 (expr -> number .)
    GTE             reduce using rule 36 (expr -> number .)
    LT              reduce using rule 36 (expr -> number .)
    LTE             reduce using rule 36 (expr -> number .)
    SEMICOLON       reduce using rule 36 (expr -> number .)
    FUN             reduce using rule 36 (expr -> number .)
    $end            reduce using rule 36 (expr -> number .)
    ID              reduce using rule 36 (expr -> number .)
    END             reduce using rule 36 (expr -> number .)
    ELSE            reduce using rule 36 (expr -> number .)
    RBRACKET        reduce using rule 36 (expr -> number .)
    COMMA           reduce using rule 36 (expr -> number .)
    RPAREN          reduce using rule 36 (expr -> number .)
    THEN            reduce using rule 36 (expr -> number .)
    DO              reduce using rule 36 (expr -> number .)


state 54

    (37) expr -> ID . LBRACKET expr RBRACKET
    (38) expr -> ID .
    (39) expr -> ID . LPAREN exprList RPAREN
    LBRACKET        shift and go to state 92
    DIVIDE          reduce using rule 38 (expr -> ID .)
    TIMES           reduce using rule 38 (expr -> ID .)
    MINUS           reduce using rule 38 (expr -> ID .)
    PLUS            reduce using rule 38 (expr -> ID .)
    OR              reduce using rule 38 (expr -> ID .)
    AND             reduce using rule 38 (expr -> ID .)
    NEQ             reduce using rule 38 (expr -> ID .)
    EQ              reduce using rule 38 (expr -> ID .)
    GT              reduce using rule 38 (expr -> ID .)
    GTE             reduce using rule 38 (expr -> ID .)
    LT              reduce using rule 38 (expr -> ID .)
    LTE             reduce using rule 38 (expr -> ID .)
    SEMICOLON       reduce using rule 38 (expr -> ID .)
    FUN             reduce using rule 38 (expr -> ID .)
    $end            reduce using rule 38 (expr -> ID .)
    ID              reduce using rule 38 (expr -> ID .)
    END             reduce using rule 38 (expr -> ID .)
    ELSE            reduce using rule 38 (expr -> ID .)
    RBRACKET        reduce using rule 38 (expr -> ID .)
    COMMA           reduce using rule 38 (expr -> ID .)
    RPAREN          reduce using rule 38 (expr -> ID .)
    THEN            reduce using rule 38 (expr -> ID .)
    DO              reduce using rule 38 (expr -> ID .)
    LPAREN          shift and go to state 93


state 55

    (41) expr -> PLUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 94
    number                         shift and go to state 53

state 56

    (42) expr -> MINUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 95
    number                         shift and go to state 53

state 57

    (59) number -> FLOAT .
    DIVIDE          reduce using rule 59 (number -> FLOAT .)
    TIMES           reduce using rule 59 (number -> FLOAT .)
    MINUS           reduce using rule 59 (number -> FLOAT .)
    PLUS            reduce using rule 59 (number -> FLOAT .)
    OR              reduce using rule 59 (number -> FLOAT .)
    AND             reduce using rule 59 (number -> FLOAT .)
    NEQ             reduce using rule 59 (number -> FLOAT .)
    EQ              reduce using rule 59 (number -> FLOAT .)
    GT              reduce using rule 59 (number -> FLOAT .)
    GTE             reduce using rule 59 (number -> FLOAT .)
    LT              reduce using rule 59 (number -> FLOAT .)
    LTE             reduce using rule 59 (number -> FLOAT .)
    SEMICOLON       reduce using rule 59 (number -> FLOAT .)
    FUN             reduce using rule 59 (number -> FLOAT .)
    $end            reduce using rule 59 (number -> FLOAT .)
    ID              reduce using rule 59 (number -> FLOAT .)
    END             reduce using rule 59 (number -> FLOAT .)
    ELSE            reduce using rule 59 (number -> FLOAT .)
    RBRACKET        reduce using rule 59 (number -> FLOAT .)
    COMMA           reduce using rule 59 (number -> FLOAT .)
    RPAREN          reduce using rule 59 (number -> FLOAT .)
    THEN            reduce using rule 59 (number -> FLOAT .)
    DO              reduce using rule 59 (number -> FLOAT .)


state 58

    (60) number -> INT .
    DIVIDE          reduce using rule 60 (number -> INT .)
    TIMES           reduce using rule 60 (number -> INT .)
    MINUS           reduce using rule 60 (number -> INT .)
    PLUS            reduce using rule 60 (number -> INT .)
    OR              reduce using rule 60 (number -> INT .)
    AND             reduce using rule 60 (number -> INT .)
    NEQ             reduce using rule 60 (number -> INT .)
    EQ              reduce using rule 60 (number -> INT .)
    GT              reduce using rule 60 (number -> INT .)
    GTE             reduce using rule 60 (number -> INT .)
    LT              reduce using rule 60 (number -> INT .)
    LTE             reduce using rule 60 (number -> INT .)
    SEMICOLON       reduce using rule 60 (number -> INT .)
    FUN             reduce using rule 60 (number -> INT .)
    $end            reduce using rule 60 (number -> INT .)
    ID              reduce using rule 60 (number -> INT .)
    END             reduce using rule 60 (number -> INT .)
    ELSE            reduce using rule 60 (number -> INT .)
    RBRACKET        reduce using rule 60 (number -> INT .)
    COMMA           reduce using rule 60 (number -> INT .)
    RPAREN          reduce using rule 60 (number -> INT .)
    THEN            reduce using rule 60 (number -> INT .)
    DO              reduce using rule 60 (number -> INT .)


state 59

    (9) statement -> BEGIN statementList . END
    END             shift and go to state 96


state 60

    (13) statement -> RETURN expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 13 (statement -> RETURN expr .)
    FUN             reduce using rule 13 (statement -> RETURN expr .)
    $end            reduce using rule 13 (statement -> RETURN expr .)
    ID              reduce using rule 13 (statement -> RETURN expr .)
    END             reduce using rule 13 (statement -> RETURN expr .)
    ELSE            reduce using rule 13 (statement -> RETURN expr .)
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 61

    (40) expr -> LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 97
    number                         shift and go to state 53

state 62

    (14) statement -> READ LPAREN . location RPAREN
    (61) location -> . ID LBRACKET ID RBRACKET
    (62) location -> . ID LBRACKET INT RBRACKET
    (63) location -> . ID
    ID              shift and go to state 99

    location                       shift and go to state 98

state 63

    (15) statement -> WRITE LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 100
    number                         shift and go to state 53

state 64

    (16) statement -> PRINT LPAREN . STRING RPAREN
    STRING          shift and go to state 101


state 65

    (19) statement -> WHILE relation . DO statement
    DO              shift and go to state 102


state 66

    (4) func -> FUN ID LPAREN argList RPAREN varList statementList .
    FUN             reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    $end            reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    SEMICOLON       reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)
    ID              reduce using rule 4 (func -> FUN ID LPAREN argList RPAREN varList statementList .)


state 67

    (57) vectorType -> TFLOAT LBRACKET expr . RBRACKET
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 103
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 68

    (58) vectorType -> TINT LBRACKET expr . RBRACKET
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 104
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 69

    (12) statement -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 105


state 70

    (32) exprList -> expr .
    (33) exprList -> expr . COMMA exprList
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          reduce using rule 32 (exprList -> expr .)
    COMMA           shift and go to state 106
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 71

    (17) statement -> ID ASSIGN expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    SEMICOLON       reduce using rule 17 (statement -> ID ASSIGN expr .)
    FUN             reduce using rule 17 (statement -> ID ASSIGN expr .)
    $end            reduce using rule 17 (statement -> ID ASSIGN expr .)
    ID              reduce using rule 17 (statement -> ID ASSIGN expr .)
    END             reduce using rule 17 (statement -> ID ASSIGN expr .)
    ELSE            reduce using rule 17 (statement -> ID ASSIGN expr .)
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 72

    (6) statementList -> statements SEMICOLON statementList .
    FUN             reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    $end            reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    SEMICOLON       reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    ID              reduce using rule 6 (statementList -> statements SEMICOLON statementList .)
    END             reduce using rule 6 (statementList -> statements SEMICOLON statementList .)


state 73

    (20) noStatement -> IF relation THEN . statement
    (18) statement -> IF relation THEN . statement ELSE statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 107
    WHILE           shift and go to state 34

    statement                      shift and go to state 108

state 74

    (21) relation -> LPAREN relation . RPAREN
    RPAREN          shift and go to state 109


state 75

    (40) expr -> LPAREN expr . RPAREN
    (23) relation -> expr . relExpr expr
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    (24) relExpr -> . OR
    (25) relExpr -> . AND
    (26) relExpr -> . NEQ
    (27) relExpr -> . EQ
    (28) relExpr -> . GT
    (29) relExpr -> . GTE
    (30) relExpr -> . LT
    (31) relExpr -> . LTE
    RPAREN          shift and go to state 110
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81
    OR              shift and go to state 82
    AND             shift and go to state 83
    NEQ             shift and go to state 84
    EQ              shift and go to state 85
    GT              shift and go to state 86
    GTE             shift and go to state 87
    LT              shift and go to state 88
    LTE             shift and go to state 89

    relExpr                        shift and go to state 77

state 76

    (22) relation -> NOT relation .
    THEN            reduce using rule 22 (relation -> NOT relation .)
    DO              reduce using rule 22 (relation -> NOT relation .)
    RPAREN          reduce using rule 22 (relation -> NOT relation .)


state 77

    (23) relation -> expr relExpr . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 111
    number                         shift and go to state 53

state 78

    (43) expr -> expr DIVIDE . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 112
    number                         shift and go to state 53

state 79

    (44) expr -> expr TIMES . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 113
    number                         shift and go to state 53

state 80

    (45) expr -> expr MINUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 114
    number                         shift and go to state 53

state 81

    (46) expr -> expr PLUS . expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 115
    number                         shift and go to state 53

state 82

    (24) relExpr -> OR .
    TFLOAT          reduce using rule 24 (relExpr -> OR .)
    TINT            reduce using rule 24 (relExpr -> OR .)
    ID              reduce using rule 24 (relExpr -> OR .)
    LPAREN          reduce using rule 24 (relExpr -> OR .)
    PLUS            reduce using rule 24 (relExpr -> OR .)
    MINUS           reduce using rule 24 (relExpr -> OR .)
    FLOAT           reduce using rule 24 (relExpr -> OR .)
    INT             reduce using rule 24 (relExpr -> OR .)


state 83

    (25) relExpr -> AND .
    TFLOAT          reduce using rule 25 (relExpr -> AND .)
    TINT            reduce using rule 25 (relExpr -> AND .)
    ID              reduce using rule 25 (relExpr -> AND .)
    LPAREN          reduce using rule 25 (relExpr -> AND .)
    PLUS            reduce using rule 25 (relExpr -> AND .)
    MINUS           reduce using rule 25 (relExpr -> AND .)
    FLOAT           reduce using rule 25 (relExpr -> AND .)
    INT             reduce using rule 25 (relExpr -> AND .)


state 84

    (26) relExpr -> NEQ .
    TFLOAT          reduce using rule 26 (relExpr -> NEQ .)
    TINT            reduce using rule 26 (relExpr -> NEQ .)
    ID              reduce using rule 26 (relExpr -> NEQ .)
    LPAREN          reduce using rule 26 (relExpr -> NEQ .)
    PLUS            reduce using rule 26 (relExpr -> NEQ .)
    MINUS           reduce using rule 26 (relExpr -> NEQ .)
    FLOAT           reduce using rule 26 (relExpr -> NEQ .)
    INT             reduce using rule 26 (relExpr -> NEQ .)


state 85

    (27) relExpr -> EQ .
    TFLOAT          reduce using rule 27 (relExpr -> EQ .)
    TINT            reduce using rule 27 (relExpr -> EQ .)
    ID              reduce using rule 27 (relExpr -> EQ .)
    LPAREN          reduce using rule 27 (relExpr -> EQ .)
    PLUS            reduce using rule 27 (relExpr -> EQ .)
    MINUS           reduce using rule 27 (relExpr -> EQ .)
    FLOAT           reduce using rule 27 (relExpr -> EQ .)
    INT             reduce using rule 27 (relExpr -> EQ .)


state 86

    (28) relExpr -> GT .
    TFLOAT          reduce using rule 28 (relExpr -> GT .)
    TINT            reduce using rule 28 (relExpr -> GT .)
    ID              reduce using rule 28 (relExpr -> GT .)
    LPAREN          reduce using rule 28 (relExpr -> GT .)
    PLUS            reduce using rule 28 (relExpr -> GT .)
    MINUS           reduce using rule 28 (relExpr -> GT .)
    FLOAT           reduce using rule 28 (relExpr -> GT .)
    INT             reduce using rule 28 (relExpr -> GT .)


state 87

    (29) relExpr -> GTE .
    TFLOAT          reduce using rule 29 (relExpr -> GTE .)
    TINT            reduce using rule 29 (relExpr -> GTE .)
    ID              reduce using rule 29 (relExpr -> GTE .)
    LPAREN          reduce using rule 29 (relExpr -> GTE .)
    PLUS            reduce using rule 29 (relExpr -> GTE .)
    MINUS           reduce using rule 29 (relExpr -> GTE .)
    FLOAT           reduce using rule 29 (relExpr -> GTE .)
    INT             reduce using rule 29 (relExpr -> GTE .)


state 88

    (30) relExpr -> LT .
    TFLOAT          reduce using rule 30 (relExpr -> LT .)
    TINT            reduce using rule 30 (relExpr -> LT .)
    ID              reduce using rule 30 (relExpr -> LT .)
    LPAREN          reduce using rule 30 (relExpr -> LT .)
    PLUS            reduce using rule 30 (relExpr -> LT .)
    MINUS           reduce using rule 30 (relExpr -> LT .)
    FLOAT           reduce using rule 30 (relExpr -> LT .)
    INT             reduce using rule 30 (relExpr -> LT .)


state 89

    (31) relExpr -> LTE .
    TFLOAT          reduce using rule 31 (relExpr -> LTE .)
    TINT            reduce using rule 31 (relExpr -> LTE .)
    ID              reduce using rule 31 (relExpr -> LTE .)
    LPAREN          reduce using rule 31 (relExpr -> LTE .)
    PLUS            reduce using rule 31 (relExpr -> LTE .)
    MINUS           reduce using rule 31 (relExpr -> LTE .)
    FLOAT           reduce using rule 31 (relExpr -> LTE .)
    INT             reduce using rule 31 (relExpr -> LTE .)


state 90

    (34) expr -> TFLOAT LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 116
    number                         shift and go to state 53

state 91

    (35) expr -> TINT LPAREN . expr RPAREN
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 117
    number                         shift and go to state 53

state 92

    (37) expr -> ID LBRACKET . expr RBRACKET
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 118
    number                         shift and go to state 53

state 93

    (39) expr -> ID LPAREN . exprList RPAREN
    (32) exprList -> . expr
    (33) exprList -> . expr COMMA exprList
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    exprList                       shift and go to state 119
    expr                           shift and go to state 70
    number                         shift and go to state 53

state 94

    (41) expr -> PLUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 41 (expr -> PLUS expr .)
    TIMES           reduce using rule 41 (expr -> PLUS expr .)
    MINUS           reduce using rule 41 (expr -> PLUS expr .)
    PLUS            reduce using rule 41 (expr -> PLUS expr .)
    OR              reduce using rule 41 (expr -> PLUS expr .)
    AND             reduce using rule 41 (expr -> PLUS expr .)
    NEQ             reduce using rule 41 (expr -> PLUS expr .)
    EQ              reduce using rule 41 (expr -> PLUS expr .)
    GT              reduce using rule 41 (expr -> PLUS expr .)
    GTE             reduce using rule 41 (expr -> PLUS expr .)
    LT              reduce using rule 41 (expr -> PLUS expr .)
    LTE             reduce using rule 41 (expr -> PLUS expr .)
    SEMICOLON       reduce using rule 41 (expr -> PLUS expr .)
    FUN             reduce using rule 41 (expr -> PLUS expr .)
    $end            reduce using rule 41 (expr -> PLUS expr .)
    ID              reduce using rule 41 (expr -> PLUS expr .)
    END             reduce using rule 41 (expr -> PLUS expr .)
    ELSE            reduce using rule 41 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 41 (expr -> PLUS expr .)
    COMMA           reduce using rule 41 (expr -> PLUS expr .)
    RPAREN          reduce using rule 41 (expr -> PLUS expr .)
    THEN            reduce using rule 41 (expr -> PLUS expr .)
    DO              reduce using rule 41 (expr -> PLUS expr .)


state 95

    (42) expr -> MINUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 42 (expr -> MINUS expr .)
    TIMES           reduce using rule 42 (expr -> MINUS expr .)
    MINUS           reduce using rule 42 (expr -> MINUS expr .)
    PLUS            reduce using rule 42 (expr -> MINUS expr .)
    OR              reduce using rule 42 (expr -> MINUS expr .)
    AND             reduce using rule 42 (expr -> MINUS expr .)
    NEQ             reduce using rule 42 (expr -> MINUS expr .)
    EQ              reduce using rule 42 (expr -> MINUS expr .)
    GT              reduce using rule 42 (expr -> MINUS expr .)
    GTE             reduce using rule 42 (expr -> MINUS expr .)
    LT              reduce using rule 42 (expr -> MINUS expr .)
    LTE             reduce using rule 42 (expr -> MINUS expr .)
    SEMICOLON       reduce using rule 42 (expr -> MINUS expr .)
    FUN             reduce using rule 42 (expr -> MINUS expr .)
    $end            reduce using rule 42 (expr -> MINUS expr .)
    ID              reduce using rule 42 (expr -> MINUS expr .)
    END             reduce using rule 42 (expr -> MINUS expr .)
    ELSE            reduce using rule 42 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 42 (expr -> MINUS expr .)
    COMMA           reduce using rule 42 (expr -> MINUS expr .)
    RPAREN          reduce using rule 42 (expr -> MINUS expr .)
    THEN            reduce using rule 42 (expr -> MINUS expr .)
    DO              reduce using rule 42 (expr -> MINUS expr .)


state 96

    (9) statement -> BEGIN statementList END .
    SEMICOLON       reduce using rule 9 (statement -> BEGIN statementList END .)
    FUN             reduce using rule 9 (statement -> BEGIN statementList END .)
    $end            reduce using rule 9 (statement -> BEGIN statementList END .)
    ID              reduce using rule 9 (statement -> BEGIN statementList END .)
    END             reduce using rule 9 (statement -> BEGIN statementList END .)
    ELSE            reduce using rule 9 (statement -> BEGIN statementList END .)


state 97

    (40) expr -> LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 110
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 98

    (14) statement -> READ LPAREN location . RPAREN
    RPAREN          shift and go to state 120


state 99

    (61) location -> ID . LBRACKET ID RBRACKET
    (62) location -> ID . LBRACKET INT RBRACKET
    (63) location -> ID .
    LBRACKET        shift and go to state 121
    RPAREN          reduce using rule 63 (location -> ID .)


state 100

    (15) statement -> WRITE LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 122
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 101

    (16) statement -> PRINT LPAREN STRING . RPAREN
    RPAREN          shift and go to state 123


state 102

    (19) statement -> WHILE relation DO . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 107
    WHILE           shift and go to state 34

    statement                      shift and go to state 124

state 103

    (57) vectorType -> TFLOAT LBRACKET expr RBRACKET .
    SEMICOLON       reduce using rule 57 (vectorType -> TFLOAT LBRACKET expr RBRACKET .)


state 104

    (58) vectorType -> TINT LBRACKET expr RBRACKET .
    SEMICOLON       reduce using rule 58 (vectorType -> TINT LBRACKET expr RBRACKET .)


state 105

    (12) statement -> ID LPAREN exprList RPAREN .
    SEMICOLON       reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    FUN             reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    $end            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    ID              reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 12 (statement -> ID LPAREN exprList RPAREN .)


state 106

    (33) exprList -> expr COMMA . exprList
    (32) exprList -> . expr
    (33) exprList -> . expr COMMA exprList
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    LPAREN          shift and go to state 61
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    expr                           shift and go to state 70
    exprList                       shift and go to state 125
    number                         shift and go to state 53

state 107

    (18) statement -> IF . relation THEN statement ELSE statement
    (21) relation -> . LPAREN relation RPAREN
    (22) relation -> . NOT relation
    (23) relation -> . expr relExpr expr
    (34) expr -> . TFLOAT LPAREN expr RPAREN
    (35) expr -> . TINT LPAREN expr RPAREN
    (36) expr -> . number
    (37) expr -> . ID LBRACKET expr RBRACKET
    (38) expr -> . ID
    (39) expr -> . ID LPAREN exprList RPAREN
    (40) expr -> . LPAREN expr RPAREN
    (41) expr -> . PLUS expr
    (42) expr -> . MINUS expr
    (43) expr -> . expr DIVIDE expr
    (44) expr -> . expr TIMES expr
    (45) expr -> . expr MINUS expr
    (46) expr -> . expr PLUS expr
    (59) number -> . FLOAT
    (60) number -> . INT
    LPAREN          shift and go to state 48
    NOT             shift and go to state 49
    TFLOAT          shift and go to state 51
    TINT            shift and go to state 52
    ID              shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    FLOAT           shift and go to state 57
    INT             shift and go to state 58

    relation                       shift and go to state 126
    expr                           shift and go to state 50
    number                         shift and go to state 53

state 108

    (20) noStatement -> IF relation THEN statement .
    (18) statement -> IF relation THEN statement . ELSE statement
    SEMICOLON       reduce using rule 20 (noStatement -> IF relation THEN statement .)
    FUN             reduce using rule 20 (noStatement -> IF relation THEN statement .)
    $end            reduce using rule 20 (noStatement -> IF relation THEN statement .)
    ID              reduce using rule 20 (noStatement -> IF relation THEN statement .)
    END             reduce using rule 20 (noStatement -> IF relation THEN statement .)
    ELSE            shift and go to state 127


state 109

    (21) relation -> LPAREN relation RPAREN .
    THEN            reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    DO              reduce using rule 21 (relation -> LPAREN relation RPAREN .)
    RPAREN          reduce using rule 21 (relation -> LPAREN relation RPAREN .)


state 110

    (40) expr -> LPAREN expr RPAREN .
    DIVIDE          reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    NEQ             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    EQ              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    GTE             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    LTE             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    FUN             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    ID              reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 40 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 40 (expr -> LPAREN expr RPAREN .)


state 111

    (23) relation -> expr relExpr expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    THEN            reduce using rule 23 (relation -> expr relExpr expr .)
    DO              reduce using rule 23 (relation -> expr relExpr expr .)
    RPAREN          reduce using rule 23 (relation -> expr relExpr expr .)
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 112

    (43) expr -> expr DIVIDE expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 43 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 43 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 43 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 43 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 43 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 43 (expr -> expr DIVIDE expr .)
    NEQ             reduce using rule 43 (expr -> expr DIVIDE expr .)
    EQ              reduce using rule 43 (expr -> expr DIVIDE expr .)
    GT              reduce using rule 43 (expr -> expr DIVIDE expr .)
    GTE             reduce using rule 43 (expr -> expr DIVIDE expr .)
    LT              reduce using rule 43 (expr -> expr DIVIDE expr .)
    LTE             reduce using rule 43 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 43 (expr -> expr DIVIDE expr .)
    FUN             reduce using rule 43 (expr -> expr DIVIDE expr .)
    $end            reduce using rule 43 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 43 (expr -> expr DIVIDE expr .)
    END             reduce using rule 43 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 43 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 43 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 43 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 43 (expr -> expr DIVIDE expr .)
    THEN            reduce using rule 43 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 43 (expr -> expr DIVIDE expr .)


state 113

    (44) expr -> expr TIMES expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    DIVIDE          reduce using rule 44 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 44 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 44 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 44 (expr -> expr TIMES expr .)
    OR              reduce using rule 44 (expr -> expr TIMES expr .)
    AND             reduce using rule 44 (expr -> expr TIMES expr .)
    NEQ             reduce using rule 44 (expr -> expr TIMES expr .)
    EQ              reduce using rule 44 (expr -> expr TIMES expr .)
    GT              reduce using rule 44 (expr -> expr TIMES expr .)
    GTE             reduce using rule 44 (expr -> expr TIMES expr .)
    LT              reduce using rule 44 (expr -> expr TIMES expr .)
    LTE             reduce using rule 44 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 44 (expr -> expr TIMES expr .)
    FUN             reduce using rule 44 (expr -> expr TIMES expr .)
    $end            reduce using rule 44 (expr -> expr TIMES expr .)
    ID              reduce using rule 44 (expr -> expr TIMES expr .)
    END             reduce using rule 44 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 44 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 44 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 44 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 44 (expr -> expr TIMES expr .)
    THEN            reduce using rule 44 (expr -> expr TIMES expr .)
    DO              reduce using rule 44 (expr -> expr TIMES expr .)


state 114

    (45) expr -> expr MINUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    MINUS           reduce using rule 45 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 45 (expr -> expr MINUS expr .)
    OR              reduce using rule 45 (expr -> expr MINUS expr .)
    AND             reduce using rule 45 (expr -> expr MINUS expr .)
    NEQ             reduce using rule 45 (expr -> expr MINUS expr .)
    EQ              reduce using rule 45 (expr -> expr MINUS expr .)
    GT              reduce using rule 45 (expr -> expr MINUS expr .)
    GTE             reduce using rule 45 (expr -> expr MINUS expr .)
    LT              reduce using rule 45 (expr -> expr MINUS expr .)
    LTE             reduce using rule 45 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 45 (expr -> expr MINUS expr .)
    FUN             reduce using rule 45 (expr -> expr MINUS expr .)
    $end            reduce using rule 45 (expr -> expr MINUS expr .)
    ID              reduce using rule 45 (expr -> expr MINUS expr .)
    END             reduce using rule 45 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 45 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 45 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 45 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 45 (expr -> expr MINUS expr .)
    THEN            reduce using rule 45 (expr -> expr MINUS expr .)
    DO              reduce using rule 45 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79


state 115

    (46) expr -> expr PLUS expr .
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    MINUS           reduce using rule 46 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 46 (expr -> expr PLUS expr .)
    OR              reduce using rule 46 (expr -> expr PLUS expr .)
    AND             reduce using rule 46 (expr -> expr PLUS expr .)
    NEQ             reduce using rule 46 (expr -> expr PLUS expr .)
    EQ              reduce using rule 46 (expr -> expr PLUS expr .)
    GT              reduce using rule 46 (expr -> expr PLUS expr .)
    GTE             reduce using rule 46 (expr -> expr PLUS expr .)
    LT              reduce using rule 46 (expr -> expr PLUS expr .)
    LTE             reduce using rule 46 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 46 (expr -> expr PLUS expr .)
    FUN             reduce using rule 46 (expr -> expr PLUS expr .)
    $end            reduce using rule 46 (expr -> expr PLUS expr .)
    ID              reduce using rule 46 (expr -> expr PLUS expr .)
    END             reduce using rule 46 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 46 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 46 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 46 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 46 (expr -> expr PLUS expr .)
    THEN            reduce using rule 46 (expr -> expr PLUS expr .)
    DO              reduce using rule 46 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79


state 116

    (34) expr -> TFLOAT LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 128
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 117

    (35) expr -> TINT LPAREN expr . RPAREN
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RPAREN          shift and go to state 129
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 118

    (37) expr -> ID LBRACKET expr . RBRACKET
    (43) expr -> expr . DIVIDE expr
    (44) expr -> expr . TIMES expr
    (45) expr -> expr . MINUS expr
    (46) expr -> expr . PLUS expr
    RBRACKET        shift and go to state 130
    DIVIDE          shift and go to state 78
    TIMES           shift and go to state 79
    MINUS           shift and go to state 80
    PLUS            shift and go to state 81


state 119

    (39) expr -> ID LPAREN exprList . RPAREN
    RPAREN          shift and go to state 131


state 120

    (14) statement -> READ LPAREN location RPAREN .
    SEMICOLON       reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    FUN             reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    $end            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    ID              reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    END             reduce using rule 14 (statement -> READ LPAREN location RPAREN .)
    ELSE            reduce using rule 14 (statement -> READ LPAREN location RPAREN .)


state 121

    (61) location -> ID LBRACKET . ID RBRACKET
    (62) location -> ID LBRACKET . INT RBRACKET
    ID              shift and go to state 132
    INT             shift and go to state 133


state 122

    (15) statement -> WRITE LPAREN expr RPAREN .
    SEMICOLON       reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    FUN             reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    $end            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    ID              reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    END             reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)
    ELSE            reduce using rule 15 (statement -> WRITE LPAREN expr RPAREN .)


state 123

    (16) statement -> PRINT LPAREN STRING RPAREN .
    SEMICOLON       reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    FUN             reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    ID              reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    END             reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)
    ELSE            reduce using rule 16 (statement -> PRINT LPAREN STRING RPAREN .)


state 124

    (19) statement -> WHILE relation DO statement .
    SEMICOLON       reduce using rule 19 (statement -> WHILE relation DO statement .)
    FUN             reduce using rule 19 (statement -> WHILE relation DO statement .)
    $end            reduce using rule 19 (statement -> WHILE relation DO statement .)
    ID              reduce using rule 19 (statement -> WHILE relation DO statement .)
    END             reduce using rule 19 (statement -> WHILE relation DO statement .)
    ELSE            reduce using rule 19 (statement -> WHILE relation DO statement .)


state 125

    (33) exprList -> expr COMMA exprList .
    RPAREN          reduce using rule 33 (exprList -> expr COMMA exprList .)


state 126

    (18) statement -> IF relation . THEN statement ELSE statement
    THEN            shift and go to state 134


state 127

    (18) statement -> IF relation THEN statement ELSE . statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 107
    WHILE           shift and go to state 34

    statement                      shift and go to state 135

state 128

    (34) expr -> TFLOAT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    TIMES           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    MINUS           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    PLUS            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    OR              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    AND             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    NEQ             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    EQ              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    GT              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    GTE             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    LT              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    LTE             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    FUN             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    $end            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    ID              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    END             reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    ELSE            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    COMMA           reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    THEN            reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)
    DO              reduce using rule 34 (expr -> TFLOAT LPAREN expr RPAREN .)


state 129

    (35) expr -> TINT LPAREN expr RPAREN .
    DIVIDE          reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    TIMES           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    MINUS           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    PLUS            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    OR              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    AND             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    NEQ             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    EQ              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    GT              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    GTE             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    LT              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    LTE             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    FUN             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    $end            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    ID              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    END             reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    ELSE            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    COMMA           reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    RPAREN          reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    THEN            reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)
    DO              reduce using rule 35 (expr -> TINT LPAREN expr RPAREN .)


state 130

    (37) expr -> ID LBRACKET expr RBRACKET .
    DIVIDE          reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    OR              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    AND             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    NEQ             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    EQ              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    GT              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    GTE             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    LT              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    LTE             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    FUN             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    $end            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    ID              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    END             reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    ELSE            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    COMMA           reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    THEN            reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)
    DO              reduce using rule 37 (expr -> ID LBRACKET expr RBRACKET .)


state 131

    (39) expr -> ID LPAREN exprList RPAREN .
    DIVIDE          reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    TIMES           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    MINUS           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    PLUS            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    OR              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    AND             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    NEQ             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    EQ              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    GT              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    GTE             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    LT              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    LTE             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    SEMICOLON       reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    FUN             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    $end            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    ID              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    END             reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    ELSE            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    RBRACKET        reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    COMMA           reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    RPAREN          reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    THEN            reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)
    DO              reduce using rule 39 (expr -> ID LPAREN exprList RPAREN .)


state 132

    (61) location -> ID LBRACKET ID . RBRACKET
    RBRACKET        shift and go to state 136


state 133

    (62) location -> ID LBRACKET INT . RBRACKET
    RBRACKET        shift and go to state 137


state 134

    (18) statement -> IF relation THEN . statement ELSE statement
    (9) statement -> . BEGIN statementList END
    (10) statement -> . BREAK
    (11) statement -> . SKIP
    (12) statement -> . ID LPAREN exprList RPAREN
    (13) statement -> . RETURN expr
    (14) statement -> . READ LPAREN location RPAREN
    (15) statement -> . WRITE LPAREN expr RPAREN
    (16) statement -> . PRINT LPAREN STRING RPAREN
    (17) statement -> . ID ASSIGN expr
    (18) statement -> . IF relation THEN statement ELSE statement
    (19) statement -> . WHILE relation DO statement
    BEGIN           shift and go to state 27
    BREAK           shift and go to state 28
    SKIP            shift and go to state 29
    ID              shift and go to state 21
    RETURN          shift and go to state 30
    READ            shift and go to state 31
    WRITE           shift and go to state 32
    PRINT           shift and go to state 33
    IF              shift and go to state 107
    WHILE           shift and go to state 34

    statement                      shift and go to state 138

state 135

    (18) statement -> IF relation THEN statement ELSE statement .
    SEMICOLON       reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    FUN             reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    $end            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    ID              reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    END             reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)
    ELSE            reduce using rule 18 (statement -> IF relation THEN statement ELSE statement .)


state 136

    (61) location -> ID LBRACKET ID RBRACKET .
    RPAREN          reduce using rule 61 (location -> ID LBRACKET ID RBRACKET .)


state 137

    (62) location -> ID LBRACKET INT RBRACKET .
    RPAREN          reduce using rule 62 (location -> ID LBRACKET INT RBRACKET .)


state 138

    (18) statement -> IF relation THEN statement . ELSE statement
    ELSE            shift and go to state 127


Conflicts:

shift/reduce conflict for ID in state 14 resolved as shift
shift/reduce conflict for SEMICOLON in state 23 resolved as shift